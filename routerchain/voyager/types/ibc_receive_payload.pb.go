// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/voyager/ibc_receive_payload.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FundDepositEventPacket struct {
	SrcChainId         string                                 `protobuf:"bytes,1,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`
	SrcTimestamp       uint64                                 `protobuf:"varint,2,opt,name=src_timestamp,json=srcTimestamp,proto3" json:"src_timestamp,omitempty"`
	Contract           string                                 `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	DepositId          uint64                                 `protobuf:"varint,4,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	BlockHeight        uint64                                 `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	DestChainId        string                                 `protobuf:"bytes,6,opt,name=dest_chain_id,json=destChainId,proto3" json:"dest_chain_id,omitempty"`
	Amount             github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,7,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount"`
	DestAmount         github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,8,opt,name=dest_amount,json=destAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"dest_amount"`
	SrcToken           string                                 `protobuf:"bytes,9,opt,name=src_token,json=srcToken,proto3" json:"src_token,omitempty"`
	Recipient          []byte                                 `protobuf:"bytes,10,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Depositor          string                                 `protobuf:"bytes,11,opt,name=depositor,proto3" json:"depositor,omitempty"`
	PartnerId          uint64                                 `protobuf:"varint,12,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"`
	Message            []byte                                 `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
	DepositWithMessage bool                                   `protobuf:"varint,14,opt,name=deposit_with_message,json=depositWithMessage,proto3" json:"deposit_with_message,omitempty"`
	DestToken          []byte                                 `protobuf:"bytes,15,opt,name=dest_token,json=destToken,proto3" json:"dest_token,omitempty"`
}

func (m *FundDepositEventPacket) Reset()         { *m = FundDepositEventPacket{} }
func (m *FundDepositEventPacket) String() string { return proto.CompactTextString(m) }
func (*FundDepositEventPacket) ProtoMessage()    {}
func (*FundDepositEventPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c5357589377bf08, []int{0}
}
func (m *FundDepositEventPacket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FundDepositEventPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FundDepositEventPacket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FundDepositEventPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundDepositEventPacket.Merge(m, src)
}
func (m *FundDepositEventPacket) XXX_Size() int {
	return m.Size()
}
func (m *FundDepositEventPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_FundDepositEventPacket.DiscardUnknown(m)
}

var xxx_messageInfo_FundDepositEventPacket proto.InternalMessageInfo

func (m *FundDepositEventPacket) GetSrcChainId() string {
	if m != nil {
		return m.SrcChainId
	}
	return ""
}

func (m *FundDepositEventPacket) GetSrcTimestamp() uint64 {
	if m != nil {
		return m.SrcTimestamp
	}
	return 0
}

func (m *FundDepositEventPacket) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *FundDepositEventPacket) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *FundDepositEventPacket) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *FundDepositEventPacket) GetDestChainId() string {
	if m != nil {
		return m.DestChainId
	}
	return ""
}

func (m *FundDepositEventPacket) GetSrcToken() string {
	if m != nil {
		return m.SrcToken
	}
	return ""
}

func (m *FundDepositEventPacket) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *FundDepositEventPacket) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *FundDepositEventPacket) GetPartnerId() uint64 {
	if m != nil {
		return m.PartnerId
	}
	return 0
}

func (m *FundDepositEventPacket) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *FundDepositEventPacket) GetDepositWithMessage() bool {
	if m != nil {
		return m.DepositWithMessage
	}
	return false
}

func (m *FundDepositEventPacket) GetDestToken() []byte {
	if m != nil {
		return m.DestToken
	}
	return nil
}

type FundPaidEventPacket struct {
	SrcChainId             string `protobuf:"bytes,1,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`
	SrcTimestamp           uint64 `protobuf:"varint,2,opt,name=src_timestamp,json=srcTimestamp,proto3" json:"src_timestamp,omitempty"`
	Contract               string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce             uint64 `protobuf:"varint,4,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight            uint64 `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	MessageHash            []byte `protobuf:"bytes,6,opt,name=message_hash,json=messageHash,proto3" json:"message_hash,omitempty"`
	Forwarder              string `protobuf:"bytes,7,opt,name=forwarder,proto3" json:"forwarder,omitempty"`
	ForwarderRouterAddress string `protobuf:"bytes,8,opt,name=forwarder_router_address,json=forwarderRouterAddress,proto3" json:"forwarder_router_address,omitempty"`
	ExecData               []byte `protobuf:"bytes,9,opt,name=exec_data,json=execData,proto3" json:"exec_data,omitempty"`
	ExecStatus             bool   `protobuf:"varint,10,opt,name=exec_status,json=execStatus,proto3" json:"exec_status,omitempty"`
}

func (m *FundPaidEventPacket) Reset()         { *m = FundPaidEventPacket{} }
func (m *FundPaidEventPacket) String() string { return proto.CompactTextString(m) }
func (*FundPaidEventPacket) ProtoMessage()    {}
func (*FundPaidEventPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c5357589377bf08, []int{1}
}
func (m *FundPaidEventPacket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FundPaidEventPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FundPaidEventPacket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FundPaidEventPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundPaidEventPacket.Merge(m, src)
}
func (m *FundPaidEventPacket) XXX_Size() int {
	return m.Size()
}
func (m *FundPaidEventPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_FundPaidEventPacket.DiscardUnknown(m)
}

var xxx_messageInfo_FundPaidEventPacket proto.InternalMessageInfo

func (m *FundPaidEventPacket) GetSrcChainId() string {
	if m != nil {
		return m.SrcChainId
	}
	return ""
}

func (m *FundPaidEventPacket) GetSrcTimestamp() uint64 {
	if m != nil {
		return m.SrcTimestamp
	}
	return 0
}

func (m *FundPaidEventPacket) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *FundPaidEventPacket) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *FundPaidEventPacket) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *FundPaidEventPacket) GetMessageHash() []byte {
	if m != nil {
		return m.MessageHash
	}
	return nil
}

func (m *FundPaidEventPacket) GetForwarder() string {
	if m != nil {
		return m.Forwarder
	}
	return ""
}

func (m *FundPaidEventPacket) GetForwarderRouterAddress() string {
	if m != nil {
		return m.ForwarderRouterAddress
	}
	return ""
}

func (m *FundPaidEventPacket) GetExecData() []byte {
	if m != nil {
		return m.ExecData
	}
	return nil
}

func (m *FundPaidEventPacket) GetExecStatus() bool {
	if m != nil {
		return m.ExecStatus
	}
	return false
}

type DepositInfoUpdateEventPacket struct {
	DepositId          uint64                                 `protobuf:"varint,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	SrcChainId         string                                 `protobuf:"bytes,2,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`
	SrcTimestamp       uint64                                 `protobuf:"varint,3,opt,name=src_timestamp,json=srcTimestamp,proto3" json:"src_timestamp,omitempty"`
	Contract           string                                 `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce         uint64                                 `protobuf:"varint,5,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
	BlockHeight        uint64                                 `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	FeeAmount          github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,7,opt,name=fee_amount,json=feeAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"fee_amount"`
	InitiateWithdrawal bool                                   `protobuf:"varint,8,opt,name=initiate_withdrawal,json=initiateWithdrawal,proto3" json:"initiate_withdrawal,omitempty"`
	SrcToken           string                                 `protobuf:"bytes,9,opt,name=src_token,json=srcToken,proto3" json:"src_token,omitempty"`
	Depositor          string                                 `protobuf:"bytes,10,opt,name=depositor,proto3" json:"depositor,omitempty"`
}

func (m *DepositInfoUpdateEventPacket) Reset()         { *m = DepositInfoUpdateEventPacket{} }
func (m *DepositInfoUpdateEventPacket) String() string { return proto.CompactTextString(m) }
func (*DepositInfoUpdateEventPacket) ProtoMessage()    {}
func (*DepositInfoUpdateEventPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c5357589377bf08, []int{2}
}
func (m *DepositInfoUpdateEventPacket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DepositInfoUpdateEventPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DepositInfoUpdateEventPacket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DepositInfoUpdateEventPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositInfoUpdateEventPacket.Merge(m, src)
}
func (m *DepositInfoUpdateEventPacket) XXX_Size() int {
	return m.Size()
}
func (m *DepositInfoUpdateEventPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositInfoUpdateEventPacket.DiscardUnknown(m)
}

var xxx_messageInfo_DepositInfoUpdateEventPacket proto.InternalMessageInfo

func (m *DepositInfoUpdateEventPacket) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *DepositInfoUpdateEventPacket) GetSrcChainId() string {
	if m != nil {
		return m.SrcChainId
	}
	return ""
}

func (m *DepositInfoUpdateEventPacket) GetSrcTimestamp() uint64 {
	if m != nil {
		return m.SrcTimestamp
	}
	return 0
}

func (m *DepositInfoUpdateEventPacket) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *DepositInfoUpdateEventPacket) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *DepositInfoUpdateEventPacket) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *DepositInfoUpdateEventPacket) GetInitiateWithdrawal() bool {
	if m != nil {
		return m.InitiateWithdrawal
	}
	return false
}

func (m *DepositInfoUpdateEventPacket) GetSrcToken() string {
	if m != nil {
		return m.SrcToken
	}
	return ""
}

func (m *DepositInfoUpdateEventPacket) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

type IBCReceivePayload struct {
	// Types that are valid to be assigned to Request:
	//	*IBCReceivePayload_FundDepositEventPacket
	//	*IBCReceivePayload_FundPaidEventPacket
	//	*IBCReceivePayload_DepositInfoUpdateEventPacket
	Request isIBCReceivePayload_Request `protobuf_oneof:"request"`
}

func (m *IBCReceivePayload) Reset()         { *m = IBCReceivePayload{} }
func (m *IBCReceivePayload) String() string { return proto.CompactTextString(m) }
func (*IBCReceivePayload) ProtoMessage()    {}
func (*IBCReceivePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c5357589377bf08, []int{3}
}
func (m *IBCReceivePayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IBCReceivePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IBCReceivePayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IBCReceivePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IBCReceivePayload.Merge(m, src)
}
func (m *IBCReceivePayload) XXX_Size() int {
	return m.Size()
}
func (m *IBCReceivePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_IBCReceivePayload.DiscardUnknown(m)
}

var xxx_messageInfo_IBCReceivePayload proto.InternalMessageInfo

type isIBCReceivePayload_Request interface {
	isIBCReceivePayload_Request()
	MarshalTo([]byte) (int, error)
	Size() int
}

type IBCReceivePayload_FundDepositEventPacket struct {
	FundDepositEventPacket *FundDepositEventPacket `protobuf:"bytes,1,opt,name=fund_deposit_event_packet,json=fundDepositEventPacket,proto3,oneof" json:"fund_deposit_event_packet,omitempty"`
}
type IBCReceivePayload_FundPaidEventPacket struct {
	FundPaidEventPacket *FundPaidEventPacket `protobuf:"bytes,2,opt,name=fund_paid_event_packet,json=fundPaidEventPacket,proto3,oneof" json:"fund_paid_event_packet,omitempty"`
}
type IBCReceivePayload_DepositInfoUpdateEventPacket struct {
	DepositInfoUpdateEventPacket *DepositInfoUpdateEventPacket `protobuf:"bytes,3,opt,name=deposit_info_update_event_packet,json=depositInfoUpdateEventPacket,proto3,oneof" json:"deposit_info_update_event_packet,omitempty"`
}

func (*IBCReceivePayload_FundDepositEventPacket) isIBCReceivePayload_Request()       {}
func (*IBCReceivePayload_FundPaidEventPacket) isIBCReceivePayload_Request()          {}
func (*IBCReceivePayload_DepositInfoUpdateEventPacket) isIBCReceivePayload_Request() {}

func (m *IBCReceivePayload) GetRequest() isIBCReceivePayload_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *IBCReceivePayload) GetFundDepositEventPacket() *FundDepositEventPacket {
	if x, ok := m.GetRequest().(*IBCReceivePayload_FundDepositEventPacket); ok {
		return x.FundDepositEventPacket
	}
	return nil
}

func (m *IBCReceivePayload) GetFundPaidEventPacket() *FundPaidEventPacket {
	if x, ok := m.GetRequest().(*IBCReceivePayload_FundPaidEventPacket); ok {
		return x.FundPaidEventPacket
	}
	return nil
}

func (m *IBCReceivePayload) GetDepositInfoUpdateEventPacket() *DepositInfoUpdateEventPacket {
	if x, ok := m.GetRequest().(*IBCReceivePayload_DepositInfoUpdateEventPacket); ok {
		return x.DepositInfoUpdateEventPacket
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IBCReceivePayload) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IBCReceivePayload_FundDepositEventPacket)(nil),
		(*IBCReceivePayload_FundPaidEventPacket)(nil),
		(*IBCReceivePayload_DepositInfoUpdateEventPacket)(nil),
	}
}

func init() {
	proto.RegisterType((*FundDepositEventPacket)(nil), "routerprotocol.routerchain.voyager.FundDepositEventPacket")
	proto.RegisterType((*FundPaidEventPacket)(nil), "routerprotocol.routerchain.voyager.FundPaidEventPacket")
	proto.RegisterType((*DepositInfoUpdateEventPacket)(nil), "routerprotocol.routerchain.voyager.DepositInfoUpdateEventPacket")
	proto.RegisterType((*IBCReceivePayload)(nil), "routerprotocol.routerchain.voyager.IBCReceivePayload")
}

func init() {
	proto.RegisterFile("routerchain/voyager/ibc_receive_payload.proto", fileDescriptor_9c5357589377bf08)
}

var fileDescriptor_9c5357589377bf08 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xf7, 0xc6, 0x69, 0x62, 0x3f, 0x3b, 0x20, 0x36, 0x55, 0xb4, 0x94, 0xe0, 0xb8, 0x46, 0x42,
	0xb9, 0xc4, 0x46, 0x70, 0x28, 0xe2, 0x44, 0xd3, 0x52, 0xd9, 0x87, 0x42, 0x58, 0x40, 0x95, 0xb8,
	0x8c, 0x26, 0x3b, 0xcf, 0xde, 0x51, 0xe2, 0x99, 0x65, 0x66, 0x9c, 0x34, 0x5f, 0x81, 0x13, 0x07,
	0xee, 0x7c, 0x9d, 0x1e, 0x7b, 0x44, 0x48, 0x54, 0x28, 0xf9, 0x0c, 0xdc, 0xd1, 0xbc, 0xd9, 0xb5,
	0x93, 0x10, 0xc5, 0x11, 0x48, 0x3d, 0xd9, 0xf3, 0x7b, 0xff, 0x66, 0xde, 0xef, 0xf7, 0xde, 0xc2,
	0x9e, 0xd1, 0x33, 0x87, 0x26, 0xcb, 0xb9, 0x54, 0x83, 0x13, 0x7d, 0xc6, 0x27, 0x68, 0x06, 0xf2,
	0x30, 0x63, 0x06, 0x33, 0x94, 0x27, 0xc8, 0x0a, 0x7e, 0x76, 0xac, 0xb9, 0xe8, 0x17, 0x46, 0x3b,
	0x1d, 0xf7, 0x82, 0x3b, 0x1d, 0x32, 0x7d, 0xdc, 0xbf, 0x14, 0xdd, 0x2f, 0xa3, 0x1f, 0xdc, 0x9f,
	0xe8, 0x89, 0x26, 0x8f, 0x81, 0xff, 0x17, 0x22, 0x7b, 0x7f, 0xae, 0xc2, 0xd6, 0xb3, 0x99, 0x12,
	0x4f, 0xb1, 0xd0, 0x56, 0xba, 0xaf, 0x4e, 0x50, 0xb9, 0x03, 0x9e, 0x1d, 0xa1, 0x8b, 0xbb, 0xd0,
	0xb6, 0x26, 0x63, 0x94, 0x85, 0x49, 0x91, 0x44, 0xdd, 0x68, 0xb7, 0x99, 0x82, 0x35, 0xd9, 0x13,
	0x0f, 0x8d, 0x44, 0xfc, 0x11, 0x6c, 0x78, 0x0f, 0x27, 0xa7, 0x68, 0x1d, 0x9f, 0x16, 0xc9, 0x4a,
	0x37, 0xda, 0x5d, 0x4d, 0x7d, 0xd8, 0xf7, 0x15, 0x16, 0x3f, 0x80, 0x46, 0xa6, 0x95, 0x33, 0x3c,
	0x73, 0x49, 0x9d, 0x52, 0xcc, 0xcf, 0xf1, 0x87, 0x00, 0x22, 0x14, 0xf6, 0x05, 0x56, 0x29, 0xba,
	0x59, 0x22, 0x23, 0x11, 0x3f, 0x84, 0xf6, 0xe1, 0xb1, 0xce, 0x8e, 0x58, 0x8e, 0x72, 0x92, 0xbb,
	0xe4, 0x1e, 0x39, 0xb4, 0x08, 0x1b, 0x12, 0x14, 0xf7, 0x60, 0x43, 0xa0, 0x75, 0x8b, 0x5b, 0xae,
	0x51, 0x89, 0x96, 0x07, 0xab, 0x6b, 0x3e, 0x83, 0x35, 0x3e, 0xd5, 0x33, 0xe5, 0x92, 0x75, 0x6f,
	0xdc, 0xef, 0xbf, 0x7a, 0xb3, 0x53, 0xfb, 0xe3, 0xcd, 0xce, 0xc7, 0x13, 0xe9, 0xf2, 0xd9, 0x61,
	0x3f, 0xd3, 0xd3, 0x41, 0xa6, 0xed, 0x54, 0xdb, 0xf2, 0x67, 0xcf, 0x8a, 0xa3, 0x81, 0x3b, 0x2b,
	0xd0, 0xf6, 0x47, 0xca, 0xa5, 0x65, 0x74, 0xfc, 0x0d, 0x50, 0x5a, 0x56, 0x26, 0x6b, 0xfc, 0xa7,
	0x64, 0xe0, 0x53, 0x3c, 0x0e, 0x09, 0x3f, 0x80, 0x26, 0xf5, 0x4f, 0x1f, 0xa1, 0x4a, 0x9a, 0xa1,
	0x37, 0xbe, 0x77, 0xfe, 0x1c, 0x6f, 0x43, 0xd3, 0x60, 0x26, 0x0b, 0x89, 0xca, 0x25, 0xd0, 0x8d,
	0x76, 0xdb, 0xe9, 0x02, 0xf0, 0xd6, 0xb2, 0x4f, 0xda, 0x24, 0x2d, 0x0a, 0x5d, 0x00, 0xbe, 0xaf,
	0x05, 0x37, 0x4e, 0xa1, 0xf1, 0x2d, 0x69, 0x87, 0xbe, 0x96, 0xc8, 0x48, 0xc4, 0x09, 0xac, 0x4f,
	0xd1, 0x5a, 0x3e, 0xc1, 0x64, 0x83, 0x12, 0x57, 0xc7, 0xf8, 0x13, 0xb8, 0x5f, 0x11, 0x72, 0x2a,
	0x5d, 0xce, 0x2a, 0xb7, 0x77, 0xba, 0xd1, 0x6e, 0x23, 0x8d, 0x4b, 0xdb, 0x0b, 0xe9, 0xf2, 0xe7,
	0x65, 0x04, 0x51, 0x68, 0x5d, 0xf9, 0x88, 0x77, 0xc3, 0x3d, 0x3d, 0x42, 0xaf, 0xe8, 0xfd, 0xbd,
	0x02, 0x9b, 0x5e, 0x5f, 0x07, 0x5c, 0x8a, 0xb7, 0x2c, 0xae, 0x1d, 0x68, 0xa1, 0xaf, 0xc8, 0x94,
	0x56, 0x19, 0x96, 0xea, 0x02, 0x82, 0xbe, 0xf6, 0xc8, 0x5d, 0xe4, 0xf5, 0x10, 0xda, 0x65, 0x0b,
	0x58, 0xce, 0x6d, 0x4e, 0xea, 0x6a, 0xa7, 0xad, 0x12, 0x1b, 0x72, 0x9b, 0x7b, 0x26, 0xc6, 0xda,
	0x9c, 0x72, 0x23, 0xd0, 0x04, 0x81, 0xa5, 0x0b, 0x20, 0xfe, 0x1c, 0x92, 0xf9, 0x81, 0x85, 0xb1,
	0x64, 0x5c, 0x08, 0x83, 0xd6, 0x06, 0x01, 0xa5, 0x5b, 0x73, 0x7b, 0x4a, 0xe6, 0xc7, 0xc1, 0xea,
	0xc5, 0x81, 0x2f, 0x31, 0x63, 0x82, 0x3b, 0x4e, 0xe2, 0x68, 0xa7, 0x0d, 0x0f, 0x3c, 0xe5, 0x8e,
	0xd3, 0xdb, 0xbc, 0xd1, 0x3a, 0xee, 0x66, 0x96, 0xe4, 0xd1, 0x48, 0xc1, 0x43, 0xdf, 0x11, 0xd2,
	0xfb, 0xad, 0x0e, 0xdb, 0xe5, 0x4c, 0x8f, 0xd4, 0x58, 0xff, 0x50, 0x08, 0xee, 0xf0, 0x32, 0x01,
	0x57, 0x47, 0x2f, 0xba, 0x3e, 0x7a, 0xd7, 0xf9, 0x59, 0x59, 0xce, 0x4f, 0x7d, 0x09, 0x3f, 0xab,
	0xb7, 0xf3, 0x73, 0x6f, 0x29, 0x3f, 0x6b, 0xff, 0xe6, 0xe7, 0x39, 0xc0, 0x18, 0x91, 0xfd, 0xaf,
	0xf1, 0x6e, 0x8e, 0x11, 0xcb, 0x81, 0x1c, 0xc0, 0xa6, 0x54, 0xd2, 0x49, 0xee, 0x90, 0xf4, 0x2f,
	0x0c, 0x3f, 0xe5, 0xc7, 0x44, 0x54, 0x23, 0x8d, 0x2b, 0xd3, 0x8b, 0xb9, 0x65, 0xe9, 0x04, 0x2f,
	0x66, 0x14, 0xae, 0xcd, 0x68, 0xef, 0xd7, 0x3a, 0xbc, 0x37, 0xda, 0x7f, 0x92, 0x86, 0x85, 0x7e,
	0x10, 0xf6, 0x79, 0x7c, 0x0a, 0xef, 0x8f, 0x67, 0x4a, 0xb0, 0x8a, 0x9b, 0xd0, 0xa1, 0x82, 0x38,
	0x23, 0x96, 0x5a, 0x9f, 0x7e, 0xd1, 0x5f, 0xbe, 0xed, 0xfb, 0x37, 0xef, 0xf4, 0x61, 0x2d, 0xdd,
	0x1a, 0xdf, 0xbc, 0xed, 0x15, 0x90, 0x85, 0x15, 0x5c, 0x8a, 0xab, 0x55, 0x57, 0xa8, 0xea, 0xa3,
	0xbb, 0x56, 0xbd, 0x36, 0xe9, 0xc3, 0x5a, 0xba, 0x39, 0xbe, 0x61, 0x01, 0xfc, 0x1c, 0x41, 0x77,
	0x2e, 0x40, 0x35, 0xd6, 0x6c, 0x46, 0x12, 0xbd, 0x5a, 0xba, 0x4e, 0xa5, 0xbf, 0xbc, 0x4b, 0xe9,
	0xdb, 0xc4, 0x3e, 0xac, 0xa5, 0xdb, 0xe2, 0x16, 0xfb, 0x7e, 0x13, 0xd6, 0x0d, 0xfe, 0x34, 0x43,
	0xeb, 0xf6, 0xbf, 0x7d, 0x75, 0xde, 0x89, 0x5e, 0x9f, 0x77, 0xa2, 0xbf, 0xce, 0x3b, 0xd1, 0x2f,
	0x17, 0x9d, 0xda, 0xeb, 0x8b, 0x4e, 0xed, 0xf7, 0x8b, 0x4e, 0xed, 0xc7, 0x47, 0x97, 0xf4, 0x14,
	0x6e, 0xb0, 0x57, 0xdd, 0xa8, 0x3a, 0x87, 0xef, 0xf5, 0xcb, 0xf9, 0x17, 0x9b, 0x44, 0x76, 0xb8,
	0x46, 0x6e, 0x9f, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xd2, 0x98, 0x9f, 0xd5, 0x07, 0x00,
	0x00,
}

func (m *FundDepositEventPacket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FundDepositEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FundDepositEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DestToken) > 0 {
		i -= len(m.DestToken)
		copy(dAtA[i:], m.DestToken)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.DestToken)))
		i--
		dAtA[i] = 0x7a
	}
	if m.DepositWithMessage {
		i--
		if m.DepositWithMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x6a
	}
	if m.PartnerId != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.PartnerId))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.SrcToken) > 0 {
		i -= len(m.SrcToken)
		copy(dAtA[i:], m.SrcToken)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.SrcToken)))
		i--
		dAtA[i] = 0x4a
	}
	{
		size := m.DestAmount.Size()
		i -= size
		if _, err := m.DestAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.DestChainId) > 0 {
		i -= len(m.DestChainId)
		copy(dAtA[i:], m.DestChainId)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.DestChainId)))
		i--
		dAtA[i] = 0x32
	}
	if m.BlockHeight != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x28
	}
	if m.DepositId != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SrcTimestamp != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.SrcTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if len(m.SrcChainId) > 0 {
		i -= len(m.SrcChainId)
		copy(dAtA[i:], m.SrcChainId)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.SrcChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FundPaidEventPacket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FundPaidEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FundPaidEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExecStatus {
		i--
		if m.ExecStatus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.ExecData) > 0 {
		i -= len(m.ExecData)
		copy(dAtA[i:], m.ExecData)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.ExecData)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ForwarderRouterAddress) > 0 {
		i -= len(m.ForwarderRouterAddress)
		copy(dAtA[i:], m.ForwarderRouterAddress)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.ForwarderRouterAddress)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Forwarder) > 0 {
		i -= len(m.Forwarder)
		copy(dAtA[i:], m.Forwarder)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Forwarder)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.MessageHash) > 0 {
		i -= len(m.MessageHash)
		copy(dAtA[i:], m.MessageHash)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.MessageHash)))
		i--
		dAtA[i] = 0x32
	}
	if m.BlockHeight != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x28
	}
	if m.EventNonce != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SrcTimestamp != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.SrcTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if len(m.SrcChainId) > 0 {
		i -= len(m.SrcChainId)
		copy(dAtA[i:], m.SrcChainId)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.SrcChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DepositInfoUpdateEventPacket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DepositInfoUpdateEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DepositInfoUpdateEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.SrcToken) > 0 {
		i -= len(m.SrcToken)
		copy(dAtA[i:], m.SrcToken)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.SrcToken)))
		i--
		dAtA[i] = 0x4a
	}
	if m.InitiateWithdrawal {
		i--
		if m.InitiateWithdrawal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	{
		size := m.FeeAmount.Size()
		i -= size
		if _, err := m.FeeAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if m.BlockHeight != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x30
	}
	if m.EventNonce != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x22
	}
	if m.SrcTimestamp != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.SrcTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SrcChainId) > 0 {
		i -= len(m.SrcChainId)
		copy(dAtA[i:], m.SrcChainId)
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(len(m.SrcChainId)))
		i--
		dAtA[i] = 0x12
	}
	if m.DepositId != 0 {
		i = encodeVarintIbcReceivePayload(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *IBCReceivePayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IBCReceivePayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBCReceivePayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Request != nil {
		{
			size := m.Request.Size()
			i -= size
			if _, err := m.Request.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *IBCReceivePayload_FundDepositEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBCReceivePayload_FundDepositEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FundDepositEventPacket != nil {
		{
			size, err := m.FundDepositEventPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *IBCReceivePayload_FundPaidEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBCReceivePayload_FundPaidEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FundPaidEventPacket != nil {
		{
			size, err := m.FundPaidEventPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *IBCReceivePayload_DepositInfoUpdateEventPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBCReceivePayload_DepositInfoUpdateEventPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DepositInfoUpdateEventPacket != nil {
		{
			size, err := m.DepositInfoUpdateEventPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIbcReceivePayload(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func encodeVarintIbcReceivePayload(dAtA []byte, offset int, v uint64) int {
	offset -= sovIbcReceivePayload(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FundDepositEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SrcChainId)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.SrcTimestamp != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.SrcTimestamp))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.DepositId != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.DepositId))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.BlockHeight))
	}
	l = len(m.DestChainId)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovIbcReceivePayload(uint64(l))
	l = m.DestAmount.Size()
	n += 1 + l + sovIbcReceivePayload(uint64(l))
	l = len(m.SrcToken)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.PartnerId != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.PartnerId))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.DepositWithMessage {
		n += 2
	}
	l = len(m.DestToken)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	return n
}

func (m *FundPaidEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SrcChainId)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.SrcTimestamp != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.SrcTimestamp))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.BlockHeight))
	}
	l = len(m.MessageHash)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.Forwarder)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.ForwarderRouterAddress)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.ExecData)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.ExecStatus {
		n += 2
	}
	return n
}

func (m *DepositInfoUpdateEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DepositId != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.DepositId))
	}
	l = len(m.SrcChainId)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.SrcTimestamp != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.SrcTimestamp))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovIbcReceivePayload(uint64(m.BlockHeight))
	}
	l = m.FeeAmount.Size()
	n += 1 + l + sovIbcReceivePayload(uint64(l))
	if m.InitiateWithdrawal {
		n += 2
	}
	l = len(m.SrcToken)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	return n
}

func (m *IBCReceivePayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Request != nil {
		n += m.Request.Size()
	}
	return n
}

func (m *IBCReceivePayload_FundDepositEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FundDepositEventPacket != nil {
		l = m.FundDepositEventPacket.Size()
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	return n
}
func (m *IBCReceivePayload_FundPaidEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FundPaidEventPacket != nil {
		l = m.FundPaidEventPacket.Size()
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	return n
}
func (m *IBCReceivePayload_DepositInfoUpdateEventPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DepositInfoUpdateEventPacket != nil {
		l = m.DepositInfoUpdateEventPacket.Size()
		n += 1 + l + sovIbcReceivePayload(uint64(l))
	}
	return n
}

func sovIbcReceivePayload(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozIbcReceivePayload(x uint64) (n int) {
	return sovIbcReceivePayload(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FundDepositEventPacket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIbcReceivePayload
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FundDepositEventPacket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FundDepositEventPacket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTimestamp", wireType)
			}
			m.SrcTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DestAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = append(m.Recipient[:0], dAtA[iNdEx:postIndex]...)
			if m.Recipient == nil {
				m.Recipient = []byte{}
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartnerId", wireType)
			}
			m.PartnerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PartnerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = append(m.Message[:0], dAtA[iNdEx:postIndex]...)
			if m.Message == nil {
				m.Message = []byte{}
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositWithMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DepositWithMessage = bool(v != 0)
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestToken = append(m.DestToken[:0], dAtA[iNdEx:postIndex]...)
			if m.DestToken == nil {
				m.DestToken = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIbcReceivePayload(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FundPaidEventPacket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIbcReceivePayload
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FundPaidEventPacket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FundPaidEventPacket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTimestamp", wireType)
			}
			m.SrcTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageHash = append(m.MessageHash[:0], dAtA[iNdEx:postIndex]...)
			if m.MessageHash == nil {
				m.MessageHash = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Forwarder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Forwarder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwarderRouterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwarderRouterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecData = append(m.ExecData[:0], dAtA[iNdEx:postIndex]...)
			if m.ExecData == nil {
				m.ExecData = []byte{}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecStatus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExecStatus = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipIbcReceivePayload(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DepositInfoUpdateEventPacket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIbcReceivePayload
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DepositInfoUpdateEventPacket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DepositInfoUpdateEventPacket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTimestamp", wireType)
			}
			m.SrcTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FeeAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiateWithdrawal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitiateWithdrawal = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIbcReceivePayload(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IBCReceivePayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIbcReceivePayload
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IBCReceivePayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IBCReceivePayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FundDepositEventPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FundDepositEventPacket{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &IBCReceivePayload_FundDepositEventPacket{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FundPaidEventPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FundPaidEventPacket{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &IBCReceivePayload_FundPaidEventPacket{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositInfoUpdateEventPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DepositInfoUpdateEventPacket{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &IBCReceivePayload_DepositInfoUpdateEventPacket{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIbcReceivePayload(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIbcReceivePayload
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipIbcReceivePayload(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowIbcReceivePayload
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIbcReceivePayload
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthIbcReceivePayload
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupIbcReceivePayload
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthIbcReceivePayload
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthIbcReceivePayload        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowIbcReceivePayload          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupIbcReceivePayload = fmt.Errorf("proto: unexpected end of group")
)
