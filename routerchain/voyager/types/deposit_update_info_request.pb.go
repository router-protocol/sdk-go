// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerprotocol/routerchain/voyager/deposit_update_info_request.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/router-protocol/sdk-go/routerchain/multichain/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DepositUpdateInfoRequest struct {
	DepositId          uint64                                 `protobuf:"varint,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	SrcChainId         string                                 `protobuf:"bytes,2,opt,name=srcChainId,proto3" json:"srcChainId,omitempty"`
	SrcChainType       types.ChainType                        `protobuf:"varint,3,opt,name=srcChainType,proto3,enum=routerprotocol.routerchain.multichain.ChainType" json:"srcChainType,omitempty"`
	SrcTxHash          string                                 `protobuf:"bytes,4,opt,name=srcTxHash,proto3" json:"srcTxHash,omitempty"`
	SrcTimestamp       uint64                                 `protobuf:"varint,5,opt,name=srcTimestamp,proto3" json:"srcTimestamp,omitempty"`
	Contract           string                                 `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce         uint64                                 `protobuf:"varint,7,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight        uint64                                 `protobuf:"varint,8,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	FeeAmount          github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,9,opt,name=feeAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"feeAmount"`
	Initiatewithdrawal bool                                   `protobuf:"varint,10,opt,name=initiatewithdrawal,proto3" json:"initiatewithdrawal,omitempty"`
	SrcToken           string                                 `protobuf:"bytes,11,opt,name=srcToken,proto3" json:"srcToken,omitempty"`
	Depositor          string                                 `protobuf:"bytes,12,opt,name=depositor,proto3" json:"depositor,omitempty"`
	Status             VoyagerDepositUpdateInfoStatus         `protobuf:"varint,13,opt,name=status,proto3,enum=routerprotocol.routerchain.voyager.VoyagerDepositUpdateInfoStatus" json:"status,omitempty"`
}

func (m *DepositUpdateInfoRequest) Reset()         { *m = DepositUpdateInfoRequest{} }
func (m *DepositUpdateInfoRequest) String() string { return proto.CompactTextString(m) }
func (*DepositUpdateInfoRequest) ProtoMessage()    {}
func (*DepositUpdateInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0cf6af5c28021d4, []int{0}
}
func (m *DepositUpdateInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DepositUpdateInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DepositUpdateInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DepositUpdateInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositUpdateInfoRequest.Merge(m, src)
}
func (m *DepositUpdateInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *DepositUpdateInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositUpdateInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepositUpdateInfoRequest proto.InternalMessageInfo

func (m *DepositUpdateInfoRequest) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *DepositUpdateInfoRequest) GetSrcChainId() string {
	if m != nil {
		return m.SrcChainId
	}
	return ""
}

func (m *DepositUpdateInfoRequest) GetSrcChainType() types.ChainType {
	if m != nil {
		return m.SrcChainType
	}
	return types.CHAIN_TYPE_NONE
}

func (m *DepositUpdateInfoRequest) GetSrcTxHash() string {
	if m != nil {
		return m.SrcTxHash
	}
	return ""
}

func (m *DepositUpdateInfoRequest) GetSrcTimestamp() uint64 {
	if m != nil {
		return m.SrcTimestamp
	}
	return 0
}

func (m *DepositUpdateInfoRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *DepositUpdateInfoRequest) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *DepositUpdateInfoRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *DepositUpdateInfoRequest) GetInitiatewithdrawal() bool {
	if m != nil {
		return m.Initiatewithdrawal
	}
	return false
}

func (m *DepositUpdateInfoRequest) GetSrcToken() string {
	if m != nil {
		return m.SrcToken
	}
	return ""
}

func (m *DepositUpdateInfoRequest) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *DepositUpdateInfoRequest) GetStatus() VoyagerDepositUpdateInfoStatus {
	if m != nil {
		return m.Status
	}
	return VOYAGER_DEPOSIT_UPDATE_INFO_REQUEST_CREATED
}

type DepositUpdateInfoRequestClaimHash struct {
	DepositId          uint64                                 `protobuf:"varint,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	SrcChainId         string                                 `protobuf:"bytes,2,opt,name=srcChainId,proto3" json:"srcChainId,omitempty"`
	SrcChainType       types.ChainType                        `protobuf:"varint,3,opt,name=srcChainType,proto3,enum=routerprotocol.routerchain.multichain.ChainType" json:"srcChainType,omitempty"`
	SrcTxHash          string                                 `protobuf:"bytes,4,opt,name=srcTxHash,proto3" json:"srcTxHash,omitempty"`
	SrcTimestamp       uint64                                 `protobuf:"varint,5,opt,name=srcTimestamp,proto3" json:"srcTimestamp,omitempty"`
	Contract           string                                 `protobuf:"bytes,6,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce         uint64                                 `protobuf:"varint,7,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight        uint64                                 `protobuf:"varint,8,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	FeeAmount          github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,9,opt,name=feeAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"feeAmount"`
	SrcToken           string                                 `protobuf:"bytes,10,opt,name=srcToken,proto3" json:"srcToken,omitempty"`
	Depositor          string                                 `protobuf:"bytes,11,opt,name=depositor,proto3" json:"depositor,omitempty"`
	Initiatewithdrawal bool                                   `protobuf:"varint,12,opt,name=initiatewithdrawal,proto3" json:"initiatewithdrawal,omitempty"`
}

func (m *DepositUpdateInfoRequestClaimHash) Reset()         { *m = DepositUpdateInfoRequestClaimHash{} }
func (m *DepositUpdateInfoRequestClaimHash) String() string { return proto.CompactTextString(m) }
func (*DepositUpdateInfoRequestClaimHash) ProtoMessage()    {}
func (*DepositUpdateInfoRequestClaimHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0cf6af5c28021d4, []int{1}
}
func (m *DepositUpdateInfoRequestClaimHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DepositUpdateInfoRequestClaimHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DepositUpdateInfoRequestClaimHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DepositUpdateInfoRequestClaimHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositUpdateInfoRequestClaimHash.Merge(m, src)
}
func (m *DepositUpdateInfoRequestClaimHash) XXX_Size() int {
	return m.Size()
}
func (m *DepositUpdateInfoRequestClaimHash) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositUpdateInfoRequestClaimHash.DiscardUnknown(m)
}

var xxx_messageInfo_DepositUpdateInfoRequestClaimHash proto.InternalMessageInfo

func (m *DepositUpdateInfoRequestClaimHash) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *DepositUpdateInfoRequestClaimHash) GetSrcChainId() string {
	if m != nil {
		return m.SrcChainId
	}
	return ""
}

func (m *DepositUpdateInfoRequestClaimHash) GetSrcChainType() types.ChainType {
	if m != nil {
		return m.SrcChainType
	}
	return types.CHAIN_TYPE_NONE
}

func (m *DepositUpdateInfoRequestClaimHash) GetSrcTxHash() string {
	if m != nil {
		return m.SrcTxHash
	}
	return ""
}

func (m *DepositUpdateInfoRequestClaimHash) GetSrcTimestamp() uint64 {
	if m != nil {
		return m.SrcTimestamp
	}
	return 0
}

func (m *DepositUpdateInfoRequestClaimHash) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *DepositUpdateInfoRequestClaimHash) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *DepositUpdateInfoRequestClaimHash) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *DepositUpdateInfoRequestClaimHash) GetSrcToken() string {
	if m != nil {
		return m.SrcToken
	}
	return ""
}

func (m *DepositUpdateInfoRequestClaimHash) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *DepositUpdateInfoRequestClaimHash) GetInitiatewithdrawal() bool {
	if m != nil {
		return m.Initiatewithdrawal
	}
	return false
}

func init() {
	proto.RegisterType((*DepositUpdateInfoRequest)(nil), "routerprotocol.routerchain.voyager.DepositUpdateInfoRequest")
	proto.RegisterType((*DepositUpdateInfoRequestClaimHash)(nil), "routerprotocol.routerchain.voyager.DepositUpdateInfoRequestClaimHash")
}

func init() {
	proto.RegisterFile("routerprotocol/routerchain/voyager/deposit_update_info_request.proto", fileDescriptor_e0cf6af5c28021d4)
}

var fileDescriptor_e0cf6af5c28021d4 = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0x41, 0x8f, 0x12, 0x31,
	0x14, 0x66, 0x14, 0x57, 0x28, 0xe8, 0xa1, 0xf1, 0xd0, 0x10, 0x9d, 0x45, 0x0e, 0x86, 0x0b, 0x1d,
	0x57, 0x13, 0x3d, 0xcb, 0xee, 0x61, 0x89, 0xc6, 0xc4, 0x11, 0x3d, 0xec, 0x85, 0x94, 0x4e, 0x81,
	0x86, 0x99, 0x76, 0x9c, 0x76, 0xd8, 0xe5, 0x5f, 0xec, 0xcf, 0xda, 0xe3, 0x1e, 0x8d, 0x87, 0x8d,
	0x81, 0x3f, 0x62, 0xa6, 0x1d, 0x60, 0x58, 0x59, 0xf4, 0xe6, 0xc5, 0xcb, 0xb4, 0xef, 0x9b, 0xd7,
	0xef, 0xf5, 0x7b, 0xef, 0x4b, 0xc1, 0x49, 0x22, 0x53, 0xcd, 0x92, 0x38, 0x91, 0x5a, 0x52, 0x19,
	0x7a, 0x36, 0xa4, 0x13, 0xc2, 0x85, 0x37, 0x93, 0x73, 0x32, 0x66, 0x89, 0x17, 0xb0, 0x58, 0x2a,
	0xae, 0x07, 0x69, 0x1c, 0x10, 0xcd, 0x06, 0x5c, 0x8c, 0xe4, 0x20, 0x61, 0xdf, 0x52, 0xa6, 0x34,
	0x36, 0x07, 0x61, 0x6b, 0x9b, 0x05, 0x17, 0x58, 0x70, 0xce, 0xd2, 0x78, 0xb3, 0xa7, 0x52, 0x94,
	0x86, 0x9a, 0xdb, 0xad, 0xf9, 0x0e, 0xf4, 0x3c, 0x66, 0x96, 0xbb, 0xe1, 0x52, 0xa9, 0x22, 0xa9,
	0xbc, 0x21, 0x51, 0xcc, 0x9b, 0x1d, 0x0d, 0x99, 0x26, 0x47, 0x1e, 0x95, 0x5c, 0xe4, 0xff, 0x9f,
	0x8c, 0xe5, 0x58, 0x9a, 0xad, 0x97, 0xed, 0x72, 0xf4, 0xfd, 0x5f, 0xe8, 0xca, 0xd7, 0xc1, 0x2e,
	0x7d, 0x4a, 0x13, 0x9d, 0x2a, 0x4b, 0xd6, 0x5a, 0x96, 0x01, 0x3a, 0xb1, 0x49, 0x5f, 0x4c, 0x4e,
	0x4f, 0x8c, 0xa4, 0x6f, 0x3b, 0x00, 0x9f, 0x01, 0xb0, 0x22, 0xe0, 0x01, 0x72, 0x9a, 0x4e, 0xbb,
	0xec, 0x57, 0x73, 0xa4, 0x17, 0x40, 0x17, 0x00, 0x95, 0xd0, 0xe3, 0xac, 0x70, 0x2f, 0x40, 0xf7,
	0x9a, 0x4e, 0xbb, 0xea, 0x17, 0x10, 0xd8, 0x07, 0xf5, 0x55, 0xd4, 0x9f, 0xc7, 0x0c, 0xdd, 0x6f,
	0x3a, 0xed, 0xc7, 0xaf, 0x5e, 0xe2, 0x3d, 0x1d, 0xdd, 0x74, 0x0b, 0xaf, 0xcf, 0xf9, 0x5b, 0x2c,
	0xf0, 0x29, 0xa8, 0xaa, 0x84, 0xf6, 0x2f, 0x4e, 0x89, 0x9a, 0xa0, 0xb2, 0x29, 0xba, 0x01, 0x60,
	0xcb, 0xd4, 0xec, 0xf3, 0x88, 0x29, 0x4d, 0xa2, 0x18, 0x3d, 0x30, 0x97, 0xde, 0xc2, 0x60, 0x03,
	0x54, 0xa8, 0x14, 0x3a, 0x21, 0x54, 0xa3, 0x03, 0x43, 0xb0, 0x8e, 0x33, 0x4d, 0x6c, 0xc6, 0x84,
	0xfe, 0x28, 0x05, 0x65, 0xe8, 0xa1, 0x39, 0x5d, 0x40, 0x60, 0x13, 0xd4, 0x86, 0xa1, 0xa4, 0xd3,
	0x53, 0xc6, 0xc7, 0x13, 0x8d, 0x2a, 0x26, 0xa1, 0x08, 0xc1, 0x0f, 0xa0, 0x3a, 0x62, 0xec, 0x5d,
	0x24, 0x53, 0xa1, 0x51, 0x35, 0xa3, 0xef, 0xe2, 0xab, 0x9b, 0xc3, 0xd2, 0x8f, 0x9b, 0xc3, 0x17,
	0x63, 0xae, 0x27, 0xe9, 0x10, 0x53, 0x19, 0x79, 0xf9, 0xe8, 0xed, 0xd2, 0x51, 0xc1, 0xd4, 0xcb,
	0x8c, 0xa1, 0x70, 0x4f, 0x68, 0x7f, 0x43, 0x00, 0x31, 0x80, 0x5c, 0x70, 0xcd, 0x89, 0x66, 0xe7,
	0x5c, 0x4f, 0x82, 0x84, 0x9c, 0x93, 0x10, 0x81, 0xa6, 0xd3, 0xae, 0xf8, 0x3b, 0xfe, 0x64, 0xda,
	0x32, 0xad, 0x72, 0xca, 0x04, 0xaa, 0x59, 0x6d, 0xab, 0x38, 0xeb, 0x5c, 0x3e, 0x3c, 0x99, 0xa0,
	0xba, 0xed, 0xdc, 0x1a, 0x80, 0x67, 0xe0, 0xc0, 0x3a, 0x03, 0x3d, 0x32, 0x73, 0xea, 0xe2, 0x3f,
	0x3b, 0x1f, 0x7f, 0xb5, 0xeb, 0x6f, 0x0e, 0xfa, 0x6c, 0x98, 0xfc, 0x9c, 0xb1, 0x75, 0x59, 0x06,
	0xcf, 0xef, 0x72, 0xd9, 0x71, 0x48, 0x78, 0x64, 0x66, 0xf7, 0xdf, 0x6e, 0xff, 0xdc, 0x6e, 0x45,
	0xfb, 0x80, 0x7d, 0xf6, 0xa9, 0xdd, 0xb6, 0xcf, 0x6e, 0xa3, 0xd6, 0xef, 0x32, 0x6a, 0xf7, 0xd3,
	0xd5, 0xc2, 0x75, 0xae, 0x17, 0xae, 0xf3, 0x73, 0xe1, 0x3a, 0x97, 0x4b, 0xb7, 0x74, 0xbd, 0x74,
	0x4b, 0xdf, 0x97, 0x6e, 0xe9, 0xec, 0x6d, 0xe1, 0xda, 0x76, 0x58, 0x9d, 0x5b, 0x6f, 0x5d, 0xc7,
	0x3e, 0x76, 0x17, 0xeb, 0xe7, 0xce, 0x68, 0x19, 0x1e, 0x98, 0xb4, 0xd7, 0xbf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xec, 0xa4, 0x3f, 0x52, 0xf9, 0x05, 0x00, 0x00,
}

func (m *DepositUpdateInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DepositUpdateInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DepositUpdateInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x68
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.SrcToken) > 0 {
		i -= len(m.SrcToken)
		copy(dAtA[i:], m.SrcToken)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcToken)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Initiatewithdrawal {
		i--
		if m.Initiatewithdrawal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	{
		size := m.FeeAmount.Size()
		i -= size
		if _, err := m.FeeAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	if m.BlockHeight != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x40
	}
	if m.EventNonce != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x32
	}
	if m.SrcTimestamp != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.SrcTimestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SrcTxHash) > 0 {
		i -= len(m.SrcTxHash)
		copy(dAtA[i:], m.SrcTxHash)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcTxHash)))
		i--
		dAtA[i] = 0x22
	}
	if m.SrcChainType != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.SrcChainType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SrcChainId) > 0 {
		i -= len(m.SrcChainId)
		copy(dAtA[i:], m.SrcChainId)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcChainId)))
		i--
		dAtA[i] = 0x12
	}
	if m.DepositId != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DepositUpdateInfoRequestClaimHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DepositUpdateInfoRequestClaimHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DepositUpdateInfoRequestClaimHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Initiatewithdrawal {
		i--
		if m.Initiatewithdrawal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.SrcToken) > 0 {
		i -= len(m.SrcToken)
		copy(dAtA[i:], m.SrcToken)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcToken)))
		i--
		dAtA[i] = 0x52
	}
	{
		size := m.FeeAmount.Size()
		i -= size
		if _, err := m.FeeAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	if m.BlockHeight != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x40
	}
	if m.EventNonce != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x32
	}
	if m.SrcTimestamp != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.SrcTimestamp))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SrcTxHash) > 0 {
		i -= len(m.SrcTxHash)
		copy(dAtA[i:], m.SrcTxHash)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcTxHash)))
		i--
		dAtA[i] = 0x22
	}
	if m.SrcChainType != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.SrcChainType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SrcChainId) > 0 {
		i -= len(m.SrcChainId)
		copy(dAtA[i:], m.SrcChainId)
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(len(m.SrcChainId)))
		i--
		dAtA[i] = 0x12
	}
	if m.DepositId != 0 {
		i = encodeVarintDepositUpdateInfoRequest(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDepositUpdateInfoRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovDepositUpdateInfoRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DepositUpdateInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DepositId != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.DepositId))
	}
	l = len(m.SrcChainId)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.SrcChainType != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.SrcChainType))
	}
	l = len(m.SrcTxHash)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.SrcTimestamp != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.SrcTimestamp))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.BlockHeight))
	}
	l = m.FeeAmount.Size()
	n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	if m.Initiatewithdrawal {
		n += 2
	}
	l = len(m.SrcToken)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.Status))
	}
	return n
}

func (m *DepositUpdateInfoRequestClaimHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DepositId != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.DepositId))
	}
	l = len(m.SrcChainId)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.SrcChainType != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.SrcChainType))
	}
	l = len(m.SrcTxHash)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.SrcTimestamp != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.SrcTimestamp))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovDepositUpdateInfoRequest(uint64(m.BlockHeight))
	}
	l = m.FeeAmount.Size()
	n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	l = len(m.SrcToken)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovDepositUpdateInfoRequest(uint64(l))
	}
	if m.Initiatewithdrawal {
		n += 2
	}
	return n
}

func sovDepositUpdateInfoRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDepositUpdateInfoRequest(x uint64) (n int) {
	return sovDepositUpdateInfoRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DepositUpdateInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDepositUpdateInfoRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DepositUpdateInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DepositUpdateInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainType", wireType)
			}
			m.SrcChainType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcChainType |= types.ChainType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcTxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTimestamp", wireType)
			}
			m.SrcTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FeeAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initiatewithdrawal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Initiatewithdrawal = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= VoyagerDepositUpdateInfoStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDepositUpdateInfoRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DepositUpdateInfoRequestClaimHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDepositUpdateInfoRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DepositUpdateInfoRequestClaimHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DepositUpdateInfoRequestClaimHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChainType", wireType)
			}
			m.SrcChainType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcChainType |= types.ChainType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcTxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcTimestamp", wireType)
			}
			m.SrcTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrcTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FeeAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initiatewithdrawal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Initiatewithdrawal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDepositUpdateInfoRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDepositUpdateInfoRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDepositUpdateInfoRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDepositUpdateInfoRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDepositUpdateInfoRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDepositUpdateInfoRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDepositUpdateInfoRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDepositUpdateInfoRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDepositUpdateInfoRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDepositUpdateInfoRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDepositUpdateInfoRequest = fmt.Errorf("proto: unexpected end of group")
)
