// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: multichain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateChainConfig struct {
	Creator                 string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId                 string    `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainName               string    `protobuf:"bytes,3,opt,name=chainName,proto3" json:"chainName,omitempty"`
	Symbol                  string    `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ChainType               ChainType `protobuf:"varint,5,opt,name=chainType,proto3,enum=routerprotocol.routerchain.multichain.ChainType" json:"chainType,omitempty"`
	ConfirmationsRequired   uint64    `protobuf:"varint,6,opt,name=confirmationsRequired,proto3" json:"confirmationsRequired,omitempty"`
	GatewayContractAddress  string    `protobuf:"bytes,7,opt,name=gatewayContractAddress,proto3" json:"gatewayContractAddress,omitempty"`
	GatewayContractHeight   uint64    `protobuf:"varint,8,opt,name=gatewayContractHeight,proto3" json:"gatewayContractHeight,omitempty"`
	RouterContractAddress   string    `protobuf:"bytes,9,opt,name=routerContractAddress,proto3" json:"routerContractAddress,omitempty"`
	LastObservedEventNonce  uint64    `protobuf:"varint,10,opt,name=lastObservedEventNonce,proto3" json:"lastObservedEventNonce,omitempty"`
	LastObservedValsetNonce uint64    `protobuf:"varint,11,opt,name=lastObservedValsetNonce,proto3" json:"lastObservedValsetNonce,omitempty"`
}

func (m *MsgCreateChainConfig) Reset()         { *m = MsgCreateChainConfig{} }
func (m *MsgCreateChainConfig) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChainConfig) ProtoMessage()    {}
func (*MsgCreateChainConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{0}
}
func (m *MsgCreateChainConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChainConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChainConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChainConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChainConfig.Merge(m, src)
}
func (m *MsgCreateChainConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChainConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChainConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChainConfig proto.InternalMessageInfo

func (m *MsgCreateChainConfig) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateChainConfig) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MsgCreateChainConfig) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *MsgCreateChainConfig) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MsgCreateChainConfig) GetChainType() ChainType {
	if m != nil {
		return m.ChainType
	}
	return CHAIN_TYPE_ROUTER
}

func (m *MsgCreateChainConfig) GetConfirmationsRequired() uint64 {
	if m != nil {
		return m.ConfirmationsRequired
	}
	return 0
}

func (m *MsgCreateChainConfig) GetGatewayContractAddress() string {
	if m != nil {
		return m.GatewayContractAddress
	}
	return ""
}

func (m *MsgCreateChainConfig) GetGatewayContractHeight() uint64 {
	if m != nil {
		return m.GatewayContractHeight
	}
	return 0
}

func (m *MsgCreateChainConfig) GetRouterContractAddress() string {
	if m != nil {
		return m.RouterContractAddress
	}
	return ""
}

func (m *MsgCreateChainConfig) GetLastObservedEventNonce() uint64 {
	if m != nil {
		return m.LastObservedEventNonce
	}
	return 0
}

func (m *MsgCreateChainConfig) GetLastObservedValsetNonce() uint64 {
	if m != nil {
		return m.LastObservedValsetNonce
	}
	return 0
}

type MsgCreateChainConfigResponse struct {
}

func (m *MsgCreateChainConfigResponse) Reset()         { *m = MsgCreateChainConfigResponse{} }
func (m *MsgCreateChainConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChainConfigResponse) ProtoMessage()    {}
func (*MsgCreateChainConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{1}
}
func (m *MsgCreateChainConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChainConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChainConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChainConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChainConfigResponse.Merge(m, src)
}
func (m *MsgCreateChainConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChainConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChainConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChainConfigResponse proto.InternalMessageInfo

type MsgUpdateChainConfig struct {
	Creator                 string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId                 string    `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainName               string    `protobuf:"bytes,3,opt,name=chainName,proto3" json:"chainName,omitempty"`
	Symbol                  string    `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ChainType               ChainType `protobuf:"varint,5,opt,name=chainType,proto3,enum=routerprotocol.routerchain.multichain.ChainType" json:"chainType,omitempty"`
	ConfirmationsRequired   uint64    `protobuf:"varint,6,opt,name=confirmationsRequired,proto3" json:"confirmationsRequired,omitempty"`
	GatewayContractAddress  string    `protobuf:"bytes,7,opt,name=gatewayContractAddress,proto3" json:"gatewayContractAddress,omitempty"`
	GatewayContractHeight   uint64    `protobuf:"varint,8,opt,name=gatewayContractHeight,proto3" json:"gatewayContractHeight,omitempty"`
	RouterContractAddress   string    `protobuf:"bytes,9,opt,name=routerContractAddress,proto3" json:"routerContractAddress,omitempty"`
	LastObservedEventNonce  uint64    `protobuf:"varint,10,opt,name=lastObservedEventNonce,proto3" json:"lastObservedEventNonce,omitempty"`
	LastObservedValsetNonce uint64    `protobuf:"varint,11,opt,name=lastObservedValsetNonce,proto3" json:"lastObservedValsetNonce,omitempty"`
}

func (m *MsgUpdateChainConfig) Reset()         { *m = MsgUpdateChainConfig{} }
func (m *MsgUpdateChainConfig) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateChainConfig) ProtoMessage()    {}
func (*MsgUpdateChainConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{2}
}
func (m *MsgUpdateChainConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateChainConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateChainConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateChainConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateChainConfig.Merge(m, src)
}
func (m *MsgUpdateChainConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateChainConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateChainConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateChainConfig proto.InternalMessageInfo

func (m *MsgUpdateChainConfig) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetChainType() ChainType {
	if m != nil {
		return m.ChainType
	}
	return CHAIN_TYPE_ROUTER
}

func (m *MsgUpdateChainConfig) GetConfirmationsRequired() uint64 {
	if m != nil {
		return m.ConfirmationsRequired
	}
	return 0
}

func (m *MsgUpdateChainConfig) GetGatewayContractAddress() string {
	if m != nil {
		return m.GatewayContractAddress
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetGatewayContractHeight() uint64 {
	if m != nil {
		return m.GatewayContractHeight
	}
	return 0
}

func (m *MsgUpdateChainConfig) GetRouterContractAddress() string {
	if m != nil {
		return m.RouterContractAddress
	}
	return ""
}

func (m *MsgUpdateChainConfig) GetLastObservedEventNonce() uint64 {
	if m != nil {
		return m.LastObservedEventNonce
	}
	return 0
}

func (m *MsgUpdateChainConfig) GetLastObservedValsetNonce() uint64 {
	if m != nil {
		return m.LastObservedValsetNonce
	}
	return 0
}

type MsgUpdateChainConfigResponse struct {
}

func (m *MsgUpdateChainConfigResponse) Reset()         { *m = MsgUpdateChainConfigResponse{} }
func (m *MsgUpdateChainConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateChainConfigResponse) ProtoMessage()    {}
func (*MsgUpdateChainConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{3}
}
func (m *MsgUpdateChainConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateChainConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateChainConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateChainConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateChainConfigResponse.Merge(m, src)
}
func (m *MsgUpdateChainConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateChainConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateChainConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateChainConfigResponse proto.InternalMessageInfo

type MsgDeleteChainConfig struct {
	Creator   string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainType ChainType `protobuf:"varint,2,opt,name=chainType,proto3,enum=routerprotocol.routerchain.multichain.ChainType" json:"chainType,omitempty"`
	ChainId   string    `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *MsgDeleteChainConfig) Reset()         { *m = MsgDeleteChainConfig{} }
func (m *MsgDeleteChainConfig) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteChainConfig) ProtoMessage()    {}
func (*MsgDeleteChainConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{4}
}
func (m *MsgDeleteChainConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteChainConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteChainConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteChainConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteChainConfig.Merge(m, src)
}
func (m *MsgDeleteChainConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteChainConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteChainConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteChainConfig proto.InternalMessageInfo

func (m *MsgDeleteChainConfig) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteChainConfig) GetChainType() ChainType {
	if m != nil {
		return m.ChainType
	}
	return CHAIN_TYPE_ROUTER
}

func (m *MsgDeleteChainConfig) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

type MsgDeleteChainConfigResponse struct {
}

func (m *MsgDeleteChainConfigResponse) Reset()         { *m = MsgDeleteChainConfigResponse{} }
func (m *MsgDeleteChainConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteChainConfigResponse) ProtoMessage()    {}
func (*MsgDeleteChainConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_789e9f3e251aa389, []int{5}
}
func (m *MsgDeleteChainConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteChainConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteChainConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteChainConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteChainConfigResponse.Merge(m, src)
}
func (m *MsgDeleteChainConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteChainConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteChainConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteChainConfigResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateChainConfig)(nil), "routerprotocol.routerchain.multichain.MsgCreateChainConfig")
	proto.RegisterType((*MsgCreateChainConfigResponse)(nil), "routerprotocol.routerchain.multichain.MsgCreateChainConfigResponse")
	proto.RegisterType((*MsgUpdateChainConfig)(nil), "routerprotocol.routerchain.multichain.MsgUpdateChainConfig")
	proto.RegisterType((*MsgUpdateChainConfigResponse)(nil), "routerprotocol.routerchain.multichain.MsgUpdateChainConfigResponse")
	proto.RegisterType((*MsgDeleteChainConfig)(nil), "routerprotocol.routerchain.multichain.MsgDeleteChainConfig")
	proto.RegisterType((*MsgDeleteChainConfigResponse)(nil), "routerprotocol.routerchain.multichain.MsgDeleteChainConfigResponse")
}

func init() { proto.RegisterFile("multichain/tx.proto", fileDescriptor_789e9f3e251aa389) }

var fileDescriptor_789e9f3e251aa389 = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xee, 0x6c, 0x6b, 0x77, 0x3b, 0x82, 0xe0, 0xa8, 0xeb, 0x58, 0xd7, 0x50, 0x16, 0x84, 0x5e,
	0x4c, 0x65, 0x15, 0x11, 0x3d, 0x69, 0x14, 0xf4, 0xb0, 0x15, 0xc2, 0xea, 0xc1, 0x8b, 0x4c, 0x93,
	0x67, 0x1a, 0x48, 0x32, 0x71, 0x66, 0xba, 0x6e, 0xfe, 0x85, 0x17, 0x4f, 0xe2, 0xff, 0xf1, 0x22,
	0xec, 0xd1, 0xa3, 0xb4, 0x7f, 0x44, 0x32, 0x49, 0x6c, 0x77, 0x27, 0x81, 0x96, 0xbd, 0xee, 0x25,
	0xe4, 0xcd, 0xf7, 0xbe, 0xf7, 0xbe, 0xc9, 0xfb, 0x26, 0x83, 0x6f, 0xc4, 0xb3, 0x48, 0x85, 0xde,
	0x94, 0x85, 0xc9, 0x48, 0x9d, 0xd8, 0xa9, 0xe0, 0x8a, 0x93, 0xfb, 0x82, 0xcf, 0x14, 0x08, 0x1d,
	0x78, 0x3c, 0xb2, 0x8b, 0x50, 0x27, 0xd9, 0xcb, 0xfc, 0xfe, 0xbd, 0x15, 0xae, 0x7e, 0x7e, 0xf2,
	0x78, 0xf2, 0x39, 0x0c, 0x8a, 0x2a, 0xfd, 0xbb, 0x06, 0xac, 0xb2, 0x14, 0x0a, 0x70, 0xff, 0x67,
	0x07, 0xdf, 0x3c, 0x94, 0x81, 0x23, 0x80, 0x29, 0x70, 0x72, 0xd4, 0xd1, 0x5c, 0x42, 0xf1, 0xb6,
	0x97, 0x2f, 0x72, 0x41, 0xd1, 0x00, 0x0d, 0x7b, 0x6e, 0x15, 0x92, 0x3b, 0x78, 0xa7, 0x28, 0x13,
	0xfa, 0x74, 0xab, 0x84, 0xf2, 0xf8, 0xad, 0x4f, 0xf6, 0x70, 0x4f, 0xbf, 0x8e, 0x59, 0x0c, 0xb4,
	0xad, 0xb1, 0xe5, 0x02, 0xd9, 0xc5, 0x5d, 0x99, 0xc5, 0x13, 0x1e, 0xd1, 0x8e, 0x86, 0xca, 0x88,
	0x8c, 0x4b, 0xd6, 0x51, 0x96, 0x02, 0xbd, 0x32, 0x40, 0xc3, 0x6b, 0x07, 0x0f, 0xed, 0xb5, 0xb6,
	0x6e, 0x3b, 0x15, 0xcf, 0x5d, 0x96, 0x20, 0x8f, 0xf1, 0x2d, 0xfd, 0x01, 0x44, 0xcc, 0x54, 0xc8,
	0x13, 0xe9, 0xc2, 0x97, 0x59, 0x28, 0xc0, 0xa7, 0xdd, 0x01, 0x1a, 0x76, 0xdc, 0x7a, 0x90, 0x3c,
	0xc1, 0xbb, 0x01, 0x53, 0xf0, 0x95, 0x65, 0x0e, 0x4f, 0x94, 0x60, 0x9e, 0x7a, 0xe1, 0xfb, 0x02,
	0xa4, 0xa4, 0xdb, 0x5a, 0x6d, 0x03, 0x9a, 0x77, 0x3b, 0x87, 0xbc, 0x81, 0x30, 0x98, 0x2a, 0xba,
	0x53, 0x74, 0xab, 0x05, 0x73, 0x56, 0xb1, 0xa5, 0xf3, 0xcd, 0x7a, 0xba, 0x59, 0x3d, 0x98, 0x6b,
	0x8c, 0x98, 0x54, 0xef, 0x26, 0x12, 0xc4, 0x31, 0xf8, 0xaf, 0x8f, 0x21, 0x51, 0x63, 0x9e, 0x78,
	0x40, 0xb1, 0x6e, 0xd6, 0x80, 0x92, 0xa7, 0xf8, 0xf6, 0x2a, 0xf2, 0x81, 0x45, 0x12, 0x4a, 0xe2,
	0x55, 0x4d, 0x6c, 0x82, 0xf7, 0x2d, 0xbc, 0x57, 0x67, 0x0f, 0x17, 0x64, 0xca, 0x13, 0x09, 0x95,
	0x7f, 0xde, 0xa7, 0xfe, 0xa5, 0x7f, 0x2e, 0xfd, 0xd3, 0xe4, 0x1f, 0xc3, 0x1e, 0xff, 0xfd, 0xf3,
	0x03, 0x69, 0xff, 0xbc, 0x82, 0x08, 0xd6, 0xf5, 0xcf, 0x99, 0x71, 0x6f, 0x5d, 0x7c, 0xdc, 0xab,
	0x7e, 0x6c, 0x9f, 0xf1, 0x63, 0xa9, 0xde, 0x10, 0x57, 0xa9, 0x3f, 0xf8, 0xdd, 0xc6, 0xed, 0x43,
	0x19, 0x90, 0xef, 0x08, 0x5f, 0x37, 0x7f, 0xa1, 0xcf, 0xd7, 0x54, 0x55, 0x77, 0xc0, 0xfa, 0xce,
	0x05, 0xc8, 0x95, 0x3e, 0xad, 0xcb, 0x3c, 0x9a, 0x1b, 0xe8, 0x32, 0xc8, 0x9b, 0xe8, 0x6a, 0x9c,
	0xba, 0xd6, 0x65, 0x8e, 0x7c, 0x03, 0x5d, 0x06, 0x79, 0x13, 0x5d, 0x8d, 0xf3, 0x7c, 0x79, 0xf4,
	0x6b, 0x6e, 0xa1, 0xd3, 0xb9, 0x85, 0xfe, 0xce, 0x2d, 0xf4, 0x6d, 0x61, 0xb5, 0x4e, 0x17, 0x56,
	0xeb, 0xcf, 0xc2, 0x6a, 0x7d, 0x7c, 0x16, 0x84, 0x6a, 0x3a, 0x9b, 0xd8, 0x1e, 0x8f, 0x47, 0x45,
	0xe5, 0x07, 0x55, 0xa7, 0x2a, 0x2e, 0x6e, 0xd8, 0x93, 0xd1, 0xea, 0x4d, 0x9e, 0xa5, 0x20, 0x27,
	0x5d, 0x9d, 0xf9, 0xe8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x7f, 0x78, 0xc8, 0xe4, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateChainConfig(ctx context.Context, in *MsgCreateChainConfig, opts ...grpc.CallOption) (*MsgCreateChainConfigResponse, error)
	UpdateChainConfig(ctx context.Context, in *MsgUpdateChainConfig, opts ...grpc.CallOption) (*MsgUpdateChainConfigResponse, error)
	DeleteChainConfig(ctx context.Context, in *MsgDeleteChainConfig, opts ...grpc.CallOption) (*MsgDeleteChainConfigResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateChainConfig(ctx context.Context, in *MsgCreateChainConfig, opts ...grpc.CallOption) (*MsgCreateChainConfigResponse, error) {
	out := new(MsgCreateChainConfigResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.multichain.Msg/CreateChainConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateChainConfig(ctx context.Context, in *MsgUpdateChainConfig, opts ...grpc.CallOption) (*MsgUpdateChainConfigResponse, error) {
	out := new(MsgUpdateChainConfigResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.multichain.Msg/UpdateChainConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteChainConfig(ctx context.Context, in *MsgDeleteChainConfig, opts ...grpc.CallOption) (*MsgDeleteChainConfigResponse, error) {
	out := new(MsgDeleteChainConfigResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.multichain.Msg/DeleteChainConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateChainConfig(context.Context, *MsgCreateChainConfig) (*MsgCreateChainConfigResponse, error)
	UpdateChainConfig(context.Context, *MsgUpdateChainConfig) (*MsgUpdateChainConfigResponse, error)
	DeleteChainConfig(context.Context, *MsgDeleteChainConfig) (*MsgDeleteChainConfigResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateChainConfig(ctx context.Context, req *MsgCreateChainConfig) (*MsgCreateChainConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChainConfig not implemented")
}
func (*UnimplementedMsgServer) UpdateChainConfig(ctx context.Context, req *MsgUpdateChainConfig) (*MsgUpdateChainConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChainConfig not implemented")
}
func (*UnimplementedMsgServer) DeleteChainConfig(ctx context.Context, req *MsgDeleteChainConfig) (*MsgDeleteChainConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChainConfig not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateChainConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateChainConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateChainConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.multichain.Msg/CreateChainConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateChainConfig(ctx, req.(*MsgCreateChainConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateChainConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateChainConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateChainConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.multichain.Msg/UpdateChainConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateChainConfig(ctx, req.(*MsgUpdateChainConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteChainConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteChainConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteChainConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.multichain.Msg/DeleteChainConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteChainConfig(ctx, req.(*MsgDeleteChainConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routerprotocol.routerchain.multichain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateChainConfig",
			Handler:    _Msg_CreateChainConfig_Handler,
		},
		{
			MethodName: "UpdateChainConfig",
			Handler:    _Msg_UpdateChainConfig_Handler,
		},
		{
			MethodName: "DeleteChainConfig",
			Handler:    _Msg_DeleteChainConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "multichain/tx.proto",
}

func (m *MsgCreateChainConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChainConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChainConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastObservedValsetNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastObservedValsetNonce))
		i--
		dAtA[i] = 0x58
	}
	if m.LastObservedEventNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastObservedEventNonce))
		i--
		dAtA[i] = 0x50
	}
	if len(m.RouterContractAddress) > 0 {
		i -= len(m.RouterContractAddress)
		copy(dAtA[i:], m.RouterContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RouterContractAddress)))
		i--
		dAtA[i] = 0x4a
	}
	if m.GatewayContractHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GatewayContractHeight))
		i--
		dAtA[i] = 0x40
	}
	if len(m.GatewayContractAddress) > 0 {
		i -= len(m.GatewayContractAddress)
		copy(dAtA[i:], m.GatewayContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GatewayContractAddress)))
		i--
		dAtA[i] = 0x3a
	}
	if m.ConfirmationsRequired != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ConfirmationsRequired))
		i--
		dAtA[i] = 0x30
	}
	if m.ChainType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Symbol) > 0 {
		i -= len(m.Symbol)
		copy(dAtA[i:], m.Symbol)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Symbol)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateChainConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChainConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChainConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateChainConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateChainConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateChainConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastObservedValsetNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastObservedValsetNonce))
		i--
		dAtA[i] = 0x58
	}
	if m.LastObservedEventNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastObservedEventNonce))
		i--
		dAtA[i] = 0x50
	}
	if len(m.RouterContractAddress) > 0 {
		i -= len(m.RouterContractAddress)
		copy(dAtA[i:], m.RouterContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RouterContractAddress)))
		i--
		dAtA[i] = 0x4a
	}
	if m.GatewayContractHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GatewayContractHeight))
		i--
		dAtA[i] = 0x40
	}
	if len(m.GatewayContractAddress) > 0 {
		i -= len(m.GatewayContractAddress)
		copy(dAtA[i:], m.GatewayContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GatewayContractAddress)))
		i--
		dAtA[i] = 0x3a
	}
	if m.ConfirmationsRequired != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ConfirmationsRequired))
		i--
		dAtA[i] = 0x30
	}
	if m.ChainType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Symbol) > 0 {
		i -= len(m.Symbol)
		copy(dAtA[i:], m.Symbol)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Symbol)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateChainConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateChainConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateChainConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteChainConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteChainConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteChainConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ChainType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteChainConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteChainConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteChainConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateChainConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Symbol)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainType != 0 {
		n += 1 + sovTx(uint64(m.ChainType))
	}
	if m.ConfirmationsRequired != 0 {
		n += 1 + sovTx(uint64(m.ConfirmationsRequired))
	}
	l = len(m.GatewayContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GatewayContractHeight != 0 {
		n += 1 + sovTx(uint64(m.GatewayContractHeight))
	}
	l = len(m.RouterContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastObservedEventNonce != 0 {
		n += 1 + sovTx(uint64(m.LastObservedEventNonce))
	}
	if m.LastObservedValsetNonce != 0 {
		n += 1 + sovTx(uint64(m.LastObservedValsetNonce))
	}
	return n
}

func (m *MsgCreateChainConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateChainConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Symbol)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainType != 0 {
		n += 1 + sovTx(uint64(m.ChainType))
	}
	if m.ConfirmationsRequired != 0 {
		n += 1 + sovTx(uint64(m.ConfirmationsRequired))
	}
	l = len(m.GatewayContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GatewayContractHeight != 0 {
		n += 1 + sovTx(uint64(m.GatewayContractHeight))
	}
	l = len(m.RouterContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastObservedEventNonce != 0 {
		n += 1 + sovTx(uint64(m.LastObservedEventNonce))
	}
	if m.LastObservedValsetNonce != 0 {
		n += 1 + sovTx(uint64(m.LastObservedValsetNonce))
	}
	return n
}

func (m *MsgUpdateChainConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteChainConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainType != 0 {
		n += 1 + sovTx(uint64(m.ChainType))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteChainConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateChainConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChainConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChainConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Symbol = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainType", wireType)
			}
			m.ChainType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainType |= ChainType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmationsRequired", wireType)
			}
			m.ConfirmationsRequired = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConfirmationsRequired |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayContractHeight", wireType)
			}
			m.GatewayContractHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GatewayContractHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RouterContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RouterContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastObservedEventNonce", wireType)
			}
			m.LastObservedEventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastObservedEventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastObservedValsetNonce", wireType)
			}
			m.LastObservedValsetNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastObservedValsetNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateChainConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChainConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChainConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateChainConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateChainConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateChainConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Symbol = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainType", wireType)
			}
			m.ChainType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainType |= ChainType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmationsRequired", wireType)
			}
			m.ConfirmationsRequired = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConfirmationsRequired |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayContractHeight", wireType)
			}
			m.GatewayContractHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GatewayContractHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RouterContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RouterContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastObservedEventNonce", wireType)
			}
			m.LastObservedEventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastObservedEventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastObservedValsetNonce", wireType)
			}
			m.LastObservedValsetNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastObservedValsetNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateChainConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateChainConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateChainConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteChainConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteChainConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteChainConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainType", wireType)
			}
			m.ChainType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainType |= ChainType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteChainConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteChainConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteChainConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
