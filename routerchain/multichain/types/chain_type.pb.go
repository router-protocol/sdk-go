// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: multichain/chain_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ChainType int32

const (
	CHAIN_TYPE_NONE     ChainType = 0
	CHAIN_TYPE_ROUTER   ChainType = 1
	CHAIN_TYPE_EVM      ChainType = 2
	CHAIN_TYPE_COSMOS   ChainType = 3
	CHAIN_TYPE_POLKADOT ChainType = 4
	CHAIN_TYPE_SOLANO   ChainType = 5
	CHAIN_TYPE_NEAR     ChainType = 6
)

var ChainType_name = map[int32]string{
	0: "CHAIN_TYPE_NONE",
	1: "CHAIN_TYPE_ROUTER",
	2: "CHAIN_TYPE_EVM",
	3: "CHAIN_TYPE_COSMOS",
	4: "CHAIN_TYPE_POLKADOT",
	5: "CHAIN_TYPE_SOLANO",
	6: "CHAIN_TYPE_NEAR",
}

var ChainType_value = map[string]int32{
	"CHAIN_TYPE_NONE":     0,
	"CHAIN_TYPE_ROUTER":   1,
	"CHAIN_TYPE_EVM":      2,
	"CHAIN_TYPE_COSMOS":   3,
	"CHAIN_TYPE_POLKADOT": 4,
	"CHAIN_TYPE_SOLANO":   5,
	"CHAIN_TYPE_NEAR":     6,
}

func (x ChainType) String() string {
	return proto.EnumName(ChainType_name, int32(x))
}

func (ChainType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b6d847328477d0c6, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.multichain.ChainType", ChainType_name, ChainType_value)
}

func init() { proto.RegisterFile("multichain/chain_type.proto", fileDescriptor_b6d847328477d0c6) }

var fileDescriptor_b6d847328477d0c6 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xce, 0x2d, 0xcd, 0x29,
	0xc9, 0x4c, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x07, 0x93, 0xf1, 0x25, 0x95, 0x05, 0xa9, 0x7a, 0x05,
	0x45, 0xf9, 0x25, 0xf9, 0x42, 0xaa, 0x45, 0xf9, 0xa5, 0x25, 0xa9, 0x45, 0x60, 0x4e, 0x72, 0x7e,
	0x8e, 0x1e, 0x84, 0x0b, 0x56, 0xa6, 0x87, 0xd0, 0x27, 0x25, 0x92, 0x9e, 0x9f, 0x9e, 0x0f, 0x56,
	0xa4, 0x0f, 0x62, 0x41, 0x34, 0x4b, 0x49, 0xa6, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x79,
	0x49, 0xa5, 0x69, 0xfa, 0x89, 0x79, 0x95, 0x10, 0x29, 0xad, 0x93, 0x4c, 0x5c, 0x9c, 0xce, 0x20,
	0xad, 0x21, 0x95, 0x05, 0xa9, 0x42, 0x1a, 0x5c, 0xfc, 0xce, 0x1e, 0x8e, 0x9e, 0x7e, 0xf1, 0x21,
	0x91, 0x01, 0xae, 0xf1, 0x7e, 0xfe, 0x7e, 0xae, 0x02, 0x0c, 0x52, 0xc2, 0x5d, 0x73, 0x15, 0xd0,
	0x85, 0x85, 0x74, 0xb8, 0x04, 0x91, 0x84, 0x82, 0xfc, 0x43, 0x43, 0x5c, 0x83, 0x04, 0x18, 0xa5,
	0x44, 0xbb, 0xe6, 0x2a, 0x60, 0x4a, 0x08, 0xa9, 0x71, 0xf1, 0x21, 0x09, 0xba, 0x86, 0xf9, 0x0a,
	0x30, 0x49, 0x09, 0x75, 0xcd, 0x55, 0x40, 0x13, 0x45, 0x33, 0xd5, 0xd9, 0x3f, 0xd8, 0xd7, 0x3f,
	0x58, 0x80, 0x19, 0xc3, 0x54, 0x88, 0x84, 0x90, 0x01, 0x97, 0x30, 0x92, 0x60, 0x80, 0xbf, 0x8f,
	0xb7, 0xa3, 0x8b, 0x7f, 0x88, 0x00, 0x8b, 0x94, 0x78, 0xd7, 0x5c, 0x05, 0x6c, 0x52, 0x68, 0xe6,
	0x07, 0xfb, 0xfb, 0x38, 0xfa, 0xf9, 0x0b, 0xb0, 0x62, 0x98, 0x0f, 0x91, 0x40, 0x0f, 0x0d, 0x57,
	0xc7, 0x20, 0x01, 0x36, 0xcc, 0xd0, 0x70, 0x75, 0x0c, 0x92, 0x62, 0xe9, 0x58, 0x2c, 0xc7, 0xe0,
	0x14, 0x72, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78,
	0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x56, 0xe9, 0x99, 0x25,
	0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x90, 0x98, 0xd3, 0x85, 0xc5, 0x24, 0x8c, 0x0f,
	0x89, 0xf7, 0x0a, 0x7d, 0xa4, 0x44, 0x00, 0x8a, 0xfe, 0xe2, 0x24, 0x36, 0xb0, 0x4a, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x90, 0xdc, 0x9a, 0x1f, 0x02, 0x00, 0x00,
}
