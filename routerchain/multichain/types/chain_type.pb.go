// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/multichain/chain_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ChainType int32

const (
	CHAIN_TYPE_NONE     ChainType = 0
	CHAIN_TYPE_ROUTER   ChainType = 1
	CHAIN_TYPE_EVM      ChainType = 2
	CHAIN_TYPE_COSMOS   ChainType = 3
	CHAIN_TYPE_POLKADOT ChainType = 4
	CHAIN_TYPE_SOLANA   ChainType = 5
	CHAIN_TYPE_NEAR     ChainType = 6
	CHAIN_TYPE_TRON     ChainType = 7
	CHAIN_TYPE_STARKNET ChainType = 8
	CHAIN_TYPE_BITCOIN  ChainType = 9
	CHAIN_TYPE_SUI      ChainType = 10
)

var ChainType_name = map[int32]string{
	0:  "CHAIN_TYPE_NONE",
	1:  "CHAIN_TYPE_ROUTER",
	2:  "CHAIN_TYPE_EVM",
	3:  "CHAIN_TYPE_COSMOS",
	4:  "CHAIN_TYPE_POLKADOT",
	5:  "CHAIN_TYPE_SOLANA",
	6:  "CHAIN_TYPE_NEAR",
	7:  "CHAIN_TYPE_TRON",
	8:  "CHAIN_TYPE_STARKNET",
	9:  "CHAIN_TYPE_BITCOIN",
	10: "CHAIN_TYPE_SUI",
}

var ChainType_value = map[string]int32{
	"CHAIN_TYPE_NONE":     0,
	"CHAIN_TYPE_ROUTER":   1,
	"CHAIN_TYPE_EVM":      2,
	"CHAIN_TYPE_COSMOS":   3,
	"CHAIN_TYPE_POLKADOT": 4,
	"CHAIN_TYPE_SOLANA":   5,
	"CHAIN_TYPE_NEAR":     6,
	"CHAIN_TYPE_TRON":     7,
	"CHAIN_TYPE_STARKNET": 8,
	"CHAIN_TYPE_BITCOIN":  9,
	"CHAIN_TYPE_SUI":      10,
}

func (x ChainType) String() string {
	return proto.EnumName(ChainType_name, int32(x))
}

func (ChainType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1772aa1ee5db7db1, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.multichain.ChainType", ChainType_name, ChainType_value)
}

func init() {
	proto.RegisterFile("routerchain/multichain/chain_type.proto", fileDescriptor_1772aa1ee5db7db1)
}

var fileDescriptor_1772aa1ee5db7db1 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2f, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0x4a, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0xcf, 0x2d, 0xcd, 0x29, 0xc9, 0x84, 0x30, 0xc1,
	0x64, 0x7c, 0x49, 0x65, 0x41, 0xaa, 0x5e, 0x41, 0x51, 0x7e, 0x49, 0xbe, 0x90, 0x2a, 0x44, 0x21,
	0x98, 0x93, 0x9c, 0x9f, 0xa3, 0x87, 0xa4, 0x4f, 0x0f, 0xa1, 0x4f, 0x4a, 0x24, 0x3d, 0x3f, 0x3d,
	0x1f, 0xac, 0x48, 0x1f, 0xc4, 0x82, 0x68, 0x96, 0x92, 0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5,
	0x07, 0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x13, 0xf3, 0x2a, 0x21, 0x52, 0x5a, 0x7f, 0x99, 0xb9, 0x38,
	0x9d, 0x41, 0x5a, 0x43, 0x2a, 0x0b, 0x52, 0x85, 0x34, 0xb8, 0xf8, 0x9d, 0x3d, 0x1c, 0x3d, 0xfd,
	0xe2, 0x43, 0x22, 0x03, 0x5c, 0xe3, 0xfd, 0xfc, 0xfd, 0x5c, 0x05, 0x18, 0xa4, 0x84, 0xbb, 0xe6,
	0x2a, 0xa0, 0x0b, 0x0b, 0xe9, 0x70, 0x09, 0x22, 0x09, 0x05, 0xf9, 0x87, 0x86, 0xb8, 0x06, 0x09,
	0x30, 0x4a, 0x89, 0x76, 0xcd, 0x55, 0xc0, 0x94, 0x10, 0x52, 0xe3, 0xe2, 0x43, 0x12, 0x74, 0x0d,
	0xf3, 0x15, 0x60, 0x92, 0x12, 0xea, 0x9a, 0xab, 0x80, 0x26, 0x8a, 0x66, 0xaa, 0xb3, 0x7f, 0xb0,
	0xaf, 0x7f, 0xb0, 0x00, 0x33, 0x86, 0xa9, 0x10, 0x09, 0x21, 0x03, 0x2e, 0x61, 0x24, 0xc1, 0x00,
	0x7f, 0x1f, 0x6f, 0x47, 0x17, 0xff, 0x10, 0x01, 0x16, 0x29, 0xf1, 0xae, 0xb9, 0x0a, 0xd8, 0xa4,
	0xd0, 0xcc, 0x0f, 0xf6, 0xf7, 0x71, 0xf4, 0x73, 0x14, 0x60, 0xc5, 0x30, 0x1f, 0x22, 0x81, 0x1e,
	0x1a, 0xae, 0x8e, 0x41, 0x02, 0x6c, 0x98, 0xa1, 0xe1, 0xea, 0x18, 0x84, 0xa6, 0x32, 0x24, 0xc8,
	0xdf, 0x4f, 0x80, 0x1d, 0x43, 0x25, 0x48, 0x18, 0xcd, 0xcd, 0xc1, 0x21, 0x8e, 0x41, 0xde, 0x7e,
	0xae, 0x21, 0x02, 0x1c, 0x18, 0x6e, 0x86, 0x49, 0x09, 0xe9, 0x71, 0x09, 0x21, 0x09, 0x3b, 0x79,
	0x86, 0x38, 0xfb, 0x7b, 0xfa, 0x09, 0x70, 0x4a, 0x89, 0x75, 0xcd, 0x55, 0xc0, 0x22, 0x83, 0x16,
	0xd6, 0xc1, 0xa1, 0x9e, 0x02, 0x5c, 0x18, 0x61, 0x1d, 0x1c, 0xea, 0x29, 0xc5, 0xd2, 0xb1, 0x58,
	0x8e, 0xc1, 0x29, 0xe4, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63,
	0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0xac, 0xd2,
	0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x21, 0xa9, 0x4d, 0x17, 0x96, 0xfa,
	0x60, 0x7c, 0x48, 0x5a, 0xad, 0x40, 0x4e, 0xb8, 0xa0, 0x24, 0x5b, 0x9c, 0xc4, 0x06, 0x56, 0x69,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x57, 0x9b, 0x89, 0xdf, 0x02, 0x00, 0x00,
}
