syntax = "proto3";
package routerprotocol.routerchain.inbound;


option go_package = "github.com/router-protocol/sdk-go/routerchain/inbound/types";
import "inbound/incoming_tx_status.proto"; 
import "multichain/chain_type.proto"; 
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto"; 


message IncomingTx {  
  routerprotocol.routerchain.multichain.ChainType chainType = 1;
  string chainId = 2; 
  uint64 eventNonce = 3; 
  uint64 blockHeight = 4;
  string sourceTxHash = 5; 
  uint64 sourceTimestamp = 6;
  bytes sourceSender = 7;   
  string txOrigin = 8;
  string routerBridgeContract = 9; 
  bytes payload = 10; 
  uint64 gasLimit = 11;
  cosmos.base.v1beta1.Coin txFeeInRoute = 12 [(gogoproto.nullable) = false];
  string feePayer = 13; 
  string routeAmount = 14 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string routeRecipient = 15; 
  bytes asmAddress = 16;
  IncomingTxStatus status = 17;   
}

message InboundRequestClaimHash {  
  routerprotocol.routerchain.multichain.ChainType chainType = 1;
  string chainId = 2; 
  uint64 eventNonce = 3; 
  uint64 blockHeight = 4;
  string sourceTxHash = 5; 
  uint64 sourceTimestamp = 6;
  bytes sourceSender = 7;  
  string txOrigin = 8; 
  string routerBridgeContract = 9; 
  bytes payload = 10; 
  uint64 gasLimit = 11;
  string routeAmount = 12 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string routeRecipient = 13; 
  bytes asmAddress = 14;
}