syntax = "proto3";
package routerprotocol.routerchain.outbound;

option go_package = "github.com/router-protocol/sdk-go/routerchain/outbound/types";
import "outbound/contract_call.proto"; 
import "outbound/outgoing_tx_status.proto"; 
import "gogoproto/gogo.proto"; 
import "cosmos/base/v1beta1/coin.proto"; 
import "multichain/chain_type.proto"; 

message OutgoingBatchTx {
  uint64 nonce = 1; 
  routerprotocol.routerchain.multichain.ChainType destinationChainType = 2;
  string destinationChainId = 3; 
  repeated ContractCall contractCalls = 4 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin relayerFee = 5 [(gogoproto.nullable) = false]; 
  uint64 destinationGasLimit = 6;
  uint64 destinationGasPrice = 7;
  cosmos.base.v1beta1.Coin outgoingTxFeeInRoute = 8 [(gogoproto.nullable) = false]; 
  uint64 chainTimestamp = 9;
  int64 expiryTimestamp = 10;
  bool isAtomic = 11; 
  string sourceAddress = 12; 
  OutgoingTxStatus status = 13; 
  string route_amount = 14 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  bytes route_recipient = 15;
  bytes asmAddress = 16;
}

// this line is used by starport scaffolding # genesis/types/import