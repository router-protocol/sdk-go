syntax = "proto3";
package routerprotocol.routerchain.outbound;

option go_package = "github.com/router-protocol/sdk-go/routerchain/outbound/types";

import "outbound/outgoing_tx_status.proto"; 
import "multichain/chain_type.proto"; 
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

message OutboundAck {
  routerprotocol.routerchain.multichain.ChainType chainType = 1;  
  string chainId = 2; 
  uint64 eventNonce = 3; 
  uint64 blockHeight = 4; 
  uint64 outboundTxNonce = 5; 
  string outboundTxRequestedBy = 6; 
  string relayerRouterAddress = 7; 
  string destinationTxHash = 8; 
  cosmos.base.v1beta1.Coin feeConsumedInRoute = 9;
  cosmos.base.v1beta1.Coin refundAmountInRoute = 10;
  OutgoingTxStatus status = 11;   
  bytes contractAckResponses= 12;
  uint64 exeCode = 13;
  bool execStatus = 14;
  repeated bool execFlags = 15;
  repeated bytes execData = 16;
}


message OutboundAckClaimHash {
  routerprotocol.routerchain.multichain.ChainType chainType = 1;  
  string chainId = 2; 
  uint64 eventNonce = 3; 
  uint64 blockHeight = 4; 
  uint64 outboundTxNonce = 5; 
  string outboundTxRequestedBy = 6; 
  string relayerRouterAddress = 7; 
  string destinationTxHash = 8;   
  bytes contractAckResponses= 9;
  uint64 exeCode = 10;
  bool execStatus = 11;
  repeated bool execFlags = 12;
  repeated bytes execData = 13;
}