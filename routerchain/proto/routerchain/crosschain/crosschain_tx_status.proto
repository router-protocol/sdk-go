syntax = "proto3";
package routerprotocol.routerchain.crosschain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosschain/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

enum CrosschainTxStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  CROSSCHAIN_TX_CREATED = 0 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_CREATED"];
  CROSSCHAIN_TX_VALIDATED = 1 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_VALIDATED"];
  NATIVE_TOKEN_TRANFERRED = 2 [(gogoproto.enumvalue_customname) = "NATIVE_TOKEN_TRANFERRED"];
  CROSSCHAIN_TX_BLOCKED = 3 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_BLOCKED"];
  CROSSCHAIN_TX_READY_TO_EXECUTE = 4 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_READY_TO_EXECUTE"];
  CROSSCHAIN_TX_EXECUTION_SUCCESS = 5 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_EXECUTION_SUCCESS"];
  CROSSCHAIN_TX_EXECUTION_FAILED = 6 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_EXECUTION_FAILED"];
  CROSSCHAIN_TX_FEES_SETTLED = 7 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_FEES_SETTLED"];
  CROSSCHAIN_TX_COMPLETED = 8 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_COMPLETED"];
  CROSSCHAIN_TX_IBC_TRANSFERRED = 9 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_IBC_TRANSFERRED"];
  CROSSCHAIN_TX_EXPIRED = 10 [(gogoproto.enumvalue_customname) = "CROSSCHAIN_TX_EXPIRED"];
}