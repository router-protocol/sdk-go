syntax = "proto3";

package routerprotocol.routerchain.crosschain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosschain/types";

// Msg defines the Msg service.
service Msg {
  rpc CrosschainRequest (MsgCrosschainRequest) returns (MsgCrosschainRequestResponse);
}
message MsgCrosschainRequest {
  string orchestrator   =  1;
  string srcchainId     =  2;
  uint64 eventNonce     =  3;
  uint64 blockHeight    =  4;
  string sourceTxHash   =  5;
  uint64 srcTimestamp   =  6;
  string srcTxOrigin    =  7;
  string routeAmount    =  8;
  string routeRecipient =  9;
  string destChainId    = 10;
  string requestSender  = 11;
  bytes request_metadata   = 12;
  bytes request_payload   = 13;
  string relayerFee     = 14;
}

message MsgCrosschainRequestResponse {}

