syntax = "proto3";

package routerprotocol.routerchain.crosschain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosschain/types";

// Msg defines the Msg service.
service Msg {
  rpc CrosschainRequest (MsgCrosschainRequest) returns (MsgCrosschainRequestResponse);
}
message MsgCrosschainRequest {
  string orchestrator   =  1;
  string src_chain_id     =  2;
  uint64 event_nonce     =  3;
  uint64 block_height    =  4;
  string source_tx_hash   =  5;
  uint64 src_timestamp   =  6;
  string src_tx_origin    =  7;
  uint64 route_amount    =  8;
  string route_recipient =  9;
  string dest_chain_id    = 10;
  string request_sender  = 11;
  bytes request_metadata   = 12;
  bytes request_payload   = 13;
}

message MsgCrosschainRequestResponse {}

