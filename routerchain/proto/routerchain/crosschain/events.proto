syntax = "proto3";
package routerprotocol.routerchain.crosschain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosschain/types";

import "routerchain/multichain/chain_type.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

message EventCrosschainRequestCreated {
  bytes attestation_id = 1;
  string src_chain_id     =  2;
  uint64 request_identifier     =  3;
  uint64 block_height    =  4;
  string source_tx_hash   =  5;
  uint64 src_timestamp   =  6;
  string src_tx_origin    =  7;
  string                                          route_amount     =  9 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string                                           route_recipient  =  10;
  string                                          dest_chain_id    = 11;
  string                                           request_sender   = 12;
  bytes                                           request_metadata = 13;
  bytes                                           request_packet   = 14;
  routerprotocol.routerchain.multichain.ChainType src_chain_type   = 15;
  routerprotocol.routerchain.multichain.ChainType dest_chain_type  = 16;
}

message EventCrosschainRequestValidated {
  bytes attestation_id = 1;
  string src_chain_id = 2; 
  uint64 request_identifier = 3;   
}

message EventCrosschainRequestConfirm {  
  string source_chain_id = 1; 
  uint64 request_identifier = 2;   
  bytes claim_hash = 3;
  string eth_signer = 4; 
  string signature = 5;   
  string orchestrator = 6;
}

message EventHandleNativeTransfer {    
  string source_chain_id = 1; 
  uint64 request_identifier = 2;     
  string route_amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string route_recipient = 4; 
}


message EventCrosschainReadyToExecute {    
  string source_chain_id = 1; 
  uint64 request_identifier = 2;   
  bytes claim_hash = 3;
  string fee_payer = 4;
  cosmos.base.v1beta1.Coin dest_tx_fee_in_route = 5 [(gogoproto.nullable) = false];
  uint64 dest_gas_limit = 6;
	uint64 dest_gas_price = 7;
  cosmos.base.v1beta1.Coin relayer_incentive_in_route = 8 [(gogoproto.nullable) = false];
}

message EventCrosschainRequestBlocked {
  bytes attestation_id = 1;
  string src_chain_id = 2; 
  uint64 request_identifier = 3;  
  uint64 blocked_expiry_height = 4;
}

message EventCrosschainRequestExpired {
  bytes attestation_id = 1;
  string src_chain_id = 2; 
  uint64 request_identifier = 3;  
  uint64 blocked_expiry_height = 4;
}


message EventCrosschainExecuted {
  bytes attestation_id = 1;
  string src_chain_id = 2; 
  uint64 request_identifier = 3;
  bytes exec_response = 4;
}

message EventCrosschainExecutionFailed {
  bytes attestation_id = 1;
  string src_chain_id = 2; 
  uint64 request_identifier = 3;
  bytes exec_err_response = 4;
}

message EventCrosschainIBCTransferred {
  string src_chain_id = 2; 
  uint64 request_identifier = 3;
}
  
message EventCrosschainFeePayerUpdated {    
  string src_chain_id = 1; 
  uint64 request_identifier = 2;   
  bytes claim_hash = 3;
  string fee_payer = 4;
}

message EventCrosschainDestGasIncremented {  
  string src_chain_id = 1; 
  uint64 request_identifier = 2;   
  bytes claim_hash = 3;
  string fee_payer = 4;
  uint64 dest_gas_limit = 5;
  uint64 dest_gas_price = 6;
}

message EventCrosschainRequestFeeSettlement {    
  string src_chain_id = 1; 
  uint64 request_identifier = 2;     
  cosmos.base.v1beta1.Coin relayer_fee_in_route = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin refund_fee_in_route = 4 [(gogoproto.nullable) = false];
}

message EventCrosschainRequestCompleted {    
  string src_chain_id = 1; 
  uint64 request_identifier = 2;   
  bytes claim_hash = 3;  
}

message EventCrosschainAckRequestCreated {
  bytes attestation_id = 1;
  string ack_src_chain_id              =  2;
  uint64 ack_request_identifier           =  3;
  uint64 block_height          =  4;
  string dest_tx_hash           =  5;
  string relayer_router_address =  6;
  string ack_dest_chain_id        =  7;
  string  request_sender       =  8;
  uint64 request_identifier    =  9;
  routerprotocol.routerchain.multichain.ChainType ack_src_chain_type   = 10;
  routerprotocol.routerchain.multichain.ChainType ack_dest_chain_type  = 11;
  bytes  exec_data             = 12;
  bool   exec_status           = 13;
}

message EventCrosschainAckRequestConfirm {    
  string ack_src_chain_id = 1; 
  uint64 ack_request_identifier = 2; 
  bytes claim_hash = 3; 
  string eth_signer = 4; 
  string signature = 5; 
  string orchestrator = 6;
}

message EventCrosschainAckRequestBlocked {
  bytes attestation_id = 1;
  string ack_src_chain_id = 2; 
  uint64 ack_request_identifier = 3;  
  uint64 blocked_expiry_height = 4;
}

message EventCrosschainAckRequestExpired {
  bytes attestation_id = 1;
  string ack_src_chain_id = 2; 
  uint64 ack_request_identifier = 3;  
  uint64 blocked_expiry_height = 4;
}

message EventCrosschainAckReadyToExecute {  
  string ack_src_chain_id = 1; 
  uint64 ack_request_identifier = 2;  
  bytes claim_hash = 3;
  string fee_payer = 4;
  cosmos.base.v1beta1.Coin tx_fee_in_route = 5 [(gogoproto.nullable) = false];
  uint64 ack_gas_limit = 6;
	uint64 ack_gas_price = 7;
  cosmos.base.v1beta1.Coin ack_relayer_incentive_in_route = 8 [(gogoproto.nullable) = false];
}


message EventCrosschainAckExecuted {
  bytes attestation_id = 1;
  string ack_src_chain_id = 2; 
  uint64 ack_request_identifier = 3;
  bytes ack_exec_response = 4;  
}

message EventCrosschainAckExecutionFailed {
  bytes attestation_id = 1;
  string ack_src_chain_id = 2; 
  uint64 ack_request_identifier = 3;
  bytes ack_exec_err_response = 4;  
}


message EventCrosschainAckIBCTransferred {
  string ack_src_chain_id = 1; 
  uint64 ack_request_identifier = 2;  
}

message EventCrosschainAckFeeSettlement {  
  string ack_src_chain_id = 1; 
  uint64 ack_request_identifier = 2;     
  cosmos.base.v1beta1.Coin relayer_fee_in_route = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin refund_fee_in_route = 4 [(gogoproto.nullable) = false];
}


message EventCrosschainAckCompleted {    
  string ack_src_chain_id = 1; 
  uint64 ack_request_identifier = 2;  
  bytes claim_hash = 3;  
}

message EventCrosschainAckGasIncremented {    
  string ack_src_chain_type = 1; 
  uint64 ack_request_identifier = 2;   
  bytes claim_hash = 3;
  string fee_payer = 4;
  uint64 ack_gas_limit = 5;
  uint64 ack_gas_price = 6;
}

message EventCrosschainAckReceiptCreated {
  bytes attestation_id = 1;
  string ack_receipt_src_chain_id              = 2;
  uint64 ack_receipt_identifier           = 3;
  uint64 ack_receipt_block_height          = 4;
  string ack_receipt_tx_hash               = 5;
  string relayer_router_address = 6;
  uint64 request_identifier    = 7;
}

message EventCrosschainReceiptCompleted {    
  string ack_receipt_src_chain_id = 1; 
  uint64 ack_receipt_identifier = 2;   
  bytes claim_hash = 3;   
}

message EventCreateIBCConfig {
  string port_id = 1;
}

message EventUpdateIBCConfig {
  string port_id = 1;
}
