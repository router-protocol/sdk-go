syntax = "proto3";
package routerprotocol.routerchain.crosschain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosschain/types";

import "multichain/chain_type.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

message EventCrosschainRequestCreated {
  bytes attestation_id = 1;
  string src_chain_id     =  2;
  uint64 request_identifier     =  3;
  uint64 block_height    =  4;
  string source_tx_hash   =  5;
  uint64 src_timestamp   =  6;
  string src_tx_origin    =  7;
  string                                          route_amount     =  9 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string                                           route_recipient  =  10;
  string                                          dest_chain_id    = 11;
  string                                           request_sender   = 12;
  bytes                                           request_metadata = 13;
  bytes                                           request_packet   = 14;
  routerprotocol.routerchain.multichain.ChainType src_chain_type   = 15;
  routerprotocol.routerchain.multichain.ChainType dest_chain_type  = 16;
  string status = 17; 
}

message EventCrosschainRequestConfirm {  
  string sourceChainId = 1; 
  uint64 request_identifier = 2;   
  bytes claimHash = 3;
  string ethSigner = 4; 
  string signature = 5;   
  string orchestrator = 6;
}

message EventCrosschainReadyToExecute {    
  string sourceChainId = 1; 
  uint64 request_identifier = 2;   
  bytes claimHash = 3;
  string feePayer = 4;
  cosmos.base.v1beta1.Coin destinationTxFeeInRoute = 5 [(gogoproto.nullable) = false];
}

message EventCrosschainExecuted {
  bytes attestation_id = 1;
  string sourceChainId = 2; 
  uint64 request_identifier = 3;
  bytes delegationResponse = 4;
  cosmos.base.v1beta1.Coin refundFeeInRoute = 5 [(gogoproto.nullable) = false];
}

message EventCrosschainExecutionFailed {
  bytes attestation_id = 1;
  string sourceChainId = 2; 
  uint64 request_identifier = 3;
  string delegationErrorResponse = 4;
  cosmos.base.v1beta1.Coin refundFeeInRoute = 5 [(gogoproto.nullable) = false];
}


message EventCrosschainFeePayerUpdated {    
  string sourceChainId = 1; 
  uint64 request_identifier = 2;   
  bytes claimHash = 3;
  string feePayer = 4;
}

message EventCrosschainDestGasIncremented {  
  string sourceChainId = 1; 
  uint64 request_identifier = 2;   
  bytes claimHash = 3;
  string feePayer = 4;
  uint64 destinationGasLimit = 5;
  uint64 destinationGasPrice = 6;
}

message EventCrosschainCompleted {    
  string sourceChainId = 1; 
  uint64 request_identifier = 2;   
  bytes claimHash = 3;  
}

message EventCrosschainAckRequestCreated {
  bytes attestation_id = 1;
  string ack_src_chain_id              =  2;
  uint64 ack_request_identifier           =  3;
  uint64 blockHeight          =  4;
  string destTxHash           =  5;
  string relayerRouterAddress =  6;
  string ack_dest_chain_id        =  7;
  string  request_sender       =  8;
  uint64 requestIdentifier    =  9;
  routerprotocol.routerchain.multichain.ChainType ack_src_chain_type   = 10;
  routerprotocol.routerchain.multichain.ChainType ack_dest_chain_type  = 11;
  bytes  execData             = 12;
  bool   execStatus           = 13;
  string status = 14; 
}

message EventCrosschainAckRequestConfirm {    
  string ackSrcChainId = 1; 
  uint64 ack_request_identifier = 2; 
  bytes claimHash = 3; 
  string ethSigner = 4; 
  string signature = 5; 
  string orchestrator = 6;
}

message EventCrosschainAckReadyToExecute {  
  string ackSrcChainId = 1; 
  uint64 ack_request_identifier = 2;  
  bytes claimHash = 3;
  string feePayer = 4;
  cosmos.base.v1beta1.Coin txFeeInRoute = 5 [(gogoproto.nullable) = false];
}


message EventCrosschainAckExecuted {
  bytes attestation_id = 1;
  string ackSrcChainId = 2; 
  uint64 ack_request_identifier = 3;
  bytes delegationResponse = 4;
  cosmos.base.v1beta1.Coin refundFeeInRoute = 5 [(gogoproto.nullable) = false];
}

message EventCrosschainAckExecutionFailed {
  bytes attestation_id = 1;
  string ackSrcChainId = 2; 
  uint64 request_ideack_request_identifierntifier = 3;
  string delegationErrorResponse = 4;
  cosmos.base.v1beta1.Coin refundFeeInRoute = 5 [(gogoproto.nullable) = false];
}


message EventCrosschainAckCompleted {    
  string ackSrcChainId = 1; 
  uint64 ack_request_identifier = 2;  
  bytes claimHash = 3;  
}

message EventCrosschainRequestFeeSettlement {    
  string sourceChainId = 1; 
  uint64 requestIdentifier = 2;     
  cosmos.base.v1beta1.Coin relayerFeeInRoute = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin refundFeeInRoute = 4 [(gogoproto.nullable) = false];
}


message EventCrosschainAckGasIncremented {    
  string ackSrcChainType = 1; 
  uint64 ack_request_identifier = 2;   
  bytes claimHash = 3;
  string feePayer = 4;
  uint64 ackGasLimit = 5;
  uint64 ackGasPrice = 6;
}

message EventCrosschainAckReceiptCreated {
  bytes attestation_id = 1;
  string ackReceiptSrcChainId              = 2;
  uint64 ack_receipt_identifier           = 3;
  uint64 ack_receipt_blockHeight          = 4;
  string ack_receipt_txHash               = 5;
  string relayerRouterAddress = 6;
  uint64 requestIdentifier    = 7;
  string status = 8; 
}


message EventCrosschainReceiptFeeSettlement {  
  string ackReceiptSrcChainId = 1; 
  uint64 ack_receipt_identifier = 2;     
  cosmos.base.v1beta1.Coin relayerFeeInRoute = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin refundFeeInRoute = 4 [(gogoproto.nullable) = false];
}


message EventCrosschainReceiptCompleted {    
  string ackReceiptSrcChainId = 1; 
  uint64 ackReceiptIdentifier = 2;   
  bytes claimHash = 3;   
}