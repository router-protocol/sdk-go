syntax = "proto3";
package routerprotocol.routerchain.oracle;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "oracle/band_token_prices.proto";
import "oracle/gas_price_state.proto";
import "oracle/band_oracle_request.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/router-protocol/sdk-go/routerchain/oracle/types";

// Msg defines the Msg service.
service Msg {
      rpc BandTokenPricesData(MsgBandTokenPricesData) returns (MsgBandTokenPricesDataResponse);
  rpc CreateBandOracleRequest(MsgCreateBandOracleRequest) returns (MsgCreateBandOracleRequestResponse);
  rpc UpdateBandOracleRequest(MsgUpdateBandOracleRequest) returns (MsgUpdateBandOracleRequestResponse);
  rpc DeleteBandOracleRequest(MsgDeleteBandOracleRequest) returns (MsgDeleteBandOracleRequestResponse);
  rpc GasPrices(MsgGasPrices) returns (MsgGasPricesResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgBandTokenPricesData {
  string creator = 1;
  uint64 oracle_script_id = 2 [
    (gogoproto.customname) = "OracleScriptID",
    (gogoproto.moretags) = "yaml:\"oracle_script_id\""
  ];
  string source_channel = 3;
  BandTokenPricesCallData calldata = 4;
  uint64 ask_count = 5;
  uint64 min_count = 6;
  repeated cosmos.base.v1beta1.Coin fee_limit = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  uint64 prepare_gas = 8;
  uint64 execute_gas = 9;
  string client_id = 10 [(gogoproto.customname) = "ClientID"];
}

message MsgBandTokenPricesDataResponse {
}

message MsgCreateBandOracleRequest {
  string creator = 1;
  uint64 requestId = 2;

  uint64 oracleScriptId = 3;
  repeated string symbols = 4;
  uint64 askCount = 5;
  uint64 minCount = 6;
  uint64 prepareGas = 7;
  uint64 executeGas = 8;
}
message MsgCreateBandOracleRequestResponse {}

message MsgUpdateBandOracleRequest {
  string creator = 1;
  uint64 requestId = 2;

  uint64 oracleScriptId = 3;
  repeated string symbols = 4;
  uint64 askCount = 5;
  uint64 minCount = 6;
  uint64 prepareGas = 7;
  uint64 executeGas = 8;
}
message MsgUpdateBandOracleRequestResponse {}

message MsgDeleteBandOracleRequest {
  string creator = 1;
  uint64 requestId = 2;
}
message MsgDeleteBandOracleRequestResponse {}


message MsgGasPrices {
  string gasOracleProvider = 1;
  repeated GasPriceState  gasPrices = 2 [
    (gogoproto.nullable) = false
  ];
}

message MsgGasPricesResponse {
}

// this line is used by starport scaffolding # proto/tx/message
