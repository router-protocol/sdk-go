syntax = "proto3";
package routerprotocol.routerchain.multichain;

option go_package = "github.com/router-protocol/sdk-go/routerchain/multichain/types";

import "routerprotocol/routerchain/multichain/chain_type.proto"; 
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

enum ContractType {
  option (gogoproto.goproto_enum_prefix) = false;

  GATEWAY = 0 [(gogoproto.enumvalue_customname) = "GATEWAY"];
  VOYAGER = 1 [(gogoproto.enumvalue_customname) = "VOYAGER"];  
}

message ContractConfig {  
  string chainId = 1; 
  string contractAddress = 2; 
  uint64 contractHeight = 3;
  uint64 lastObservedEventNonce = 4;
  uint64 lastObservedEventBlockHeight = 5; 
  ContractType contractType = 6;   
  bool claimSlashingEnabled = 7;
  uint64 claimSlashingWindow = 8;
  bytes slash_fraction_missing_claim = 9
    [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  bytes slash_fraction_conflicting_claim = 10
    [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  bool contract_enabled = 11;

}

message ChainConfig {
  string chainId = 1; 
  string chainName = 2; 
  string symbol = 3;   
  int64 native_decimals = 4; 
  ChainType chainType = 5; 
  uint64 confirmationsRequired = 6;   
  uint64 lastObservedValsetNonce = 7; 
  bool chain_enabled = 8;
  bool is_unordered_nonces = 9;   
}