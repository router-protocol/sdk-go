syntax = "proto3";

package routerprotocol.routerchain.metastore;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "metastore/params.proto";
import "metastore/meta_info.proto";
import "metastore/metadata_request.proto";

option go_package = "github.com/router-protocol/sdk-go/routerchain/metastore/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/params";
  }
  
  // Queries all MetaInfo items
  rpc MetaInfoAll (QueryAllMetaInfoRequest) returns (QueryAllMetaInfoResponse) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/meta_info";
  }

  // Queries a list of MetaInfo items by dapp address
  rpc MetaInfoAllByAddress (QueryAllMetaInfoRequestByAddress) returns (QueryAllMetaInfoResponseByAddress) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/meta_infos/by_address/{address}";
  }

  // Queries MetaInfo item by dapp address and chain id.
  rpc MetaInfoAllByChainAndAddress (QueryAllMetaInfoRequestByChainAndAddress) returns (QueryAllMetaInfoResponseByChainAndAddress) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/meta_info/{chain_ids}/{address}/{status}";
  }

  // Queries a list of MetaInfo items by chain id
  rpc MetaInfoAllByChainID (QueryAllMetaInfoRequestByChainID) returns (QueryAllMetaInfoResponseByChainID) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/meta_infos/by_chain_id/{chain_ids}";
  }

  // Queries a list of MetadataRequest items.
  rpc MetadataRequest    (QueryGetMetadataRequestRequest) returns (QueryGetMetadataRequestResponse) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/metadata_request/{chain_id}/{event_nonce}";
  }

  // Queries a list of all MetadataRequest items.
  rpc MetadataRequestAll (QueryAllMetadataRequestRequest) returns (QueryAllMetadataRequestResponse) {
    option (google.api.http).get = "/router-protocol/router-chain/metastore/metadata_request";
  }
}

enum MetaInfoQueryStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  ALL = 0 [(gogoproto.enumvalue_customname) = "ALL"];
  PENDING = 1 [(gogoproto.enumvalue_customname) = "PENDING"];
  APPROVED = 2 [(gogoproto.enumvalue_customname) = "APPROVED"];
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMetaInfoRequest {
  string chain_id = 1;
  string address = 2;
}

message QueryGetMetaInfoResponse {
  MetaInfo metaInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllMetaInfoRequestByChainAndAddress {
  string chain_ids = 1;
  string address = 2;
  MetaInfoQueryStatus status = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryAllMetaInfoResponseByChainAndAddress {
  repeated MetaInfo                               metaInfo   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllMetaInfoRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMetaInfoResponse {
  repeated MetaInfo                               metaInfo   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetMetadataRequestRequest {
	  string chain_id = 1;
	  uint64 event_nonce = 2;
}

message QueryGetMetadataRequestResponse {
  MetadataRequest metadataRequest = 1 [(gogoproto.nullable) = false];
}

message QueryAllMetadataRequestRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMetadataRequestResponse {
  repeated MetadataRequest                        metadataRequest = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

message QueryAllMetaInfoRequestByAddress {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllMetaInfoResponseByAddress {
  repeated MetaInfo                               metaInfo   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllMetaInfoRequestByChainID {
  string chain_ids = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllMetaInfoResponseByChainID {
  repeated MetaInfo                               metaInfo   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
