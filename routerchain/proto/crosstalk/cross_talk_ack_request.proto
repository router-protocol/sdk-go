syntax = "proto3";
package routerprotocol.routerchain.crosstalk;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosstalk/types";

import "crosstalk/crosstalk_ack_request_status.proto"; 
import "multichain/chain_type.proto"; 
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

message CrossTalkAckRequest {  
  uint64 eventNonce = 1; 
  uint64 blockHeight = 2; 
  string relayerRouterAddress = 3;
  routerprotocol.routerchain.multichain.ChainType sourceChainType = 4;
  string sourceChainId = 5;
  routerprotocol.routerchain.multichain.ChainType chainType = 6;
  string chainId = 7;
  string destinationTxHash = 8; 
  uint64 eventIdentifier = 9; 
  bytes crosstalkRequestSender = 10;
  uint64 crosstalkNonce = 11; 
  bytes contractAckResponses = 12;   
  uint64 exeCode = 13; 
  bool execStatus = 14; 
  repeated bool execFlags = 15;
  repeated bytes execData = 16;
  cosmos.base.v1beta1.Coin feeConsumedInRoute = 17 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin feeDeductedInRouteForAck = 18 [(gogoproto.nullable) = false];
  CrossTalkAckRequestStatus status = 19;    
}

message CrossTalkAckRequestClaimHash {  
  uint64 eventNonce = 1; 
  uint64 blockHeight = 2; 
  string relayerRouterAddress = 3;
  routerprotocol.routerchain.multichain.ChainType sourceChainType = 4;
  string sourceChainId = 5;
  routerprotocol.routerchain.multichain.ChainType chainType = 6;
  string chainId = 7;
  string destinationTxHash = 8; 
  uint64 eventIdentifier = 9; 
  bytes crosstalkRequestSender = 10;
  uint64 crosstalkNonce = 11; 
  bytes contractAckResponses = 12;   
  uint64 exeCode = 13; 
  bool execStatus = 14; 
  repeated bool execFlags = 15;
  repeated bytes execData = 16;
}