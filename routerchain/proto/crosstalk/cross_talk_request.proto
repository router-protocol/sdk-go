syntax = "proto3";
package routerprotocol.routerchain.crosstalk;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosstalk/types";
import "crosstalk/crosstalk_request_status.proto"; 
import "crosstalk/crosstalk_request_ack_type.proto"; 
import "cosmos/base/v1beta1/coin.proto";
import "multichain/chain_type.proto"; 
import "gogoproto/gogo.proto"; 


message CrossTalkRequest {  
  uint64 eventNonce = 1; 
  uint64 blockHeight = 2; 
  routerprotocol.routerchain.multichain.ChainType sourceChainType = 3; 
  string sourceChainId = 4; 
  string sourceTxHash = 5; 
  uint64 sourceTimestamp = 6;
  routerprotocol.routerchain.multichain.ChainType destinationChainType = 7; 
  string destinationChainId = 8; 
  uint64 destinationGasLimit = 9;
  uint64 destinationGasPrice = 10;  
  cosmos.base.v1beta1.Coin destinationTxFeeInRoute = 11 [(gogoproto.nullable) = false];
  string requestSender = 12; 
  string requestTxOrigin = 13;
  bool isReadCall = 14;
  uint64 requestNonce = 15;   
  bool isAtomic = 16; 
  uint64 expiryTimestamp = 17; 
  repeated bytes destContractAddresses = 18;
  repeated bytes destContractPayloads = 19;
  CrossTalkRequestAckType ackType = 20;
  uint64 ackGasLimit = 21;
  uint64 ackGasPrice = 22;
  bytes feePayer = 23; 
  bytes asmAddress = 24;  
  CrossTalkRequestStatus status = 25;    
}


message CrossTalkRequestClaimHash {  
  uint64 eventNonce = 1; 
  uint64 blockHeight = 2; 
  routerprotocol.routerchain.multichain.ChainType sourceChainType = 3; 
  string sourceChainId = 4; 
  string sourceTxHash = 5; 
  uint64 sourceTimestamp = 6;
  routerprotocol.routerchain.multichain.ChainType destinationChainType = 7; 
  string destinationChainId = 8; 
  uint64 destinationGasLimit = 9;
  uint64 destinationGasPrice = 10;   
  string requestSender = 11; 
  string requestTxOrigin = 12;
  bool isReadCall = 13;
  uint64 requestNonce = 14;   
  bool isAtomic = 15; 
  uint64 expiryTimestamp = 16; 
  repeated bytes destContractAddresses = 17;
  repeated bytes destContractPayloads = 18;
  CrossTalkRequestAckType ackType = 19;
  uint64 ackGasLimit = 20;
  uint64 ackGasPrice = 21;
  bytes asmAddress = 22;    
}

