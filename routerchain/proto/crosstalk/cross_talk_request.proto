syntax = "proto3";
package routerprotocol.routerchain.crosstalk;

option go_package = "github.com/router-protocol/sdk-go/routerchain/crosstalk/types";
import "crosstalk/crosstalk_contract_call.proto"; 
import "crosstalk/crosstalk_request_status.proto"; 

import "multichain/chain_type.proto"; 
import "gogoproto/gogo.proto"; 


message CrossTalkRequest {  
  uint64 eventNonce = 1; 
  uint64 blockHeight = 2; 
  routerprotocol.routerchain.multichain.ChainType sourceChainType = 3; 
  string sourceChainId = 4; 
  string sourceTxHash = 5; 
  routerprotocol.routerchain.multichain.ChainType destinationChainType = 6; 
  string destinationChainId = 7; 
  string requestSender = 8; 
  uint64 requestNonce = 9;   
  bool isAtomic = 10; 
  uint64 gasLimit = 11; 
  uint64 gasPrice = 12; 
  uint64 expiryTimestamp = 13; 
  string ethSigner = 14; 
  string signature = 15; 
  repeated CrosstalkContractCall contractCalls = 16 [(gogoproto.nullable) = false];
  CrossTalkRequestStatus status = 17;    
}

