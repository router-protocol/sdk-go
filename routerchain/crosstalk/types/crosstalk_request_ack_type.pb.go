// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: crosstalk/crosstalk_request_ack_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CrossTalkRequestAckType int32

const (
	CROSSTALK_REQUEST_NO_ACK         CrossTalkRequestAckType = 0
	CROSSTALK_REQUEST_ACK_ON_SUCCESS CrossTalkRequestAckType = 1
	CROSSTALK_REQUEST_ACK_ON_ERROR   CrossTalkRequestAckType = 2
	CROSSTALK_REQUEST_ACK            CrossTalkRequestAckType = 3
)

var CrossTalkRequestAckType_name = map[int32]string{
	0: "CROSSTALK_REQUEST_NO_ACK",
	1: "CROSSTALK_REQUEST_ACK_ON_SUCCESS",
	2: "CROSSTALK_REQUEST_ACK_ON_ERROR",
	3: "CROSSTALK_REQUEST_ACK",
}

var CrossTalkRequestAckType_value = map[string]int32{
	"CROSSTALK_REQUEST_NO_ACK":         0,
	"CROSSTALK_REQUEST_ACK_ON_SUCCESS": 1,
	"CROSSTALK_REQUEST_ACK_ON_ERROR":   2,
	"CROSSTALK_REQUEST_ACK":            3,
}

func (x CrossTalkRequestAckType) String() string {
	return proto.EnumName(CrossTalkRequestAckType_name, int32(x))
}

func (CrossTalkRequestAckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7d2e0b8d1c9e92f4, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosstalk.CrossTalkRequestAckType", CrossTalkRequestAckType_name, CrossTalkRequestAckType_value)
}

func init() {
	proto.RegisterFile("crosstalk/crosstalk_request_ack_type.proto", fileDescriptor_7d2e0b8d1c9e92f4)
}

var fileDescriptor_7d2e0b8d1c9e92f4 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0x2e, 0xca, 0x2f,
	0x2e, 0x2e, 0x49, 0xcc, 0xc9, 0xd6, 0x87, 0xb3, 0xe2, 0x8b, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0xe2, 0x13, 0x93, 0xb3, 0xe3, 0x4b, 0x2a, 0x0b, 0x52, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0x54, 0x8a, 0xf2, 0x4b, 0x4b, 0x52, 0x8b, 0xc0, 0x9c, 0xe4, 0xfc, 0x1c, 0x3d, 0x08, 0x37, 0x39,
	0x23, 0x31, 0x33, 0x4f, 0x0f, 0xae, 0x59, 0x4a, 0x24, 0x3d, 0x3f, 0x3d, 0x1f, 0xac, 0x46, 0x1f,
	0xc4, 0x82, 0xe8, 0x95, 0x92, 0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xf3, 0x92, 0x4a,
	0xd3, 0xf4, 0x13, 0xf3, 0x2a, 0x21, 0x52, 0x5a, 0x4b, 0x99, 0xb8, 0xc4, 0x9d, 0x41, 0xda, 0x43,
	0x12, 0x73, 0xb2, 0x83, 0x20, 0x56, 0x3b, 0x26, 0x67, 0x87, 0x54, 0x16, 0xa4, 0x0a, 0x59, 0x71,
	0x49, 0x38, 0x07, 0xf9, 0x07, 0x07, 0x87, 0x38, 0xfa, 0x78, 0xc7, 0x07, 0xb9, 0x06, 0x86, 0xba,
	0x06, 0x87, 0xc4, 0xfb, 0xf9, 0xc7, 0x3b, 0x3a, 0x7b, 0x0b, 0x30, 0x48, 0xc9, 0x74, 0xcd, 0x55,
	0xc0, 0x29, 0x2f, 0xe4, 0xc5, 0xa5, 0x80, 0x29, 0xe7, 0xe8, 0xec, 0x1d, 0xef, 0xef, 0x17, 0x1f,
	0x1c, 0xea, 0xec, 0xec, 0x1a, 0x1c, 0x2c, 0xc0, 0x28, 0xa5, 0xd2, 0x35, 0x57, 0x81, 0xa0, 0x3a,
	0x21, 0x37, 0x2e, 0x39, 0x9c, 0x6a, 0x5c, 0x83, 0x82, 0xfc, 0x83, 0x04, 0x98, 0xa4, 0x94, 0xba,
	0xe6, 0x2a, 0x10, 0x50, 0x25, 0x64, 0xc2, 0x25, 0x8a, 0x55, 0x85, 0x00, 0xb3, 0x94, 0x64, 0xd7,
	0x5c, 0x05, 0xec, 0x92, 0x52, 0x2c, 0x1d, 0x8b, 0xe5, 0x18, 0x9c, 0x82, 0x4f, 0x3c, 0x92, 0x63,
	0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96,
	0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0xca, 0x32, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39,
	0x3f, 0x57, 0x1f, 0x12, 0x29, 0xba, 0xb0, 0x48, 0x82, 0xf1, 0xc1, 0xb1, 0xa4, 0x5f, 0x81, 0x88,
	0x64, 0x7d, 0x50, 0xc4, 0x16, 0x27, 0xb1, 0x81, 0x15, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x76, 0xfe, 0x50, 0xbd, 0x08, 0x02, 0x00, 0x00,
}
