// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/crosschain/workflow_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowType int32

const (
	NONE          WorkflowType = 0
	INBOUND       WorkflowType = 1
	CROSSTALK     WorkflowType = 2
	OUTBOUND      WorkflowType = 3
	INBOUND_ACK   WorkflowType = 4
	CROSSTALK_ACK WorkflowType = 5
	OUTBOUND_ACK  WorkflowType = 6
)

var WorkflowType_name = map[int32]string{
	0: "NONE",
	1: "INBOUND",
	2: "CROSSTALK",
	3: "OUTBOUND",
	4: "INBOUND_ACK",
	5: "CROSSTALK_ACK",
	6: "OUTBOUND_ACK",
}

var WorkflowType_value = map[string]int32{
	"NONE":          0,
	"INBOUND":       1,
	"CROSSTALK":     2,
	"OUTBOUND":      3,
	"INBOUND_ACK":   4,
	"CROSSTALK_ACK": 5,
	"OUTBOUND_ACK":  6,
}

func (x WorkflowType) String() string {
	return proto.EnumName(WorkflowType_name, int32(x))
}

func (WorkflowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_484658436ba019a1, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosschain.WorkflowType", WorkflowType_name, WorkflowType_value)
}

func init() {
	proto.RegisterFile("routerchain/crosschain/workflow_type.proto", fileDescriptor_484658436ba019a1)
}

var fileDescriptor_484658436ba019a1 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2a, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0x4a, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x4f, 0x2e, 0xca, 0x2f, 0x2e, 0x86, 0x30, 0xcb,
	0xf3, 0x8b, 0xb2, 0xd3, 0x72, 0xf2, 0xcb, 0xe3, 0x4b, 0x2a, 0x0b, 0x52, 0xf5, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0x54, 0x21, 0x6a, 0xc1, 0x9c, 0xe4, 0xfc, 0x1c, 0x3d, 0x24, 0xad, 0x7a, 0x08,
	0xad, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0x45, 0xfa, 0x20, 0x16, 0x44, 0xb3, 0x94, 0x64,
	0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x98, 0x97, 0x54, 0x9a, 0xa6, 0x9f, 0x98, 0x57, 0x09,
	0x91, 0xd2, 0x7a, 0xc1, 0xc8, 0xc5, 0x13, 0x0e, 0xb5, 0x2f, 0xa4, 0xb2, 0x20, 0x55, 0x48, 0x88,
	0x8b, 0xc5, 0xcf, 0xdf, 0xcf, 0x55, 0x80, 0x41, 0x8a, 0xa3, 0x6b, 0xae, 0x02, 0x98, 0x2d, 0x24,
	0xc1, 0xc5, 0xee, 0xe9, 0xe7, 0xe4, 0x1f, 0xea, 0xe7, 0x22, 0xc0, 0x28, 0xc5, 0xdd, 0x35, 0x57,
	0x01, 0xc6, 0x15, 0x92, 0xe1, 0xe2, 0x74, 0x0e, 0xf2, 0x0f, 0x0e, 0x0e, 0x71, 0xf4, 0xf1, 0x16,
	0x60, 0x92, 0xe2, 0xed, 0x9a, 0xab, 0x80, 0x10, 0x10, 0x92, 0xe2, 0xe2, 0xf0, 0x0f, 0x0d, 0x81,
	0x68, 0x64, 0x96, 0xe2, 0xe9, 0x9a, 0xab, 0x00, 0xe7, 0x0b, 0x29, 0x70, 0x71, 0x43, 0x0d, 0x89,
	0x77, 0x74, 0xf6, 0x16, 0x60, 0x91, 0xe2, 0xef, 0x9a, 0xab, 0x80, 0x2c, 0x24, 0xa4, 0xc2, 0xc5,
	0x0b, 0x37, 0x0a, 0xac, 0x86, 0x55, 0x4a, 0xb0, 0x6b, 0xae, 0x02, 0xaa, 0xa0, 0x90, 0x12, 0x17,
	0x0f, 0xcc, 0x4c, 0xb0, 0x22, 0x36, 0x29, 0x81, 0xae, 0xb9, 0x0a, 0x28, 0x62, 0x52, 0x2c, 0x1d,
	0x8b, 0xe5, 0x18, 0x9c, 0x42, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23,
	0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0xca,
	0x2a, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f, 0x12, 0xb0, 0xba, 0xb0,
	0x80, 0x86, 0xf1, 0x21, 0x31, 0x53, 0x81, 0x1c, 0x4d, 0xa0, 0xd8, 0x29, 0x4e, 0x62, 0x03, 0xab,
	0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xc6, 0x07, 0xb8, 0xcd, 0x01, 0x00, 0x00,
}
