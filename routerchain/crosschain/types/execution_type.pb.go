// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/crosschain/execution_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ExecuteMsgType int32

const (
	CHAIN_TYPE_NONE       ExecuteMsgType = 0
	EXECUTE_CONTRACT_CALL ExecuteMsgType = 1
	EXECUTE_IBC_MSG       ExecuteMsgType = 2
)

var ExecuteMsgType_name = map[int32]string{
	0: "EXECUTE_NONE",
	1: "EXECUTE_CONTRACT_CALL",
	2: "EXECUTE_IBC_MSG",
}

var ExecuteMsgType_value = map[string]int32{
	"EXECUTE_NONE":          0,
	"EXECUTE_CONTRACT_CALL": 1,
	"EXECUTE_IBC_MSG":       2,
}

func (x ExecuteMsgType) String() string {
	return proto.EnumName(ExecuteMsgType_name, int32(x))
}

func (ExecuteMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2fa2259d9928de11, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosschain.ExecuteMsgType", ExecuteMsgType_name, ExecuteMsgType_value)
}

func init() {
	proto.RegisterFile("routerchain/crosschain/execution_type.proto", fileDescriptor_2fa2259d9928de11)
}

var fileDescriptor_2fa2259d9928de11 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2e, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0x4a, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x4f, 0x2e, 0xca, 0x2f, 0x2e, 0x86, 0x30, 0x53,
	0x2b, 0x52, 0x93, 0x4b, 0x4b, 0x32, 0xf3, 0xf3, 0xe2, 0x4b, 0x2a, 0x0b, 0x52, 0xf5, 0x0a, 0x8a,
	0xf2, 0x4b, 0xf2, 0x85, 0x54, 0x21, 0x8a, 0xc1, 0x9c, 0xe4, 0xfc, 0x1c, 0x3d, 0x24, 0xbd, 0x7a,
	0x08, 0xbd, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0x45, 0xfa, 0x20, 0x16, 0x44, 0xb3, 0x94,
	0x64, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x98, 0x97, 0x54, 0x9a, 0xa6, 0x9f, 0x98, 0x57,
	0x09, 0x91, 0xd2, 0x9a, 0xcb, 0xc8, 0xc5, 0xe7, 0x0a, 0xb6, 0x30, 0xd5, 0xb7, 0x38, 0x3d, 0xa4,
	0xb2, 0x20, 0x55, 0x48, 0x95, 0x8b, 0xc7, 0x35, 0xc2, 0xd5, 0x39, 0x34, 0xc4, 0x35, 0xde, 0xcf,
	0xdf, 0xcf, 0x55, 0x80, 0x41, 0x4a, 0xb8, 0x6b, 0xae, 0x02, 0xbf, 0xb3, 0x87, 0xa3, 0xa7, 0x5f,
	0x7c, 0x48, 0x64, 0x00, 0x44, 0x58, 0xc8, 0x84, 0x4b, 0x14, 0xa6, 0xcc, 0xd9, 0xdf, 0x2f, 0x24,
	0xc8, 0xd1, 0x39, 0x24, 0xde, 0xd9, 0xd1, 0xc7, 0x47, 0x80, 0x51, 0x4a, 0xb2, 0x6b, 0xae, 0x02,
	0x76, 0x49, 0x21, 0x0d, 0x2e, 0x7e, 0x98, 0x84, 0xa7, 0x93, 0x73, 0xbc, 0x6f, 0xb0, 0xbb, 0x00,
	0x13, 0xc4, 0x7c, 0x34, 0x61, 0x29, 0x96, 0x8e, 0xc5, 0x72, 0x0c, 0x4e, 0x21, 0x27, 0x1e, 0xc9,
	0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e,
	0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0x65, 0x95, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97,
	0x9c, 0x9f, 0xab, 0x0f, 0x09, 0x0d, 0x5d, 0x58, 0xe8, 0xc0, 0xf8, 0x90, 0xf0, 0xac, 0x40, 0x0e,
	0x5c, 0x50, 0x90, 0x16, 0x27, 0xb1, 0x81, 0x55, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x28,
	0xca, 0xed, 0xbf, 0x83, 0x01, 0x00, 0x00,
}
