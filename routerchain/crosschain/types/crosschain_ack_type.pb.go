// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/crosschain/crosschain_ack_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CrosschainAckType int32

const (
	NO_ACK         CrosschainAckType = 0
	ACK_ON_SUCCESS CrosschainAckType = 1
	ACK_ON_ERROR   CrosschainAckType = 2
	ACK            CrosschainAckType = 3
)

var CrosschainAckType_name = map[int32]string{
	0: "NO_ACK",
	1: "ACK_ON_SUCCESS",
	2: "ACK_ON_ERROR",
	3: "ACK",
}

var CrosschainAckType_value = map[string]int32{
	"NO_ACK":         0,
	"ACK_ON_SUCCESS": 1,
	"ACK_ON_ERROR":   2,
	"ACK":            3,
}

func (x CrosschainAckType) String() string {
	return proto.EnumName(CrosschainAckType_name, int32(x))
}

func (CrosschainAckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_724027912e8e003e, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosschain.CrosschainAckType", CrosschainAckType_name, CrosschainAckType_value)
}

func init() {
	proto.RegisterFile("routerchain/crosschain/crosschain_ack_type.proto", fileDescriptor_724027912e8e003e)
}

var fileDescriptor_724027912e8e003e = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x28, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0x4a, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x4f, 0x2e, 0xca, 0x2f, 0x2e, 0x46, 0x67, 0xc6,
	0x27, 0x26, 0x67, 0xc7, 0x97, 0x54, 0x16, 0xa4, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0xa9,
	0x42, 0x74, 0x80, 0x39, 0xc9, 0xf9, 0x39, 0x7a, 0x48, 0x06, 0xe8, 0x21, 0x74, 0x49, 0x89, 0xa4,
	0xe7, 0xa7, 0xe7, 0x83, 0x15, 0xe9, 0x83, 0x58, 0x10, 0xcd, 0x52, 0x92, 0xe9, 0xf9, 0xf9, 0xe9,
	0x39, 0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x62, 0x5e, 0x25, 0x44, 0x4a, 0xab, 0x9f,
	0x91, 0x4b, 0xd0, 0x19, 0xae, 0xdf, 0x31, 0x39, 0x3b, 0xa4, 0xb2, 0x20, 0x55, 0x48, 0x8c, 0x8b,
	0xcd, 0xcf, 0x3f, 0xde, 0xd1, 0xd9, 0x5b, 0x80, 0x41, 0x8a, 0xab, 0x6b, 0xae, 0x02, 0x94, 0x27,
	0xa4, 0xc6, 0xc5, 0xe7, 0xe8, 0xec, 0x1d, 0xef, 0xef, 0x17, 0x1f, 0x1c, 0xea, 0xec, 0xec, 0x1a,
	0x1c, 0x2c, 0xc0, 0x28, 0x25, 0xd4, 0x35, 0x57, 0x01, 0x4d, 0x54, 0x48, 0x89, 0x8b, 0x07, 0x2a,
	0xe2, 0x1a, 0x14, 0xe4, 0x1f, 0x24, 0xc0, 0x24, 0x25, 0xd0, 0x35, 0x57, 0x01, 0x45, 0x4c, 0x48,
	0x80, 0x8b, 0x19, 0x64, 0x01, 0xb3, 0x14, 0x7b, 0xd7, 0x5c, 0x05, 0x10, 0x53, 0x8a, 0xa5, 0x63,
	0xb1, 0x1c, 0x83, 0x53, 0xc8, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24,
	0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x59,
	0xa5, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x43, 0xfc, 0xaf, 0x0b, 0x0b,
	0x0f, 0x18, 0x1f, 0x12, 0x8c, 0x15, 0xc8, 0x61, 0x0a, 0x0a, 0xc4, 0xe2, 0x24, 0x36, 0xb0, 0x4a,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xdc, 0x76, 0xbc, 0x7a, 0x01, 0x00, 0x00,
}
