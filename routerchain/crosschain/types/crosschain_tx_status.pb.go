// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/crosschain/crosschain_tx_status.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CrosschainTxStatus int32

const (
	CROSSCHAIN_TX_CREATED           CrosschainTxStatus = 0
	CROSSCHAIN_TX_VALIDATED         CrosschainTxStatus = 1
	NATIVE_TOKEN_TRANFERRED         CrosschainTxStatus = 2
	CROSSCHAIN_TX_BLOCKED           CrosschainTxStatus = 3
	CROSSCHAIN_TX_READY_TO_EXECUTE  CrosschainTxStatus = 4
	CROSSCHAIN_TX_EXECUTION_SUCCESS CrosschainTxStatus = 5
	CROSSCHAIN_TX_EXECUTION_FAILED  CrosschainTxStatus = 6
	CROSSCHAIN_TX_FEES_SETTLED      CrosschainTxStatus = 7
	CROSSCHAIN_TX_COMPLETED         CrosschainTxStatus = 8
	CROSSCHAIN_TX_IBC_TRANSFERRED   CrosschainTxStatus = 9
	CROSSCHAIN_TX_EXPIRED           CrosschainTxStatus = 10
)

var CrosschainTxStatus_name = map[int32]string{
	0:  "CROSSCHAIN_TX_CREATED",
	1:  "CROSSCHAIN_TX_VALIDATED",
	2:  "NATIVE_TOKEN_TRANFERRED",
	3:  "CROSSCHAIN_TX_BLOCKED",
	4:  "CROSSCHAIN_TX_READY_TO_EXECUTE",
	5:  "CROSSCHAIN_TX_EXECUTION_SUCCESS",
	6:  "CROSSCHAIN_TX_EXECUTION_FAILED",
	7:  "CROSSCHAIN_TX_FEES_SETTLED",
	8:  "CROSSCHAIN_TX_COMPLETED",
	9:  "CROSSCHAIN_TX_IBC_TRANSFERRED",
	10: "CROSSCHAIN_TX_EXPIRED",
}

var CrosschainTxStatus_value = map[string]int32{
	"CROSSCHAIN_TX_CREATED":           0,
	"CROSSCHAIN_TX_VALIDATED":         1,
	"NATIVE_TOKEN_TRANFERRED":         2,
	"CROSSCHAIN_TX_BLOCKED":           3,
	"CROSSCHAIN_TX_READY_TO_EXECUTE":  4,
	"CROSSCHAIN_TX_EXECUTION_SUCCESS": 5,
	"CROSSCHAIN_TX_EXECUTION_FAILED":  6,
	"CROSSCHAIN_TX_FEES_SETTLED":      7,
	"CROSSCHAIN_TX_COMPLETED":         8,
	"CROSSCHAIN_TX_IBC_TRANSFERRED":   9,
	"CROSSCHAIN_TX_EXPIRED":           10,
}

func (x CrosschainTxStatus) String() string {
	return proto.EnumName(CrosschainTxStatus_name, int32(x))
}

func (CrosschainTxStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_423c62506a3d5957, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosschain.CrosschainTxStatus", CrosschainTxStatus_name, CrosschainTxStatus_value)
}

func init() {
	proto.RegisterFile("routerchain/crosschain/crosschain_tx_status.proto", fileDescriptor_423c62506a3d5957)
}

var fileDescriptor_423c62506a3d5957 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x4d, 0x6b, 0xd4, 0x40,
	0x18, 0xc7, 0xb3, 0xda, 0x56, 0x9d, 0x53, 0x18, 0x14, 0xe9, 0x88, 0x63, 0x54, 0xbc, 0x08, 0x6e,
	0x10, 0x3d, 0x88, 0x07, 0x21, 0x3b, 0x79, 0x42, 0x43, 0x63, 0x52, 0x32, 0xd3, 0xb2, 0x7a, 0x19,
	0x76, 0xc3, 0x9a, 0x16, 0x6a, 0xa7, 0xe4, 0x05, 0xb6, 0xdf, 0x40, 0x72, 0xf2, 0x0b, 0xe4, 0xe4,
	0x97, 0x11, 0x4f, 0x3d, 0x7a, 0x94, 0xdd, 0x2f, 0x22, 0x49, 0xb6, 0x2f, 0x69, 0xd2, 0xf6, 0x96,
	0x87, 0xdf, 0xef, 0x3f, 0x79, 0xe0, 0xcf, 0x83, 0xde, 0x26, 0x2a, 0xcf, 0x66, 0x49, 0xb4, 0x3f,
	0x39, 0x38, 0x32, 0xa3, 0x44, 0xa5, 0xe9, 0xd5, 0x4f, 0x99, 0xcd, 0x65, 0x9a, 0x4d, 0xb2, 0x3c,
	0x1d, 0x1e, 0x27, 0x2a, 0x53, 0xf8, 0x55, 0x13, 0xa9, 0x87, 0x48, 0x1d, 0x0e, 0x2f, 0xbd, 0x30,
	0xbc, 0x88, 0x91, 0x87, 0xb1, 0x8a, 0x55, 0x2d, 0x99, 0xd5, 0x57, 0x13, 0x26, 0x9b, 0xb1, 0x52,
	0xf1, 0xe1, 0xcc, 0xac, 0xa7, 0x69, 0xfe, 0xcd, 0x9c, 0x1c, 0x9d, 0x34, 0xe8, 0xf5, 0x9f, 0x75,
	0x84, 0xd9, 0x79, 0x5e, 0xcc, 0x79, 0xfd, 0x53, 0xfc, 0x1e, 0x3d, 0x62, 0x61, 0xc0, 0x39, 0xdb,
	0xb2, 0x5c, 0x5f, 0x8a, 0xb1, 0x64, 0x21, 0x58, 0x02, 0x6c, 0x5d, 0x23, 0x9b, 0x45, 0x69, 0xf4,
	0x43, 0xfc, 0x01, 0x3d, 0x6e, 0x83, 0x3d, 0xcb, 0x73, 0xed, 0x3a, 0x37, 0x20, 0x4f, 0x8a, 0xd2,
	0xb8, 0x0e, 0x57, 0x49, 0xdf, 0x12, 0xee, 0x1e, 0x48, 0x11, 0x6c, 0x83, 0x2f, 0x45, 0x68, 0xf9,
	0x0e, 0x84, 0x21, 0xd8, 0xfa, 0x9d, 0x26, 0x79, 0x0d, 0xee, 0x6e, 0x3a, 0xf2, 0x02, 0xb6, 0x0d,
	0xb6, 0x7e, 0xb7, 0x6f, 0xd3, 0x15, 0xc4, 0x0e, 0xa2, 0x6d, 0x10, 0x82, 0x65, 0x7f, 0x91, 0x22,
	0x90, 0x30, 0x06, 0xb6, 0x2b, 0x40, 0x5f, 0x23, 0x2f, 0x8a, 0xd2, 0xb8, 0xc5, 0xc2, 0x5b, 0xe8,
	0x59, 0xdb, 0x68, 0x80, 0x1b, 0xf8, 0x92, 0xef, 0x32, 0x06, 0x9c, 0xeb, 0xeb, 0xe4, 0x65, 0x51,
	0x1a, 0xb7, 0x69, 0xdd, 0x8d, 0x2e, 0x14, 0xc7, 0x72, 0x3d, 0xb0, 0xf5, 0x8d, 0xbe, 0x8d, 0xae,
	0x5a, 0xf8, 0x13, 0x22, 0x6d, 0xc3, 0x01, 0xe0, 0x92, 0x83, 0x10, 0xd5, 0x1b, 0xf7, 0x08, 0x2d,
	0x4a, 0xe3, 0x06, 0xa3, 0xdb, 0x21, 0x0b, 0x3e, 0xef, 0x78, 0x50, 0x75, 0x78, 0xbf, 0xaf, 0xc3,
	0x73, 0x8c, 0x6d, 0xf4, 0xb4, 0x8d, 0xdc, 0x11, 0xab, 0x9b, 0xe2, 0xab, 0x26, 0x1f, 0x90, 0xe7,
	0x45, 0x69, 0xdc, 0x2c, 0x75, 0xfb, 0x84, 0xf1, 0x8e, 0x5b, 0xa5, 0x51, 0x5f, 0x9f, 0x2b, 0x48,
	0xd6, 0x7e, 0xfc, 0xa2, 0xda, 0x48, 0xfc, 0x5e, 0xd0, 0xc1, 0xe9, 0x82, 0x0e, 0xfe, 0x2d, 0xe8,
	0xe0, 0xe7, 0x92, 0x6a, 0xa7, 0x4b, 0xaa, 0xfd, 0x5d, 0x52, 0xed, 0xeb, 0xc7, 0xf8, 0x20, 0xdb,
	0xcf, 0xa7, 0xc3, 0x48, 0x7d, 0x37, 0x9b, 0xd3, 0x79, 0x73, 0x76, 0x4a, 0x67, 0x73, 0x73, 0x82,
	0xf3, 0xcb, 0xf7, 0x98, 0x9d, 0x1c, 0xcf, 0xd2, 0xe9, 0x46, 0x6d, 0xbe, 0xfb, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x2b, 0x0c, 0x3d, 0x6e, 0xb6, 0x03, 0x00, 0x00,
}
