// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/crosschain/crosschain_tx_status.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CrosschainTxStatus int32

const (
	CROSSCHAIN_TX_CREATED          CrosschainTxStatus = 0
	CROSSCHAIN_TX_VALIDATED        CrosschainTxStatus = 1
	NATIVE_TOKEN_TRANFERRED        CrosschainTxStatus = 2
	CROSSCHAIN_TX_BLOCKED          CrosschainTxStatus = 3
	CROSSCHAIN_TX_READY_TO_EXECUTE CrosschainTxStatus = 4
	CROSSCHAIN_TX_EXECUTED         CrosschainTxStatus = 5
	CROSSCHAIN_TX_EXECUTION_FAILED CrosschainTxStatus = 6
	CROSSCHAIN_TX_FEES_SETTLED     CrosschainTxStatus = 7
	CROSSCHAIN_TX_COMPLETED        CrosschainTxStatus = 8
)

var CrosschainTxStatus_name = map[int32]string{
	0: "CROSSCHAIN_TX_CREATED",
	1: "CROSSCHAIN_TX_VALIDATED",
	2: "NATIVE_TOKEN_TRANFERRED",
	3: "CROSSCHAIN_TX_BLOCKED",
	4: "CROSSCHAIN_TX_READY_TO_EXECUTE",
	5: "CROSSCHAIN_TX_EXECUTED",
	6: "CROSSCHAIN_TX_EXECUTION_FAILED",
	7: "CROSSCHAIN_TX_FEES_SETTLED",
	8: "CROSSCHAIN_TX_COMPLETED",
}

var CrosschainTxStatus_value = map[string]int32{
	"CROSSCHAIN_TX_CREATED":          0,
	"CROSSCHAIN_TX_VALIDATED":        1,
	"NATIVE_TOKEN_TRANFERRED":        2,
	"CROSSCHAIN_TX_BLOCKED":          3,
	"CROSSCHAIN_TX_READY_TO_EXECUTE": 4,
	"CROSSCHAIN_TX_EXECUTED":         5,
	"CROSSCHAIN_TX_EXECUTION_FAILED": 6,
	"CROSSCHAIN_TX_FEES_SETTLED":     7,
	"CROSSCHAIN_TX_COMPLETED":        8,
}

func (x CrosschainTxStatus) String() string {
	return proto.EnumName(CrosschainTxStatus_name, int32(x))
}

func (CrosschainTxStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_423c62506a3d5957, []int{0}
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.crosschain.CrosschainTxStatus", CrosschainTxStatus_name, CrosschainTxStatus_value)
}

func init() {
	proto.RegisterFile("routerchain/crosschain/crosschain_tx_status.proto", fileDescriptor_423c62506a3d5957)
}

var fileDescriptor_423c62506a3d5957 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcd, 0xaa, 0xd3, 0x50,
	0x10, 0xc7, 0x13, 0xad, 0x55, 0xb2, 0x0a, 0xc1, 0x0f, 0x7a, 0x84, 0x43, 0x10, 0xdc, 0x08, 0x26,
	0x88, 0x22, 0xe2, 0x42, 0x48, 0x93, 0x09, 0x86, 0xc6, 0x44, 0x92, 0x63, 0xa9, 0x6e, 0x0e, 0x6d,
	0xa8, 0x69, 0xa1, 0xf6, 0x94, 0x7c, 0x40, 0xfb, 0x06, 0x92, 0x95, 0x2f, 0x90, 0x95, 0xaf, 0xe1,
	0x03, 0xb8, 0xec, 0xd2, 0xa5, 0xb4, 0x2f, 0x72, 0x49, 0xd2, 0xf6, 0x36, 0x6d, 0x7a, 0xef, 0x6e,
	0x86, 0xdf, 0xff, 0x3f, 0x33, 0x87, 0x99, 0x23, 0xbc, 0x8a, 0x58, 0x9a, 0x8c, 0xa3, 0x60, 0x32,
	0x9c, 0xce, 0xd5, 0x20, 0x62, 0x71, 0x7c, 0x1a, 0xd2, 0x64, 0x49, 0xe3, 0x64, 0x98, 0xa4, 0xb1,
	0xb2, 0x88, 0x58, 0xc2, 0xa4, 0xe7, 0x95, 0xa5, 0x4c, 0x02, 0x36, 0x53, 0x8e, 0x2a, 0x28, 0xd7,
	0x36, 0xf4, 0x30, 0x64, 0x21, 0x2b, 0x45, 0x6a, 0x11, 0x55, 0x66, 0xd4, 0x09, 0x19, 0x0b, 0x67,
	0x63, 0xb5, 0xcc, 0x46, 0xe9, 0x77, 0x75, 0x38, 0x5f, 0x55, 0xe8, 0xc5, 0x9f, 0x96, 0x20, 0xe9,
	0x07, 0x3f, 0x59, 0xfa, 0x65, 0x53, 0xe9, 0x8d, 0xf0, 0x48, 0xf7, 0x5c, 0xdf, 0xd7, 0x3f, 0x6a,
	0x96, 0x43, 0xc9, 0x80, 0xea, 0x1e, 0x68, 0x04, 0x0c, 0x91, 0x43, 0x9d, 0x2c, 0x97, 0x9b, 0xa1,
	0xf4, 0x4e, 0x78, 0x52, 0x07, 0x7d, 0xcd, 0xb6, 0x8c, 0xd2, 0xc7, 0xa3, 0xa7, 0x59, 0x2e, 0x5f,
	0xc2, 0x85, 0xd3, 0xd1, 0x88, 0xd5, 0x07, 0x4a, 0xdc, 0x1e, 0x38, 0x94, 0x78, 0x9a, 0x63, 0x82,
	0xe7, 0x81, 0x21, 0xde, 0xa9, 0x9c, 0x17, 0xf0, 0xf9, 0xa4, 0x5d, 0xdb, 0xd5, 0x7b, 0x60, 0x88,
	0x77, 0x9b, 0x26, 0xdd, 0x41, 0xc9, 0x14, 0x70, 0x1d, 0x78, 0xa0, 0x19, 0x5f, 0x29, 0x71, 0x29,
	0x0c, 0x40, 0xff, 0x42, 0x40, 0x6c, 0xa1, 0x67, 0x59, 0x2e, 0xdf, 0xa2, 0x92, 0xde, 0x0a, 0x8f,
	0xeb, 0x8a, 0x1d, 0x30, 0xc4, 0x7b, 0x08, 0x65, 0xb9, 0x7c, 0x81, 0x9e, 0xf7, 0xaf, 0x88, 0xe5,
	0x3a, 0xd4, 0xd4, 0x2c, 0x1b, 0x0c, 0xb1, 0xdd, 0xd4, 0xff, 0x54, 0x25, 0x7d, 0x10, 0x50, 0x5d,
	0x61, 0x02, 0xf8, 0xd4, 0x07, 0x42, 0x8a, 0x1a, 0xf7, 0x11, 0xce, 0x72, 0xf9, 0x06, 0xc5, 0xf9,
	0xc6, 0x74, 0xf7, 0xd3, 0x67, 0x1b, 0x8a, 0x07, 0x3c, 0x68, 0xda, 0xd8, 0x01, 0xa3, 0xd6, 0xcf,
	0xdf, 0x98, 0xeb, 0x92, 0xbf, 0x1b, 0xcc, 0xaf, 0x37, 0x98, 0xff, 0xbf, 0xc1, 0xfc, 0xaf, 0x2d,
	0xe6, 0xd6, 0x5b, 0xcc, 0xfd, 0xdb, 0x62, 0xee, 0xdb, 0xfb, 0x70, 0x9a, 0x4c, 0xd2, 0x91, 0x12,
	0xb0, 0x1f, 0x6a, 0x75, 0xac, 0x2f, 0xf7, 0xc7, 0xbb, 0xcf, 0xab, 0xa3, 0x5f, 0x1e, 0xff, 0x80,
	0x64, 0xb5, 0x18, 0xc7, 0xa3, 0x76, 0xa9, 0x7c, 0x7d, 0x15, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x91,
	0x96, 0xa3, 0x28, 0x03, 0x00, 0x00,
}
