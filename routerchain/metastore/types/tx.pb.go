// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/metastore/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateMetadataRequest struct {
	Orchestrator string `protobuf:"bytes,1,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
	ChainId      string `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Contract     string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce   uint64 `protobuf:"varint,4,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight  uint64 `protobuf:"varint,5,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	DaapAddress  string `protobuf:"bytes,6,opt,name=daapAddress,proto3" json:"daapAddress,omitempty"`
	FeePayer     string `protobuf:"bytes,7,opt,name=feePayer,proto3" json:"feePayer,omitempty"`
}

func (m *MsgCreateMetadataRequest) Reset()         { *m = MsgCreateMetadataRequest{} }
func (m *MsgCreateMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMetadataRequest) ProtoMessage()    {}
func (*MsgCreateMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{0}
}
func (m *MsgCreateMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMetadataRequest.Merge(m, src)
}
func (m *MsgCreateMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMetadataRequest proto.InternalMessageInfo

func (m *MsgCreateMetadataRequest) GetOrchestrator() string {
	if m != nil {
		return m.Orchestrator
	}
	return ""
}

func (m *MsgCreateMetadataRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MsgCreateMetadataRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *MsgCreateMetadataRequest) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *MsgCreateMetadataRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MsgCreateMetadataRequest) GetDaapAddress() string {
	if m != nil {
		return m.DaapAddress
	}
	return ""
}

func (m *MsgCreateMetadataRequest) GetFeePayer() string {
	if m != nil {
		return m.FeePayer
	}
	return ""
}

type MsgCreateMetadataRequestResponse struct {
}

func (m *MsgCreateMetadataRequestResponse) Reset()         { *m = MsgCreateMetadataRequestResponse{} }
func (m *MsgCreateMetadataRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMetadataRequestResponse) ProtoMessage()    {}
func (*MsgCreateMetadataRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{1}
}
func (m *MsgCreateMetadataRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMetadataRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMetadataRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMetadataRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMetadataRequestResponse.Merge(m, src)
}
func (m *MsgCreateMetadataRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMetadataRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMetadataRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMetadataRequestResponse proto.InternalMessageInfo

type MsgApproveFeepayerRequest struct {
	FeePayer    string `protobuf:"bytes,1,opt,name=fee_payer,json=feePayer,proto3" json:"fee_payer,omitempty"`
	ChainId     string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	DappAddress string `protobuf:"bytes,3,opt,name=dapp_address,json=dappAddress,proto3" json:"dapp_address,omitempty"`
}

func (m *MsgApproveFeepayerRequest) Reset()         { *m = MsgApproveFeepayerRequest{} }
func (m *MsgApproveFeepayerRequest) String() string { return proto.CompactTextString(m) }
func (*MsgApproveFeepayerRequest) ProtoMessage()    {}
func (*MsgApproveFeepayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{2}
}
func (m *MsgApproveFeepayerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveFeepayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveFeepayerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveFeepayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveFeepayerRequest.Merge(m, src)
}
func (m *MsgApproveFeepayerRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveFeepayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveFeepayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveFeepayerRequest proto.InternalMessageInfo

func (m *MsgApproveFeepayerRequest) GetFeePayer() string {
	if m != nil {
		return m.FeePayer
	}
	return ""
}

func (m *MsgApproveFeepayerRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MsgApproveFeepayerRequest) GetDappAddress() string {
	if m != nil {
		return m.DappAddress
	}
	return ""
}

type MsgApproveFeepayerRequestResponse struct {
}

func (m *MsgApproveFeepayerRequestResponse) Reset()         { *m = MsgApproveFeepayerRequestResponse{} }
func (m *MsgApproveFeepayerRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApproveFeepayerRequestResponse) ProtoMessage()    {}
func (*MsgApproveFeepayerRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{3}
}
func (m *MsgApproveFeepayerRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveFeepayerRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveFeepayerRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveFeepayerRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveFeepayerRequestResponse.Merge(m, src)
}
func (m *MsgApproveFeepayerRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveFeepayerRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveFeepayerRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveFeepayerRequestResponse proto.InternalMessageInfo

type MsgRevokeFeepayerRequest struct {
	Feepayer    string `protobuf:"bytes,1,opt,name=feepayer,proto3" json:"feepayer,omitempty"`
	ChainId     string `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	DappAddress string `protobuf:"bytes,3,opt,name=dappAddress,proto3" json:"dappAddress,omitempty"`
}

func (m *MsgRevokeFeepayerRequest) Reset()         { *m = MsgRevokeFeepayerRequest{} }
func (m *MsgRevokeFeepayerRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeFeepayerRequest) ProtoMessage()    {}
func (*MsgRevokeFeepayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{4}
}
func (m *MsgRevokeFeepayerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeFeepayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeFeepayerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeFeepayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeFeepayerRequest.Merge(m, src)
}
func (m *MsgRevokeFeepayerRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeFeepayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeFeepayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeFeepayerRequest proto.InternalMessageInfo

func (m *MsgRevokeFeepayerRequest) GetFeepayer() string {
	if m != nil {
		return m.Feepayer
	}
	return ""
}

func (m *MsgRevokeFeepayerRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MsgRevokeFeepayerRequest) GetDappAddress() string {
	if m != nil {
		return m.DappAddress
	}
	return ""
}

type MsgRevokeFeepayerRequestResponse struct {
}

func (m *MsgRevokeFeepayerRequestResponse) Reset()         { *m = MsgRevokeFeepayerRequestResponse{} }
func (m *MsgRevokeFeepayerRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeFeepayerRequestResponse) ProtoMessage()    {}
func (*MsgRevokeFeepayerRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3486e00282e0c5e, []int{5}
}
func (m *MsgRevokeFeepayerRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeFeepayerRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeFeepayerRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeFeepayerRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeFeepayerRequestResponse.Merge(m, src)
}
func (m *MsgRevokeFeepayerRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeFeepayerRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeFeepayerRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeFeepayerRequestResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateMetadataRequest)(nil), "routerprotocol.routerchain.metastore.MsgCreateMetadataRequest")
	proto.RegisterType((*MsgCreateMetadataRequestResponse)(nil), "routerprotocol.routerchain.metastore.MsgCreateMetadataRequestResponse")
	proto.RegisterType((*MsgApproveFeepayerRequest)(nil), "routerprotocol.routerchain.metastore.MsgApproveFeepayerRequest")
	proto.RegisterType((*MsgApproveFeepayerRequestResponse)(nil), "routerprotocol.routerchain.metastore.MsgApproveFeepayerRequestResponse")
	proto.RegisterType((*MsgRevokeFeepayerRequest)(nil), "routerprotocol.routerchain.metastore.MsgRevokeFeepayerRequest")
	proto.RegisterType((*MsgRevokeFeepayerRequestResponse)(nil), "routerprotocol.routerchain.metastore.MsgRevokeFeepayerRequestResponse")
}

func init() { proto.RegisterFile("routerchain/metastore/tx.proto", fileDescriptor_f3486e00282e0c5e) }

var fileDescriptor_f3486e00282e0c5e = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x8d, 0x49, 0xe9, 0xc7, 0xd0, 0x93, 0x25, 0x90, 0x1b, 0xa4, 0x55, 0xba, 0x70, 0xe8, 0x85,
	0x8d, 0x04, 0x27, 0x2e, 0xa0, 0x82, 0x54, 0xe0, 0x10, 0x84, 0x96, 0x1b, 0x97, 0xc8, 0xf1, 0x4e,
	0x37, 0x51, 0xdb, 0xb5, 0xb1, 0x27, 0x51, 0xfb, 0x2f, 0xf8, 0x07, 0x48, 0xfc, 0x1a, 0x8e, 0x3d,
	0x72, 0x44, 0xc9, 0x9d, 0x13, 0x3f, 0x00, 0xc5, 0x5b, 0xaf, 0x16, 0xba, 0x5b, 0x05, 0xf5, 0xf8,
	0xc6, 0x33, 0xf3, 0x9e, 0xdf, 0xb3, 0x0c, 0x91, 0xd5, 0x33, 0x42, 0xab, 0x26, 0x72, 0x5a, 0x0c,
	0xce, 0x90, 0xa4, 0x23, 0x6d, 0x71, 0x40, 0xe7, 0x89, 0xb1, 0x9a, 0x34, 0x7f, 0x5c, 0x9e, 0x7b,
	0xa0, 0xf4, 0x69, 0x52, 0x6b, 0x4f, 0xaa, 0xf6, 0xf8, 0x37, 0x03, 0x31, 0x74, 0xf9, 0x6b, 0x8b,
	0x92, 0x70, 0x88, 0x24, 0x33, 0x49, 0x32, 0xc5, 0xcf, 0x33, 0x74, 0xc4, 0x63, 0xd8, 0xd5, 0x56,
	0x4d, 0xd0, 0x91, 0x95, 0xa4, 0xad, 0x60, 0x7d, 0x76, 0xb0, 0x93, 0xfe, 0x55, 0xe3, 0x02, 0xb6,
	0xfc, 0xce, 0x77, 0x99, 0xb8, 0xe3, 0x8f, 0x03, 0xe4, 0x3d, 0xd8, 0x56, 0xba, 0x20, 0x2b, 0x15,
	0x89, 0xae, 0x3f, 0xaa, 0x30, 0x8f, 0x00, 0x70, 0x8e, 0x05, 0xbd, 0xd7, 0x85, 0x42, 0xb1, 0xd1,
	0x67, 0x07, 0x1b, 0x69, 0xad, 0xc2, 0xfb, 0x70, 0x6f, 0x7c, 0xaa, 0xd5, 0xc9, 0x5b, 0x9c, 0xe6,
	0x13, 0x12, 0x77, 0x7d, 0x43, 0xbd, 0xb4, 0xea, 0xc8, 0xa4, 0x34, 0x87, 0x59, 0x66, 0xd1, 0x39,
	0xb1, 0xe9, 0x09, 0xea, 0xa5, 0x15, 0xff, 0x31, 0xe2, 0x07, 0x79, 0x81, 0x56, 0x6c, 0x95, 0xfc,
	0x01, 0xc7, 0x31, 0xf4, 0xdb, 0x6e, 0x9d, 0xa2, 0x33, 0xba, 0x70, 0x18, 0xcf, 0x61, 0x6f, 0xe8,
	0xf2, 0x43, 0x63, 0xac, 0x9e, 0xe3, 0x11, 0xa2, 0x59, 0x4d, 0x06, 0x6b, 0x1e, 0xc2, 0xce, 0x31,
	0xe2, 0xc8, 0xd7, 0xae, 0x7c, 0xa9, 0xb6, 0xf3, 0x3d, 0xd8, 0xf6, 0x26, 0x8c, 0xa6, 0xd7, 0x4c,
	0xd9, 0x87, 0xdd, 0x4c, 0x1a, 0x33, 0x92, 0x57, 0xba, 0xbb, 0x41, 0xb7, 0x09, 0xba, 0xe3, 0x47,
	0xb0, 0xdf, 0xca, 0x5b, 0x89, 0xb3, 0x3e, 0xb6, 0x14, 0xe7, 0xfa, 0xe4, 0x9a, 0xb6, 0xf2, 0xe2,
	0xff, 0x4a, 0xf3, 0xf8, 0x86, 0xb8, 0xbc, 0xa1, 0x95, 0x8a, 0x26, 0x61, 0xa5, 0x69, 0x8d, 0x9c,
	0x41, 0xd7, 0xd3, 0x5f, 0x5d, 0xe8, 0x0e, 0x5d, 0xce, 0xbf, 0x32, 0xb8, 0xdf, 0xfc, 0xa8, 0x5e,
	0x24, 0xeb, 0x3c, 0xcc, 0xa4, 0x2d, 0x9e, 0xde, 0xd1, 0xed, 0xe6, 0x83, 0x52, 0xfe, 0x8d, 0xc1,
	0x83, 0x96, 0x70, 0x5f, 0xae, 0x4d, 0xd1, 0xbc, 0xa0, 0xf7, 0xe6, 0x96, 0x0b, 0x2a, 0x91, 0x2b,
	0x1b, 0x9b, 0x43, 0x5e, 0xdf, 0xc6, 0xc6, 0xf9, 0xff, 0xb0, 0xf1, 0xc6, 0xc0, 0x5f, 0x7d, 0xfc,
	0xbe, 0x88, 0xd8, 0xe5, 0x22, 0x62, 0x3f, 0x17, 0x11, 0xfb, 0xb2, 0x8c, 0x3a, 0x97, 0xcb, 0xa8,
	0xf3, 0x63, 0x19, 0x75, 0x3e, 0x3d, 0xcf, 0xa7, 0x34, 0x99, 0x8d, 0x13, 0xa5, 0xcf, 0x06, 0xe5,
	0xf2, 0x27, 0x81, 0x2c, 0xe0, 0xf2, 0xf3, 0x3a, 0xaf, 0x7f, 0x5f, 0x17, 0x06, 0xdd, 0x78, 0xd3,
	0x37, 0x3e, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x28, 0xc1, 0xbd, 0x20, 0xe4, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateMetadataRequest(ctx context.Context, in *MsgCreateMetadataRequest, opts ...grpc.CallOption) (*MsgCreateMetadataRequestResponse, error)
	ApproveFeepayerRequest(ctx context.Context, in *MsgApproveFeepayerRequest, opts ...grpc.CallOption) (*MsgApproveFeepayerRequestResponse, error)
	RevokeFeepayerRequest(ctx context.Context, in *MsgRevokeFeepayerRequest, opts ...grpc.CallOption) (*MsgRevokeFeepayerRequestResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateMetadataRequest(ctx context.Context, in *MsgCreateMetadataRequest, opts ...grpc.CallOption) (*MsgCreateMetadataRequestResponse, error) {
	out := new(MsgCreateMetadataRequestResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Msg/CreateMetadataRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApproveFeepayerRequest(ctx context.Context, in *MsgApproveFeepayerRequest, opts ...grpc.CallOption) (*MsgApproveFeepayerRequestResponse, error) {
	out := new(MsgApproveFeepayerRequestResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Msg/ApproveFeepayerRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevokeFeepayerRequest(ctx context.Context, in *MsgRevokeFeepayerRequest, opts ...grpc.CallOption) (*MsgRevokeFeepayerRequestResponse, error) {
	out := new(MsgRevokeFeepayerRequestResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Msg/RevokeFeepayerRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateMetadataRequest(context.Context, *MsgCreateMetadataRequest) (*MsgCreateMetadataRequestResponse, error)
	ApproveFeepayerRequest(context.Context, *MsgApproveFeepayerRequest) (*MsgApproveFeepayerRequestResponse, error)
	RevokeFeepayerRequest(context.Context, *MsgRevokeFeepayerRequest) (*MsgRevokeFeepayerRequestResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateMetadataRequest(ctx context.Context, req *MsgCreateMetadataRequest) (*MsgCreateMetadataRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetadataRequest not implemented")
}
func (*UnimplementedMsgServer) ApproveFeepayerRequest(ctx context.Context, req *MsgApproveFeepayerRequest) (*MsgApproveFeepayerRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveFeepayerRequest not implemented")
}
func (*UnimplementedMsgServer) RevokeFeepayerRequest(ctx context.Context, req *MsgRevokeFeepayerRequest) (*MsgRevokeFeepayerRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeFeepayerRequest not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateMetadataRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMetadataRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Msg/CreateMetadataRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMetadataRequest(ctx, req.(*MsgCreateMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApproveFeepayerRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApproveFeepayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApproveFeepayerRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Msg/ApproveFeepayerRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApproveFeepayerRequest(ctx, req.(*MsgApproveFeepayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevokeFeepayerRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevokeFeepayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevokeFeepayerRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Msg/RevokeFeepayerRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevokeFeepayerRequest(ctx, req.(*MsgRevokeFeepayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routerprotocol.routerchain.metastore.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetadataRequest",
			Handler:    _Msg_CreateMetadataRequest_Handler,
		},
		{
			MethodName: "ApproveFeepayerRequest",
			Handler:    _Msg_ApproveFeepayerRequest_Handler,
		},
		{
			MethodName: "RevokeFeepayerRequest",
			Handler:    _Msg_RevokeFeepayerRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "routerchain/metastore/tx.proto",
}

func (m *MsgCreateMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeePayer) > 0 {
		i -= len(m.FeePayer)
		copy(dAtA[i:], m.FeePayer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeePayer)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.DaapAddress) > 0 {
		i -= len(m.DaapAddress)
		copy(dAtA[i:], m.DaapAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DaapAddress)))
		i--
		dAtA[i] = 0x32
	}
	if m.BlockHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x28
	}
	if m.EventNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Orchestrator) > 0 {
		i -= len(m.Orchestrator)
		copy(dAtA[i:], m.Orchestrator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Orchestrator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMetadataRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMetadataRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMetadataRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgApproveFeepayerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveFeepayerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveFeepayerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DappAddress) > 0 {
		i -= len(m.DappAddress)
		copy(dAtA[i:], m.DappAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DappAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FeePayer) > 0 {
		i -= len(m.FeePayer)
		copy(dAtA[i:], m.FeePayer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeePayer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApproveFeepayerRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveFeepayerRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveFeepayerRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevokeFeepayerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeFeepayerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeFeepayerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DappAddress) > 0 {
		i -= len(m.DappAddress)
		copy(dAtA[i:], m.DappAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DappAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Feepayer) > 0 {
		i -= len(m.Feepayer)
		copy(dAtA[i:], m.Feepayer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Feepayer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeFeepayerRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeFeepayerRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeFeepayerRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Orchestrator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovTx(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovTx(uint64(m.BlockHeight))
	}
	l = len(m.DaapAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FeePayer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMetadataRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgApproveFeepayerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FeePayer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DappAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgApproveFeepayerRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevokeFeepayerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Feepayer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DappAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRevokeFeepayerRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Orchestrator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaapAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DaapAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeePayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeePayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMetadataRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMetadataRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMetadataRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveFeepayerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveFeepayerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveFeepayerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeePayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeePayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DappAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DappAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveFeepayerRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveFeepayerRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveFeepayerRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeFeepayerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeFeepayerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeFeepayerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feepayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Feepayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DappAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DappAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeFeepayerRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeFeepayerRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeFeepayerRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
