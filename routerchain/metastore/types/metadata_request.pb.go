// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/metastore/metadata_request.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/router-protocol/sdk-go/routerchain/multichain/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MetadataRequest struct {
	ChainId     string       `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Contract    string       `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce  uint64       `protobuf:"varint,3,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight uint64       `protobuf:"varint,4,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	DaapAddress string       `protobuf:"bytes,5,opt,name=daapAddress,proto3" json:"daapAddress,omitempty"`
	FeePayer    string       `protobuf:"bytes,6,opt,name=feePayer,proto3" json:"feePayer,omitempty"`
	Status      MetaTxStatus `protobuf:"varint,7,opt,name=status,proto3,enum=routerprotocol.routerchain.metastore.MetaTxStatus" json:"status,omitempty"`
}

func (m *MetadataRequest) Reset()         { *m = MetadataRequest{} }
func (m *MetadataRequest) String() string { return proto.CompactTextString(m) }
func (*MetadataRequest) ProtoMessage()    {}
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_679898cd9f9ea6bb, []int{0}
}
func (m *MetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataRequest.Merge(m, src)
}
func (m *MetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *MetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataRequest proto.InternalMessageInfo

func (m *MetadataRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MetadataRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *MetadataRequest) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *MetadataRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MetadataRequest) GetDaapAddress() string {
	if m != nil {
		return m.DaapAddress
	}
	return ""
}

func (m *MetadataRequest) GetFeePayer() string {
	if m != nil {
		return m.FeePayer
	}
	return ""
}

func (m *MetadataRequest) GetStatus() MetaTxStatus {
	if m != nil {
		return m.Status
	}
	return META_TX_CREATED
}

type MetadataRequestClaimHash struct {
	ChainId     string `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Contract    string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	EventNonce  uint64 `protobuf:"varint,3,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight uint64 `protobuf:"varint,4,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	DaapAddress string `protobuf:"bytes,5,opt,name=daapAddress,proto3" json:"daapAddress,omitempty"`
	FeePayer    string `protobuf:"bytes,6,opt,name=feePayer,proto3" json:"feePayer,omitempty"`
}

func (m *MetadataRequestClaimHash) Reset()         { *m = MetadataRequestClaimHash{} }
func (m *MetadataRequestClaimHash) String() string { return proto.CompactTextString(m) }
func (*MetadataRequestClaimHash) ProtoMessage()    {}
func (*MetadataRequestClaimHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_679898cd9f9ea6bb, []int{1}
}
func (m *MetadataRequestClaimHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataRequestClaimHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataRequestClaimHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataRequestClaimHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataRequestClaimHash.Merge(m, src)
}
func (m *MetadataRequestClaimHash) XXX_Size() int {
	return m.Size()
}
func (m *MetadataRequestClaimHash) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataRequestClaimHash.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataRequestClaimHash proto.InternalMessageInfo

func (m *MetadataRequestClaimHash) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *MetadataRequestClaimHash) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *MetadataRequestClaimHash) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *MetadataRequestClaimHash) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MetadataRequestClaimHash) GetDaapAddress() string {
	if m != nil {
		return m.DaapAddress
	}
	return ""
}

func (m *MetadataRequestClaimHash) GetFeePayer() string {
	if m != nil {
		return m.FeePayer
	}
	return ""
}

func init() {
	proto.RegisterType((*MetadataRequest)(nil), "routerprotocol.routerchain.metastore.MetadataRequest")
	proto.RegisterType((*MetadataRequestClaimHash)(nil), "routerprotocol.routerchain.metastore.MetadataRequestClaimHash")
}

func init() {
	proto.RegisterFile("routerchain/metastore/metadata_request.proto", fileDescriptor_679898cd9f9ea6bb)
}

var fileDescriptor_679898cd9f9ea6bb = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xed, 0xf6, 0xeb, 0xd7, 0xea, 0x0a, 0x0a, 0x39, 0x2d, 0x3d, 0x84, 0x50, 0x04, 0x8b, 0x68,
	0x0a, 0xf5, 0xe4, 0x51, 0xbd, 0x54, 0x41, 0x91, 0xd4, 0x93, 0x97, 0xb0, 0xdd, 0x8c, 0x4d, 0x30,
	0xcd, 0xd6, 0xdd, 0x89, 0xb4, 0xff, 0x42, 0xf0, 0x4f, 0x79, 0xec, 0xd1, 0xa3, 0xb4, 0x7f, 0x44,
	0xb2, 0xdb, 0x94, 0x28, 0x08, 0x5e, 0xbd, 0x84, 0x7d, 0x93, 0xf7, 0xe6, 0xcd, 0x3c, 0x86, 0x1e,
	0x29, 0x99, 0x23, 0x28, 0x11, 0xf3, 0x24, 0xeb, 0x4d, 0x00, 0xb9, 0x46, 0xa9, 0xc0, 0xbc, 0x22,
	0x8e, 0x3c, 0x54, 0xf0, 0x94, 0x83, 0x46, 0x7f, 0xaa, 0x24, 0x4a, 0x67, 0xdf, 0xb2, 0x0d, 0x10,
	0x32, 0xf5, 0x2b, 0x62, 0x7f, 0x23, 0x6e, 0x1f, 0x7c, 0xe9, 0x99, 0xa7, 0x98, 0xd8, 0xa7, 0xf9,
	0x86, 0x38, 0x9f, 0x82, 0x6d, 0xd7, 0x3e, 0xfc, 0xd9, 0x3c, 0xc4, 0x59, 0xa8, 0x91, 0x63, 0xae,
	0x2d, 0xb7, 0xf3, 0x5a, 0xa7, 0x7b, 0xd7, 0xeb, 0xa9, 0x02, 0x3b, 0x94, 0xc3, 0x68, 0xcb, 0x68,
	0x2f, 0x23, 0x46, 0x3c, 0xd2, 0xdd, 0x0e, 0x4a, 0xe8, 0xb4, 0xe9, 0x96, 0x90, 0x19, 0x2a, 0x2e,
	0x90, 0xd5, 0xcd, 0xaf, 0x0d, 0x76, 0x5c, 0x4a, 0xe1, 0x19, 0x32, 0xbc, 0x91, 0x99, 0x00, 0xf6,
	0xcf, 0x23, 0xdd, 0x46, 0x50, 0xa9, 0x38, 0x1e, 0xdd, 0x19, 0xa5, 0x52, 0x3c, 0x0e, 0x20, 0x19,
	0xc7, 0xc8, 0x1a, 0x86, 0x50, 0x2d, 0x15, 0x8c, 0x88, 0xf3, 0xe9, 0x59, 0x14, 0x29, 0xd0, 0x9a,
	0xfd, 0x37, 0x06, 0xd5, 0x52, 0xe1, 0xff, 0x00, 0x70, 0xcb, 0xe7, 0xa0, 0x58, 0xd3, 0xfa, 0x97,
	0xd8, 0xb9, 0xa2, 0x4d, 0xbb, 0x19, 0x6b, 0x79, 0xa4, 0xbb, 0xdb, 0xef, 0xfb, 0xbf, 0x49, 0xd5,
	0x2f, 0x96, 0xbf, 0x9b, 0x0d, 0x8d, 0x32, 0x58, 0x77, 0xe8, 0x2c, 0x08, 0x65, 0xdf, 0x52, 0xb9,
	0x48, 0x79, 0x32, 0x19, 0x70, 0x1d, 0xff, 0xcd, 0x78, 0xce, 0x87, 0x6f, 0x4b, 0x97, 0x2c, 0x96,
	0x2e, 0xf9, 0x58, 0xba, 0xe4, 0x65, 0xe5, 0xd6, 0x16, 0x2b, 0xb7, 0xf6, 0xbe, 0x72, 0x6b, 0xf7,
	0xa7, 0xe3, 0x04, 0xe3, 0x7c, 0xe4, 0x0b, 0x39, 0xe9, 0xd9, 0x8c, 0x8e, 0xcb, 0xcc, 0x4a, 0x6c,
	0x4f, 0x69, 0x56, 0x39, 0xa6, 0xe2, 0xdc, 0xf4, 0xa8, 0x69, 0x88, 0x27, 0x9f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xdd, 0xd7, 0x48, 0x7a, 0xef, 0x02, 0x00, 0x00,
}

func (m *MetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintMetadataRequest(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x38
	}
	if len(m.FeePayer) > 0 {
		i -= len(m.FeePayer)
		copy(dAtA[i:], m.FeePayer)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.FeePayer)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DaapAddress) > 0 {
		i -= len(m.DaapAddress)
		copy(dAtA[i:], m.DaapAddress)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.DaapAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.BlockHeight != 0 {
		i = encodeVarintMetadataRequest(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.EventNonce != 0 {
		i = encodeVarintMetadataRequest(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetadataRequestClaimHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataRequestClaimHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataRequestClaimHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeePayer) > 0 {
		i -= len(m.FeePayer)
		copy(dAtA[i:], m.FeePayer)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.FeePayer)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DaapAddress) > 0 {
		i -= len(m.DaapAddress)
		copy(dAtA[i:], m.DaapAddress)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.DaapAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.BlockHeight != 0 {
		i = encodeVarintMetadataRequest(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.EventNonce != 0 {
		i = encodeVarintMetadataRequest(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintMetadataRequest(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadataRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadataRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovMetadataRequest(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovMetadataRequest(uint64(m.BlockHeight))
	}
	l = len(m.DaapAddress)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	l = len(m.FeePayer)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovMetadataRequest(uint64(m.Status))
	}
	return n
}

func (m *MetadataRequestClaimHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovMetadataRequest(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovMetadataRequest(uint64(m.BlockHeight))
	}
	l = len(m.DaapAddress)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	l = len(m.FeePayer)
	if l > 0 {
		n += 1 + l + sovMetadataRequest(uint64(l))
	}
	return n
}

func sovMetadataRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadataRequest(x uint64) (n int) {
	return sovMetadataRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaapAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DaapAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeePayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeePayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= MetaTxStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataRequestClaimHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataRequestClaimHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataRequestClaimHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaapAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DaapAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeePayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeePayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadataRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadataRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadataRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadataRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadataRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadataRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadataRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadataRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadataRequest = fmt.Errorf("proto: unexpected end of group")
)
