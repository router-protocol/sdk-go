// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: routerchain/metastore/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MetaInfoQueryStatus int32

const (
	ALL      MetaInfoQueryStatus = 0
	PENDING  MetaInfoQueryStatus = 1
	APPROVED MetaInfoQueryStatus = 2
)

var MetaInfoQueryStatus_name = map[int32]string{
	0: "ALL",
	1: "PENDING",
	2: "APPROVED",
}

var MetaInfoQueryStatus_value = map[string]int32{
	"ALL":      0,
	"PENDING":  1,
	"APPROVED": 2,
}

func (x MetaInfoQueryStatus) String() string {
	return proto.EnumName(MetaInfoQueryStatus_name, int32(x))
}

func (MetaInfoQueryStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{0}
}

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type QueryGetMetaInfoRequest struct {
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QueryGetMetaInfoRequest) Reset()         { *m = QueryGetMetaInfoRequest{} }
func (m *QueryGetMetaInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMetaInfoRequest) ProtoMessage()    {}
func (*QueryGetMetaInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{2}
}
func (m *QueryGetMetaInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMetaInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMetaInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMetaInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMetaInfoRequest.Merge(m, src)
}
func (m *QueryGetMetaInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMetaInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMetaInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMetaInfoRequest proto.InternalMessageInfo

func (m *QueryGetMetaInfoRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *QueryGetMetaInfoRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryGetMetaInfoResponse struct {
	MetaInfo MetaInfo `protobuf:"bytes,1,opt,name=metaInfo,proto3" json:"metaInfo"`
}

func (m *QueryGetMetaInfoResponse) Reset()         { *m = QueryGetMetaInfoResponse{} }
func (m *QueryGetMetaInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMetaInfoResponse) ProtoMessage()    {}
func (*QueryGetMetaInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{3}
}
func (m *QueryGetMetaInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMetaInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMetaInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMetaInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMetaInfoResponse.Merge(m, src)
}
func (m *QueryGetMetaInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMetaInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMetaInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMetaInfoResponse proto.InternalMessageInfo

func (m *QueryGetMetaInfoResponse) GetMetaInfo() MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return MetaInfo{}
}

type QueryAllMetaInfoRequestByChainAndAddress struct {
	ChainIds   string              `protobuf:"bytes,1,opt,name=chain_ids,json=chainIds,proto3" json:"chain_ids,omitempty"`
	Address    string              `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Status     MetaInfoQueryStatus `protobuf:"varint,3,opt,name=status,proto3,enum=routerprotocol.routerchain.metastore.MetaInfoQueryStatus" json:"status,omitempty"`
	Pagination *query.PageRequest  `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) Reset() {
	*m = QueryAllMetaInfoRequestByChainAndAddress{}
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoRequestByChainAndAddress) ProtoMessage()    {}
func (*QueryAllMetaInfoRequestByChainAndAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{4}
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoRequestByChainAndAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoRequestByChainAndAddress.Merge(m, src)
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoRequestByChainAndAddress.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoRequestByChainAndAddress proto.InternalMessageInfo

func (m *QueryAllMetaInfoRequestByChainAndAddress) GetChainIds() string {
	if m != nil {
		return m.ChainIds
	}
	return ""
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) GetStatus() MetaInfoQueryStatus {
	if m != nil {
		return m.Status
	}
	return ALL
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoResponseByChainAndAddress struct {
	MetaInfo   []MetaInfo          `protobuf:"bytes,1,rep,name=metaInfo,proto3" json:"metaInfo"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) Reset() {
	*m = QueryAllMetaInfoResponseByChainAndAddress{}
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) String() string {
	return proto.CompactTextString(m)
}
func (*QueryAllMetaInfoResponseByChainAndAddress) ProtoMessage() {}
func (*QueryAllMetaInfoResponseByChainAndAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{5}
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoResponseByChainAndAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoResponseByChainAndAddress.Merge(m, src)
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoResponseByChainAndAddress.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoResponseByChainAndAddress proto.InternalMessageInfo

func (m *QueryAllMetaInfoResponseByChainAndAddress) GetMetaInfo() []MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return nil
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoRequest) Reset()         { *m = QueryAllMetaInfoRequest{} }
func (m *QueryAllMetaInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoRequest) ProtoMessage()    {}
func (*QueryAllMetaInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{6}
}
func (m *QueryAllMetaInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoRequest.Merge(m, src)
}
func (m *QueryAllMetaInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoRequest proto.InternalMessageInfo

func (m *QueryAllMetaInfoRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoResponse struct {
	MetaInfo   []MetaInfo          `protobuf:"bytes,1,rep,name=metaInfo,proto3" json:"metaInfo"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoResponse) Reset()         { *m = QueryAllMetaInfoResponse{} }
func (m *QueryAllMetaInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoResponse) ProtoMessage()    {}
func (*QueryAllMetaInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{7}
}
func (m *QueryAllMetaInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoResponse.Merge(m, src)
}
func (m *QueryAllMetaInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoResponse proto.InternalMessageInfo

func (m *QueryAllMetaInfoResponse) GetMetaInfo() []MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return nil
}

func (m *QueryAllMetaInfoResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetMetadataRequestRequest struct {
	ChainId    string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	EventNonce uint64 `protobuf:"varint,3,opt,name=event_nonce,json=eventNonce,proto3" json:"event_nonce,omitempty"`
}

func (m *QueryGetMetadataRequestRequest) Reset()         { *m = QueryGetMetadataRequestRequest{} }
func (m *QueryGetMetadataRequestRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMetadataRequestRequest) ProtoMessage()    {}
func (*QueryGetMetadataRequestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{8}
}
func (m *QueryGetMetadataRequestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMetadataRequestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMetadataRequestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMetadataRequestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMetadataRequestRequest.Merge(m, src)
}
func (m *QueryGetMetadataRequestRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMetadataRequestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMetadataRequestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMetadataRequestRequest proto.InternalMessageInfo

func (m *QueryGetMetadataRequestRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *QueryGetMetadataRequestRequest) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

type QueryGetMetadataRequestResponse struct {
	MetadataRequest MetadataRequest `protobuf:"bytes,1,opt,name=metadataRequest,proto3" json:"metadataRequest"`
}

func (m *QueryGetMetadataRequestResponse) Reset()         { *m = QueryGetMetadataRequestResponse{} }
func (m *QueryGetMetadataRequestResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMetadataRequestResponse) ProtoMessage()    {}
func (*QueryGetMetadataRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{9}
}
func (m *QueryGetMetadataRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMetadataRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMetadataRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMetadataRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMetadataRequestResponse.Merge(m, src)
}
func (m *QueryGetMetadataRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMetadataRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMetadataRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMetadataRequestResponse proto.InternalMessageInfo

func (m *QueryGetMetadataRequestResponse) GetMetadataRequest() MetadataRequest {
	if m != nil {
		return m.MetadataRequest
	}
	return MetadataRequest{}
}

type QueryAllMetadataRequestRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetadataRequestRequest) Reset()         { *m = QueryAllMetadataRequestRequest{} }
func (m *QueryAllMetadataRequestRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetadataRequestRequest) ProtoMessage()    {}
func (*QueryAllMetadataRequestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{10}
}
func (m *QueryAllMetadataRequestRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetadataRequestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetadataRequestRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetadataRequestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetadataRequestRequest.Merge(m, src)
}
func (m *QueryAllMetadataRequestRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetadataRequestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetadataRequestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetadataRequestRequest proto.InternalMessageInfo

func (m *QueryAllMetadataRequestRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetadataRequestResponse struct {
	MetadataRequest []MetadataRequest   `protobuf:"bytes,1,rep,name=metadataRequest,proto3" json:"metadataRequest"`
	Pagination      *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetadataRequestResponse) Reset()         { *m = QueryAllMetadataRequestResponse{} }
func (m *QueryAllMetadataRequestResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetadataRequestResponse) ProtoMessage()    {}
func (*QueryAllMetadataRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{11}
}
func (m *QueryAllMetadataRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetadataRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetadataRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetadataRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetadataRequestResponse.Merge(m, src)
}
func (m *QueryAllMetadataRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetadataRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetadataRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetadataRequestResponse proto.InternalMessageInfo

func (m *QueryAllMetadataRequestResponse) GetMetadataRequest() []MetadataRequest {
	if m != nil {
		return m.MetadataRequest
	}
	return nil
}

func (m *QueryAllMetadataRequestResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoRequestByAddress struct {
	Address    string             `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoRequestByAddress) Reset()         { *m = QueryAllMetaInfoRequestByAddress{} }
func (m *QueryAllMetaInfoRequestByAddress) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoRequestByAddress) ProtoMessage()    {}
func (*QueryAllMetaInfoRequestByAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{12}
}
func (m *QueryAllMetaInfoRequestByAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoRequestByAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoRequestByAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoRequestByAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoRequestByAddress.Merge(m, src)
}
func (m *QueryAllMetaInfoRequestByAddress) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoRequestByAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoRequestByAddress.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoRequestByAddress proto.InternalMessageInfo

func (m *QueryAllMetaInfoRequestByAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryAllMetaInfoRequestByAddress) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoResponseByAddress struct {
	MetaInfo   []MetaInfo          `protobuf:"bytes,1,rep,name=metaInfo,proto3" json:"metaInfo"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoResponseByAddress) Reset()         { *m = QueryAllMetaInfoResponseByAddress{} }
func (m *QueryAllMetaInfoResponseByAddress) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoResponseByAddress) ProtoMessage()    {}
func (*QueryAllMetaInfoResponseByAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{13}
}
func (m *QueryAllMetaInfoResponseByAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoResponseByAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoResponseByAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoResponseByAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoResponseByAddress.Merge(m, src)
}
func (m *QueryAllMetaInfoResponseByAddress) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoResponseByAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoResponseByAddress.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoResponseByAddress proto.InternalMessageInfo

func (m *QueryAllMetaInfoResponseByAddress) GetMetaInfo() []MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return nil
}

func (m *QueryAllMetaInfoResponseByAddress) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoRequestByChainID struct {
	ChainIds   string             `protobuf:"bytes,1,opt,name=chain_ids,json=chainIds,proto3" json:"chain_ids,omitempty"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoRequestByChainID) Reset()         { *m = QueryAllMetaInfoRequestByChainID{} }
func (m *QueryAllMetaInfoRequestByChainID) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoRequestByChainID) ProtoMessage()    {}
func (*QueryAllMetaInfoRequestByChainID) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{14}
}
func (m *QueryAllMetaInfoRequestByChainID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoRequestByChainID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoRequestByChainID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoRequestByChainID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoRequestByChainID.Merge(m, src)
}
func (m *QueryAllMetaInfoRequestByChainID) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoRequestByChainID) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoRequestByChainID.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoRequestByChainID proto.InternalMessageInfo

func (m *QueryAllMetaInfoRequestByChainID) GetChainIds() string {
	if m != nil {
		return m.ChainIds
	}
	return ""
}

func (m *QueryAllMetaInfoRequestByChainID) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMetaInfoResponseByChainID struct {
	MetaInfo   []MetaInfo          `protobuf:"bytes,1,rep,name=metaInfo,proto3" json:"metaInfo"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMetaInfoResponseByChainID) Reset()         { *m = QueryAllMetaInfoResponseByChainID{} }
func (m *QueryAllMetaInfoResponseByChainID) String() string { return proto.CompactTextString(m) }
func (*QueryAllMetaInfoResponseByChainID) ProtoMessage()    {}
func (*QueryAllMetaInfoResponseByChainID) Descriptor() ([]byte, []int) {
	return fileDescriptor_82bea34079496592, []int{15}
}
func (m *QueryAllMetaInfoResponseByChainID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMetaInfoResponseByChainID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMetaInfoResponseByChainID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMetaInfoResponseByChainID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMetaInfoResponseByChainID.Merge(m, src)
}
func (m *QueryAllMetaInfoResponseByChainID) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMetaInfoResponseByChainID) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMetaInfoResponseByChainID.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMetaInfoResponseByChainID proto.InternalMessageInfo

func (m *QueryAllMetaInfoResponseByChainID) GetMetaInfo() []MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return nil
}

func (m *QueryAllMetaInfoResponseByChainID) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func init() {
	proto.RegisterEnum("routerprotocol.routerchain.metastore.MetaInfoQueryStatus", MetaInfoQueryStatus_name, MetaInfoQueryStatus_value)
	proto.RegisterType((*QueryParamsRequest)(nil), "routerprotocol.routerchain.metastore.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "routerprotocol.routerchain.metastore.QueryParamsResponse")
	proto.RegisterType((*QueryGetMetaInfoRequest)(nil), "routerprotocol.routerchain.metastore.QueryGetMetaInfoRequest")
	proto.RegisterType((*QueryGetMetaInfoResponse)(nil), "routerprotocol.routerchain.metastore.QueryGetMetaInfoResponse")
	proto.RegisterType((*QueryAllMetaInfoRequestByChainAndAddress)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoRequestByChainAndAddress")
	proto.RegisterType((*QueryAllMetaInfoResponseByChainAndAddress)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoResponseByChainAndAddress")
	proto.RegisterType((*QueryAllMetaInfoRequest)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoRequest")
	proto.RegisterType((*QueryAllMetaInfoResponse)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoResponse")
	proto.RegisterType((*QueryGetMetadataRequestRequest)(nil), "routerprotocol.routerchain.metastore.QueryGetMetadataRequestRequest")
	proto.RegisterType((*QueryGetMetadataRequestResponse)(nil), "routerprotocol.routerchain.metastore.QueryGetMetadataRequestResponse")
	proto.RegisterType((*QueryAllMetadataRequestRequest)(nil), "routerprotocol.routerchain.metastore.QueryAllMetadataRequestRequest")
	proto.RegisterType((*QueryAllMetadataRequestResponse)(nil), "routerprotocol.routerchain.metastore.QueryAllMetadataRequestResponse")
	proto.RegisterType((*QueryAllMetaInfoRequestByAddress)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoRequestByAddress")
	proto.RegisterType((*QueryAllMetaInfoResponseByAddress)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoResponseByAddress")
	proto.RegisterType((*QueryAllMetaInfoRequestByChainID)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoRequestByChainID")
	proto.RegisterType((*QueryAllMetaInfoResponseByChainID)(nil), "routerprotocol.routerchain.metastore.QueryAllMetaInfoResponseByChainID")
}

func init() { proto.RegisterFile("routerchain/metastore/query.proto", fileDescriptor_82bea34079496592) }

var fileDescriptor_82bea34079496592 = []byte{
	// 996 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x97, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x3d, 0x4e, 0x48, 0xd2, 0x17, 0xa0, 0xd1, 0x34, 0x12, 0x66, 0xa9, 0x1c, 0x77, 0xc5,
	0x8f, 0x50, 0x95, 0x5d, 0x92, 0x0a, 0xd4, 0x20, 0x81, 0x70, 0x70, 0x62, 0xb9, 0x0a, 0x8e, 0xb3,
	0x91, 0x10, 0x20, 0x24, 0x6b, 0x6c, 0x4f, 0x1d, 0x4b, 0xf6, 0x8e, 0xeb, 0x19, 0x57, 0x44, 0x91,
	0x25, 0x84, 0x90, 0xa8, 0x72, 0x42, 0xe2, 0xc4, 0x21, 0x27, 0xfe, 0x86, 0x5e, 0x39, 0x42, 0x8f,
	0x45, 0x5c, 0x38, 0x21, 0x94, 0xf0, 0x47, 0x80, 0xe0, 0x80, 0x76, 0x66, 0xd6, 0x59, 0xaf, 0xed,
	0xd4, 0xf6, 0x5a, 0x28, 0xdc, 0x76, 0x76, 0x67, 0xbe, 0xf3, 0x3e, 0xdf, 0x79, 0xf3, 0xfc, 0x0c,
	0x37, 0x5a, 0xac, 0x2d, 0x68, 0xab, 0x7c, 0x40, 0x6a, 0xae, 0xdd, 0xa0, 0x82, 0x70, 0xc1, 0x5a,
	0xd4, 0xbe, 0xdf, 0xa6, 0xad, 0x43, 0xab, 0xd9, 0x62, 0x82, 0xe1, 0x97, 0xd5, 0x14, 0x39, 0x28,
	0xb3, 0xba, 0x15, 0x58, 0x61, 0x75, 0x57, 0x18, 0xcb, 0x55, 0x56, 0x65, 0x72, 0x8e, 0xed, 0x3d,
	0xa9, 0xb5, 0xc6, 0xf5, 0x2a, 0x63, 0xd5, 0x3a, 0xb5, 0x49, 0xb3, 0x66, 0x13, 0xd7, 0x65, 0x82,
	0x88, 0x1a, 0x73, 0xb9, 0xfe, 0x7a, 0xb3, 0xcc, 0x78, 0x83, 0x71, 0xbb, 0x44, 0xb8, 0xde, 0xd2,
	0x7e, 0xb0, 0x56, 0xa2, 0x82, 0xac, 0xd9, 0x4d, 0x52, 0xad, 0xb9, 0x72, 0xb2, 0x9e, 0x6b, 0x0e,
	0x0e, 0xb4, 0x49, 0x5a, 0xa4, 0xe1, 0xeb, 0xbd, 0x32, 0x78, 0x8e, 0xf7, 0x54, 0xac, 0xb9, 0xf7,
	0xfc, 0xa0, 0x6e, 0x0d, 0x9f, 0x56, 0x21, 0x82, 0x14, 0x5b, 0xf4, 0x7e, 0x9b, 0x72, 0xa1, 0x66,
	0x9b, 0xcb, 0x80, 0xf7, 0xbc, 0xd0, 0x0a, 0x72, 0x27, 0x47, 0x7d, 0x33, 0x09, 0x5c, 0xeb, 0x79,
	0xcb, 0x9b, 0xcc, 0xe5, 0x14, 0xdf, 0x85, 0x39, 0x15, 0x51, 0x02, 0xa5, 0xd0, 0xea, 0xe2, 0xfa,
	0x2d, 0x6b, 0x14, 0xf3, 0x2c, 0xa5, 0xb2, 0x39, 0xfb, 0xf8, 0xb7, 0x95, 0x98, 0xa3, 0x15, 0xcc,
	0x3c, 0xbc, 0x20, 0xb7, 0xc8, 0x52, 0xf1, 0x21, 0x15, 0x24, 0xe7, 0xde, 0x63, 0x7a, 0x77, 0xfc,
	0x22, 0x2c, 0x48, 0x89, 0x62, 0xad, 0x22, 0x37, 0xba, 0xe2, 0xcc, 0xcb, 0x71, 0xae, 0x82, 0x13,
	0x30, 0x4f, 0x2a, 0x95, 0x16, 0xe5, 0x3c, 0x11, 0x57, 0x5f, 0xf4, 0xd0, 0xac, 0x43, 0xa2, 0x5f,
	0x4f, 0xc7, 0x5d, 0x80, 0x85, 0x86, 0x7e, 0xa7, 0x23, 0xb7, 0x46, 0x8b, 0xdc, 0x57, 0xd2, 0xb1,
	0x77, 0x55, 0xcc, 0x7f, 0x10, 0xac, 0xca, 0xed, 0xd2, 0xf5, 0x7a, 0x28, 0xfc, 0xcd, 0xc3, 0x0f,
	0x3c, 0x95, 0xb4, 0x5b, 0x49, 0xab, 0xd0, 0xf0, 0x4b, 0x70, 0xc5, 0xe7, 0xe1, 0x1a, 0x68, 0x41,
	0x03, 0xf1, 0xe1, 0x44, 0x78, 0x0f, 0xe6, 0xb8, 0x20, 0xa2, 0xcd, 0x13, 0x33, 0x29, 0xb4, 0xfa,
	0xfc, 0xfa, 0xc6, 0x78, 0x31, 0xcb, 0xf0, 0xf6, 0xa5, 0x80, 0xa3, 0x85, 0xf0, 0x36, 0xc0, 0x79,
	0xea, 0x25, 0x66, 0xa5, 0x15, 0xaf, 0x5a, 0x2a, 0x4f, 0x2d, 0x2f, 0x4f, 0x2d, 0x75, 0x35, 0x74,
	0x9e, 0x5a, 0x05, 0x52, 0xa5, 0x1a, 0xcb, 0x09, 0xac, 0x34, 0x7f, 0x44, 0xf0, 0x7a, 0x3f, 0xbe,
	0x72, 0xbb, 0x9f, 0xbf, 0xd7, 0xfe, 0x99, 0xe8, 0xf6, 0xe3, 0x6c, 0x0f, 0x47, 0x5c, 0x72, 0xbc,
	0xf6, 0x54, 0x0e, 0x15, 0x5f, 0x0f, 0x08, 0xd1, 0x59, 0xd8, 0x7f, 0x8c, 0x21, 0xaf, 0xd0, 0xc4,
	0x5e, 0x3d, 0x42, 0x3a, 0x33, 0x07, 0x78, 0x75, 0x99, 0xad, 0xf9, 0x0c, 0x92, 0xc1, 0x0b, 0xe5,
	0xd5, 0x0e, 0x1f, 0xef, 0xe9, 0xf7, 0x74, 0x05, 0x16, 0xe9, 0x03, 0xea, 0x8a, 0xa2, 0xcb, 0xdc,
	0x32, 0x95, 0x09, 0x3c, 0xeb, 0x80, 0x7c, 0x95, 0xf7, 0xde, 0x98, 0x0f, 0x11, 0xac, 0x0c, 0x95,
	0xd7, 0xe6, 0x50, 0xb8, 0xda, 0xe8, 0xfd, 0xa4, 0x8f, 0xe1, 0xad, 0xd1, 0x3d, 0x0a, 0x2c, 0xd6,
	0x56, 0x85, 0x35, 0xcd, 0x03, 0x0d, 0xaa, 0xcf, 0x67, 0x00, 0xe8, 0xb4, 0x52, 0xe1, 0x67, 0x1f,
	0x7a, 0xd0, 0x56, 0x17, 0x41, 0xcf, 0x4c, 0x1b, 0x7a, 0x7a, 0x69, 0xf2, 0x15, 0x82, 0xd4, 0xd0,
	0x4a, 0xe8, 0x57, 0x80, 0x40, 0x91, 0x43, 0xbd, 0x45, 0x6e, 0x7b, 0x40, 0x1c, 0x93, 0x58, 0xfb,
	0x03, 0x82, 0x1b, 0xc3, 0x2b, 0xd2, 0xff, 0xa0, 0x12, 0x7d, 0x7d, 0x91, 0x8f, 0xb2, 0xa2, 0xe6,
	0x32, 0x17, 0xff, 0x92, 0xfc, 0x37, 0x56, 0xfa, 0xa1, 0x5c, 0x5e, 0x2b, 0x6f, 0x96, 0xe1, 0xda,
	0x80, 0x1f, 0x41, 0xbc, 0x04, 0x33, 0xe9, 0x9d, 0x9d, 0xa5, 0x98, 0x31, 0x7f, 0x7c, 0x92, 0xf2,
	0x1e, 0xbd, 0xb4, 0x2c, 0x6c, 0xe5, 0x33, 0xb9, 0x7c, 0x76, 0x09, 0x19, 0x8b, 0xc7, 0x27, 0x29,
	0x7f, 0x88, 0x0d, 0x58, 0x48, 0x17, 0x0a, 0xce, 0xee, 0x47, 0x5b, 0x99, 0xa5, 0xb8, 0xf1, 0xec,
	0xf1, 0x49, 0xaa, 0x3b, 0x36, 0x66, 0x1f, 0x7e, 0x9f, 0x8c, 0xad, 0x7f, 0xf1, 0x1c, 0x3c, 0x23,
	0xd5, 0xf1, 0x23, 0x04, 0x73, 0xaa, 0xc5, 0xc1, 0x77, 0x46, 0xb3, 0xa0, 0xbf, 0xe3, 0x32, 0x36,
	0x26, 0x58, 0xa9, 0xd0, 0xcd, 0xb7, 0xbf, 0xfc, 0xe5, 0x8f, 0x6f, 0xe3, 0x6f, 0x62, 0xcb, 0x56,
	0x6b, 0xde, 0xf0, 0x35, 0xfc, 0xf1, 0xe0, 0xae, 0x12, 0xff, 0x84, 0x60, 0xd1, 0xf7, 0x29, 0x5d,
	0xaf, 0xe3, 0x77, 0xc7, 0x08, 0xa1, 0x3f, 0x49, 0x8d, 0xf7, 0x26, 0x5d, 0xae, 0x31, 0x36, 0x24,
	0xc6, 0x6d, 0xbc, 0x36, 0x2a, 0x46, 0xb7, 0xf1, 0xc5, 0x7f, 0x22, 0x58, 0x0e, 0x90, 0x9c, 0xdf,
	0xf7, 0xed, 0x48, 0x48, 0x5d, 0x1d, 0x23, 0x1b, 0x8d, 0xad, 0x2b, 0x64, 0xee, 0x4a, 0xc8, 0x1c,
	0xce, 0x8e, 0x0d, 0xc9, 0xed, 0xd2, 0x61, 0x51, 0x57, 0x4d, 0xfb, 0x48, 0x3f, 0x74, 0xf0, 0x77,
	0x71, 0xb8, 0xde, 0x83, 0x1e, 0x6e, 0xbe, 0xf2, 0x11, 0x2d, 0x08, 0xe9, 0x19, 0xbb, 0x51, 0xad,
	0x08, 0x09, 0x9a, 0x1f, 0x4b, 0x4b, 0x1c, 0x5c, 0x18, 0xdb, 0x12, 0xfb, 0xa8, 0x5b, 0x0c, 0x3b,
	0xe7, 0x96, 0xd8, 0x47, 0xaa, 0xd9, 0xed, 0xe0, 0xbf, 0xc3, 0x69, 0xe1, 0xd7, 0xae, 0xed, 0x69,
	0x78, 0x92, 0xcb, 0x44, 0x4f, 0x0b, 0x2d, 0x64, 0x3a, 0xd2, 0x83, 0x1d, 0x7c, 0x77, 0xb2, 0xb4,
	0xf0, 0x6d, 0x08, 0x1a, 0x82, 0xff, 0x42, 0x70, 0x35, 0xd4, 0x0c, 0xe0, 0xcc, 0x18, 0x01, 0x0f,
	0xed, 0xfb, 0x8c, 0xad, 0x88, 0x2a, 0xfa, 0xc2, 0x7f, 0x22, 0xa1, 0xf7, 0xf1, 0xde, 0x38, 0xd0,
	0xc1, 0xbf, 0xb0, 0xe7, 0xb8, 0x1d, 0xfb, 0x28, 0xd0, 0x6e, 0x76, 0xf0, 0x19, 0x02, 0x1c, 0xda,
	0xd6, 0xab, 0x70, 0x99, 0xf1, 0xcf, 0x2b, 0x22, 0xfe, 0xf0, 0x46, 0xcf, 0x7c, 0x5f, 0xe2, 0xbf,
	0x83, 0xef, 0x4c, 0x8a, 0xbf, 0xb9, 0xff, 0xf8, 0x34, 0x89, 0x9e, 0x9c, 0x26, 0xd1, 0xef, 0xa7,
	0x49, 0xf4, 0xcd, 0x59, 0x32, 0xf6, 0xe4, 0x2c, 0x19, 0xfb, 0xf5, 0x2c, 0x19, 0xfb, 0x74, 0xa3,
	0x5a, 0x13, 0x07, 0xed, 0x92, 0x55, 0x66, 0x8d, 0x8b, 0xd5, 0x3f, 0x0f, 0xe8, 0x8b, 0xc3, 0x26,
	0xe5, 0xa5, 0x39, 0x39, 0xf1, 0xf6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x51, 0x04, 0x3c,
	0x3b, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// Queries all MetaInfo items
	MetaInfoAll(ctx context.Context, in *QueryAllMetaInfoRequest, opts ...grpc.CallOption) (*QueryAllMetaInfoResponse, error)
	// Queries a list of MetaInfo items by dapp address
	MetaInfoAllByAddress(ctx context.Context, in *QueryAllMetaInfoRequestByAddress, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByAddress, error)
	// Queries MetaInfo item by dapp address and chain id.
	MetaInfoAllByChainAndAddress(ctx context.Context, in *QueryAllMetaInfoRequestByChainAndAddress, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByChainAndAddress, error)
	// Queries a list of MetaInfo items by chain id
	MetaInfoAllByChainID(ctx context.Context, in *QueryAllMetaInfoRequestByChainID, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByChainID, error)
	// Queries a list of MetadataRequest items.
	MetadataRequest(ctx context.Context, in *QueryGetMetadataRequestRequest, opts ...grpc.CallOption) (*QueryGetMetadataRequestResponse, error)
	// Queries a list of all MetadataRequest items.
	MetadataRequestAll(ctx context.Context, in *QueryAllMetadataRequestRequest, opts ...grpc.CallOption) (*QueryAllMetadataRequestResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetaInfoAll(ctx context.Context, in *QueryAllMetaInfoRequest, opts ...grpc.CallOption) (*QueryAllMetaInfoResponse, error) {
	out := new(QueryAllMetaInfoResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetaInfoAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetaInfoAllByAddress(ctx context.Context, in *QueryAllMetaInfoRequestByAddress, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByAddress, error) {
	out := new(QueryAllMetaInfoResponseByAddress)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetaInfoAllByChainAndAddress(ctx context.Context, in *QueryAllMetaInfoRequestByChainAndAddress, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByChainAndAddress, error) {
	out := new(QueryAllMetaInfoResponseByChainAndAddress)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByChainAndAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetaInfoAllByChainID(ctx context.Context, in *QueryAllMetaInfoRequestByChainID, opts ...grpc.CallOption) (*QueryAllMetaInfoResponseByChainID, error) {
	out := new(QueryAllMetaInfoResponseByChainID)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByChainID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetadataRequest(ctx context.Context, in *QueryGetMetadataRequestRequest, opts ...grpc.CallOption) (*QueryGetMetadataRequestResponse, error) {
	out := new(QueryGetMetadataRequestResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetadataRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) MetadataRequestAll(ctx context.Context, in *QueryAllMetadataRequestRequest, opts ...grpc.CallOption) (*QueryAllMetadataRequestResponse, error) {
	out := new(QueryAllMetadataRequestResponse)
	err := c.cc.Invoke(ctx, "/routerprotocol.routerchain.metastore.Query/MetadataRequestAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Queries all MetaInfo items
	MetaInfoAll(context.Context, *QueryAllMetaInfoRequest) (*QueryAllMetaInfoResponse, error)
	// Queries a list of MetaInfo items by dapp address
	MetaInfoAllByAddress(context.Context, *QueryAllMetaInfoRequestByAddress) (*QueryAllMetaInfoResponseByAddress, error)
	// Queries MetaInfo item by dapp address and chain id.
	MetaInfoAllByChainAndAddress(context.Context, *QueryAllMetaInfoRequestByChainAndAddress) (*QueryAllMetaInfoResponseByChainAndAddress, error)
	// Queries a list of MetaInfo items by chain id
	MetaInfoAllByChainID(context.Context, *QueryAllMetaInfoRequestByChainID) (*QueryAllMetaInfoResponseByChainID, error)
	// Queries a list of MetadataRequest items.
	MetadataRequest(context.Context, *QueryGetMetadataRequestRequest) (*QueryGetMetadataRequestResponse, error)
	// Queries a list of all MetadataRequest items.
	MetadataRequestAll(context.Context, *QueryAllMetadataRequestRequest) (*QueryAllMetadataRequestResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) MetaInfoAll(ctx context.Context, req *QueryAllMetaInfoRequest) (*QueryAllMetaInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaInfoAll not implemented")
}
func (*UnimplementedQueryServer) MetaInfoAllByAddress(ctx context.Context, req *QueryAllMetaInfoRequestByAddress) (*QueryAllMetaInfoResponseByAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaInfoAllByAddress not implemented")
}
func (*UnimplementedQueryServer) MetaInfoAllByChainAndAddress(ctx context.Context, req *QueryAllMetaInfoRequestByChainAndAddress) (*QueryAllMetaInfoResponseByChainAndAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaInfoAllByChainAndAddress not implemented")
}
func (*UnimplementedQueryServer) MetaInfoAllByChainID(ctx context.Context, req *QueryAllMetaInfoRequestByChainID) (*QueryAllMetaInfoResponseByChainID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaInfoAllByChainID not implemented")
}
func (*UnimplementedQueryServer) MetadataRequest(ctx context.Context, req *QueryGetMetadataRequestRequest) (*QueryGetMetadataRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetadataRequest not implemented")
}
func (*UnimplementedQueryServer) MetadataRequestAll(ctx context.Context, req *QueryAllMetadataRequestRequest) (*QueryAllMetadataRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetadataRequestAll not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetaInfoAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMetaInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetaInfoAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetaInfoAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetaInfoAll(ctx, req.(*QueryAllMetaInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetaInfoAllByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMetaInfoRequestByAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetaInfoAllByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetaInfoAllByAddress(ctx, req.(*QueryAllMetaInfoRequestByAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetaInfoAllByChainAndAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMetaInfoRequestByChainAndAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetaInfoAllByChainAndAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByChainAndAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetaInfoAllByChainAndAddress(ctx, req.(*QueryAllMetaInfoRequestByChainAndAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetaInfoAllByChainID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMetaInfoRequestByChainID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetaInfoAllByChainID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetaInfoAllByChainID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetaInfoAllByChainID(ctx, req.(*QueryAllMetaInfoRequestByChainID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetadataRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMetadataRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetadataRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetadataRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetadataRequest(ctx, req.(*QueryGetMetadataRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_MetadataRequestAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMetadataRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).MetadataRequestAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routerprotocol.routerchain.metastore.Query/MetadataRequestAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).MetadataRequestAll(ctx, req.(*QueryAllMetadataRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routerprotocol.routerchain.metastore.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "MetaInfoAll",
			Handler:    _Query_MetaInfoAll_Handler,
		},
		{
			MethodName: "MetaInfoAllByAddress",
			Handler:    _Query_MetaInfoAllByAddress_Handler,
		},
		{
			MethodName: "MetaInfoAllByChainAndAddress",
			Handler:    _Query_MetaInfoAllByChainAndAddress_Handler,
		},
		{
			MethodName: "MetaInfoAllByChainID",
			Handler:    _Query_MetaInfoAllByChainID_Handler,
		},
		{
			MethodName: "MetadataRequest",
			Handler:    _Query_MetadataRequest_Handler,
		},
		{
			MethodName: "MetadataRequestAll",
			Handler:    _Query_MetadataRequestAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "routerchain/metastore/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetMetaInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMetaInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMetaInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMetaInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMetaInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMetaInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.MetaInfo.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Status != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainIds) > 0 {
		i -= len(m.ChainIds)
		copy(dAtA[i:], m.ChainIds)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ChainIds)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaInfo) > 0 {
		for iNdEx := len(m.MetaInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetaInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaInfo) > 0 {
		for iNdEx := len(m.MetaInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetaInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMetadataRequestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMetadataRequestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMetadataRequestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EventNonce != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMetadataRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMetadataRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMetadataRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.MetadataRequest.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllMetadataRequestRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetadataRequestRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetadataRequestRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetadataRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetadataRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetadataRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetadataRequest) > 0 {
		for iNdEx := len(m.MetadataRequest) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataRequest[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoRequestByAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoRequestByAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoRequestByAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoResponseByAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoResponseByAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoResponseByAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaInfo) > 0 {
		for iNdEx := len(m.MetaInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetaInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoRequestByChainID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoRequestByChainID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoRequestByChainID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainIds) > 0 {
		i -= len(m.ChainIds)
		copy(dAtA[i:], m.ChainIds)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ChainIds)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMetaInfoResponseByChainID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMetaInfoResponseByChainID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMetaInfoResponseByChainID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaInfo) > 0 {
		for iNdEx := len(m.MetaInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetaInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetMetaInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMetaInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MetaInfo.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllMetaInfoRequestByChainAndAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainIds)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovQuery(uint64(m.Status))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoResponseByChainAndAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetaInfo) > 0 {
		for _, e := range m.MetaInfo {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetaInfo) > 0 {
		for _, e := range m.MetaInfo {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMetadataRequestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovQuery(uint64(m.EventNonce))
	}
	return n
}

func (m *QueryGetMetadataRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MetadataRequest.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllMetadataRequestRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetadataRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetadataRequest) > 0 {
		for _, e := range m.MetadataRequest {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoRequestByAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoResponseByAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetaInfo) > 0 {
		for _, e := range m.MetaInfo {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoRequestByChainID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainIds)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMetaInfoResponseByChainID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetaInfo) > 0 {
		for _, e := range m.MetaInfo {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMetaInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMetaInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMetaInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMetaInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMetaInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMetaInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MetaInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoRequestByChainAndAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByChainAndAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByChainAndAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= MetaInfoQueryStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoResponseByChainAndAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByChainAndAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByChainAndAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaInfo = append(m.MetaInfo, MetaInfo{})
			if err := m.MetaInfo[len(m.MetaInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaInfo = append(m.MetaInfo, MetaInfo{})
			if err := m.MetaInfo[len(m.MetaInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMetadataRequestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMetadataRequestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMetadataRequestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMetadataRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMetadataRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMetadataRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MetadataRequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetadataRequestRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetadataRequestRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetadataRequestRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetadataRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetadataRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetadataRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataRequest = append(m.MetadataRequest, MetadataRequest{})
			if err := m.MetadataRequest[len(m.MetadataRequest)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoRequestByAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoResponseByAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaInfo = append(m.MetaInfo, MetaInfo{})
			if err := m.MetaInfo[len(m.MetaInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoRequestByChainID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByChainID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoRequestByChainID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMetaInfoResponseByChainID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByChainID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMetaInfoResponseByChainID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaInfo = append(m.MetaInfo, MetaInfo{})
			if err := m.MetaInfo[len(m.MetaInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
